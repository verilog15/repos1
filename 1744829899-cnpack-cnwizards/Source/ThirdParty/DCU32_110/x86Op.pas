unit x86Op;
{ Automatically generated from "x86reference_AX.xml"}
{  (version 1.11, file date 03.08.2020 8:46:26 GMT) }
{ ! DO NOT EDIT THIS FILE ! }
interface

uses x86Defs;

const
  fs_O=[f_O];
  fs_D=[f_D];
  fs_I=[f_I];
  fs_S=[f_S];
  fs_OS=[f_O,f_S];
  fs_Z=[f_Z];
  fs_OSZ=[f_O,f_S,f_Z];
  fs_A=[f_A];
  fs_OA=[f_O,f_A];
  fs_P=[f_P];
  fs_SZP=[f_S,f_Z,f_P];
  fs_OSZP=[f_O,f_S,f_Z,f_P];
  fs_AP=[f_A,f_P];
  fs_OSAP=[f_O,f_S,f_A,f_P];
  fs_SZAP=[f_S,f_Z,f_A,f_P];
  fs_OSZAP=[f_O,f_S,f_Z,f_A,f_P];
  fs_C=[f_C];
  fs_OC=[f_O,f_C];
  fs_ZC=[f_Z,f_C];
  fs_AC=[f_A,f_C];
  fs_OAC=[f_O,f_A,f_C];
  fs_ZPC=[f_Z,f_P,f_C];
  fs_OZPC=[f_O,f_Z,f_P,f_C];
  fs_OSZPC=[f_O,f_S,f_Z,f_P,f_C];
  fs_OSAPC=[f_O,f_S,f_A,f_P,f_C];
  fs_SZAPC=[f_S,f_Z,f_A,f_P,f_C];
  fs_OSZAPC=[f_O,f_S,f_Z,f_A,f_P,f_C];

{One-byte opcodes}
const
  OneByte: TPrimaryOpcodes = (
    {00}(Base:0; Count:1; Mnem:oc_ADD; Modes:[ee_r]),
    {01}(Base:1; Count:1; Mnem:oc_ADD; Modes:[ee_r]),
    {02}(Base:2; Count:1; Mnem:oc_ADD; Modes:[ee_r]),
    {03}(Base:3; Count:1; Mnem:oc_ADD; Modes:[ee_r]),
    {04}(Base:4; Count:1; Mnem:oc_ADD; Modes:[ee_r]),
    {05}(Base:5; Count:1; Mnem:oc_ADD; Modes:[ee_r]),
    {06}(Base:6; Count:2; Mnem:oc_PUSH; Modes:[ee_r,ee_e]),
    {07}(Base:8; Count:2; Mnem:oc_POP; Modes:[ee_r,ee_e]),
    {08}(Base:10; Count:1; Mnem:oc_OR; Modes:[ee_r]),
    {09}(Base:11; Count:1; Mnem:oc_OR; Modes:[ee_r]),
    {0A}(Base:12; Count:1; Mnem:oc_OR; Modes:[ee_r]),
    {0B}(Base:13; Count:1; Mnem:oc_OR; Modes:[ee_r]),
    {0C}(Base:14; Count:1; Mnem:oc_OR; Modes:[ee_r]),
    {0D}(Base:15; Count:1; Mnem:oc_OR; Modes:[ee_r]),
    {0E}(Base:16; Count:2; Mnem:oc_PUSH; Modes:[ee_r,ee_e]),
    {0F}(Base:18; Count:3; Mnem:oc_POP; Modes:[ee_r]),
    {10}(Base:21; Count:1; Mnem:oc_ADC; Modes:[ee_r]),
    {11}(Base:22; Count:1; Mnem:oc_ADC; Modes:[ee_r]),
    {12}(Base:23; Count:1; Mnem:oc_ADC; Modes:[ee_r]),
    {13}(Base:24; Count:1; Mnem:oc_ADC; Modes:[ee_r]),
    {14}(Base:25; Count:1; Mnem:oc_ADC; Modes:[ee_r]),
    {15}(Base:26; Count:1; Mnem:oc_ADC; Modes:[ee_r]),
    {16}(Base:27; Count:2; Mnem:oc_PUSH; Modes:[ee_r,ee_e]),
    {17}(Base:29; Count:2; Mnem:oc_POP; Modes:[ee_r,ee_e]),
    {18}(Base:31; Count:1; Mnem:oc_SBB; Modes:[ee_r]),
    {19}(Base:32; Count:1; Mnem:oc_SBB; Modes:[ee_r]),
    {1A}(Base:33; Count:1; Mnem:oc_SBB; Modes:[ee_r]),
    {1B}(Base:34; Count:1; Mnem:oc_SBB; Modes:[ee_r]),
    {1C}(Base:35; Count:1; Mnem:oc_SBB; Modes:[ee_r]),
    {1D}(Base:36; Count:1; Mnem:oc_SBB; Modes:[ee_r]),
    {1E}(Base:37; Count:2; Mnem:oc_PUSH; Modes:[ee_r,ee_e]),
    {1F}(Base:39; Count:2; Mnem:oc_POP; Modes:[ee_r,ee_e]),
    {20}(Base:41; Count:1; Mnem:oc_AND; Modes:[ee_r]),
    {21}(Base:42; Count:1; Mnem:oc_AND; Modes:[ee_r]),
    {22}(Base:43; Count:1; Mnem:oc_AND; Modes:[ee_r]),
    {23}(Base:44; Count:1; Mnem:oc_AND; Modes:[ee_r]),
    {24}(Base:45; Count:1; Mnem:oc_AND; Modes:[ee_r]),
    {25}(Base:46; Count:1; Mnem:oc_AND; Modes:[ee_r]),
    {26}(Base:47; Count:3; Mnem:oc_ES; Modes:[ee_r,ee_e]),
    {27}(Base:50; Count:2; Mnem:oc_DAA; Modes:[ee_r,ee_e]),
    {28}(Base:52; Count:1; Mnem:oc_SUB; Modes:[ee_r]),
    {29}(Base:53; Count:1; Mnem:oc_SUB; Modes:[ee_r]),
    {2A}(Base:54; Count:1; Mnem:oc_SUB; Modes:[ee_r]),
    {2B}(Base:55; Count:1; Mnem:oc_SUB; Modes:[ee_r]),
    {2C}(Base:56; Count:1; Mnem:oc_SUB; Modes:[ee_r]),
    {2D}(Base:57; Count:1; Mnem:oc_SUB; Modes:[ee_r]),
    {2E}(Base:58; Count:3; Modes:[ee_r,ee_e]),
    {2F}(Base:61; Count:2; Mnem:oc_DAS; Modes:[ee_r,ee_e]),
    {30}(Base:63; Count:1; Mnem:oc_XOR; Modes:[ee_r]),
    {31}(Base:64; Count:1; Mnem:oc_XOR; Modes:[ee_r]),
    {32}(Base:65; Count:1; Mnem:oc_XOR; Modes:[ee_r]),
    {33}(Base:66; Count:1; Mnem:oc_XOR; Modes:[ee_r]),
    {34}(Base:67; Count:1; Mnem:oc_XOR; Modes:[ee_r]),
    {35}(Base:68; Count:1; Mnem:oc_XOR; Modes:[ee_r]),
    {36}(Base:69; Count:3; Mnem:oc_SS; Modes:[ee_r,ee_e]),
    {37}(Base:72; Count:2; Mnem:oc_AAA; Modes:[ee_r,ee_e]),
    {38}(Base:74; Count:1; Mnem:oc_CMP; Modes:[ee_r]),
    {39}(Base:75; Count:1; Mnem:oc_CMP; Modes:[ee_r]),
    {3A}(Base:76; Count:1; Mnem:oc_CMP; Modes:[ee_r]),
    {3B}(Base:77; Count:1; Mnem:oc_CMP; Modes:[ee_r]),
    {3C}(Base:78; Count:1; Mnem:oc_CMP; Modes:[ee_r]),
    {3D}(Base:79; Count:1; Mnem:oc_CMP; Modes:[ee_r]),
    {3E}(Base:80; Count:3; Modes:[ee_r,ee_e]),
    {3F}(Base:83; Count:2; Mnem:oc_AAS; Modes:[ee_r,ee_e]),
    {40}(Base:85; Count:2; Dep:[ed_Z]; Modes:[ee_r,ee_e]),
    {41}(Base:87; Count:1; Mnem:oc_REX_B; Dep:[ed_Z]; Modes:[ee_e]),
    {42}(Base:88; Count:1; Mnem:oc_REX_X; Dep:[ed_Z]; Modes:[ee_e]),
    {43}(Base:89; Count:1; Mnem:oc_REX_XB; Dep:[ed_Z]; Modes:[ee_e]),
    {44}(Base:90; Count:1; Mnem:oc_REX_R; Dep:[ed_Z]; Modes:[ee_e]),
    {45}(Base:91; Count:1; Mnem:oc_REX_RB; Dep:[ed_Z]; Modes:[ee_e]),
    {46}(Base:92; Count:1; Mnem:oc_REX_RX; Dep:[ed_Z]; Modes:[ee_e]),
    {47}(Base:93; Count:1; Mnem:oc_REX_RXB; Dep:[ed_Z]; Modes:[ee_e]),
    {48}(Base:94; Count:2; Dep:[ed_Z]; Modes:[ee_r,ee_e]),
    {49}(Base:96; Count:1; Mnem:oc_REX_WB; Dep:[ed_Z]; Modes:[ee_e]),
    {4A}(Base:97; Count:1; Mnem:oc_REX_WX; Dep:[ed_Z]; Modes:[ee_e]),
    {4B}(Base:98; Count:1; Mnem:oc_REX_WXB; Dep:[ed_Z]; Modes:[ee_e]),
    {4C}(Base:99; Count:1; Mnem:oc_REX_WR; Dep:[ed_Z]; Modes:[ee_e]),
    {4D}(Base:100; Count:1; Mnem:oc_REX_WRB; Dep:[ed_Z]; Modes:[ee_e]),
    {4E}(Base:101; Count:1; Mnem:oc_REX_WRX; Dep:[ed_Z]; Modes:[ee_e]),
    {4F}(Base:102; Count:1; Mnem:oc_REX_WRXB; Dep:[ed_Z]; Modes:[ee_e]),
    {50}(Base:103; Count:2; Mnem:oc_PUSH; Dep:[ed_Z]; Modes:[ee_r,ee_e]),
    {51}(Dep:[ed_Z]),
    {52}(Dep:[ed_Z]),
    {53}(Dep:[ed_Z]),
    {54}(Dep:[ed_Z]),
    {55}(Dep:[ed_Z]),
    {56}(Dep:[ed_Z]),
    {57}(Dep:[ed_Z]),
    {58}(Base:105; Count:2; Mnem:oc_POP; Dep:[ed_Z]; Modes:[ee_r,ee_e]),
    {59}(Dep:[ed_Z]),
    {5A}(Dep:[ed_Z]),
    {5B}(Dep:[ed_Z]),
    {5C}(Dep:[ed_Z]),
    {5D}(Dep:[ed_Z]),
    {5E}(Dep:[ed_Z]),
    {5F}(Dep:[ed_Z]),
    {60}(Base:107; Count:3; Modes:[ee_r,ee_e]),
    {61}(Base:110; Count:3; Modes:[ee_r,ee_e]),
    {62}(Base:113; Count:2; Mnem:oc_BOUND; Modes:[ee_r,ee_e]),
    {63}(Base:115; Count:2; Modes:[ee_r,ee_e]),
    {64}(Base:117; Count:3; Modes:[ee_r]),
    {65}(Base:120; Count:2; Mnem:oc_GS; Modes:[ee_r]),
    {66}(Base:122; Count:2; Modes:[ee_r]),
    {67}(Base:124; Count:1; Modes:[ee_r]),
    {68}(Base:125; Count:1; Mnem:oc_PUSH; Modes:[ee_r]),
    {69}(Base:126; Count:1; Mnem:oc_IMUL; Modes:[ee_r]),
    {6A}(Base:127; Count:1; Mnem:oc_PUSH; Modes:[ee_r]),
    {6B}(Base:128; Count:1; Mnem:oc_IMUL; Modes:[ee_r]),
    {6C}(Base:129; Count:1; Modes:[ee_r]),
    {6D}(Base:130; Count:2; Modes:[ee_r]),
    {6E}(Base:132; Count:1; Modes:[ee_r]),
    {6F}(Base:133; Count:2; Modes:[ee_r]),
    {70}(Base:135; Count:1; Mnem:oc_JO; Modes:[ee_r]),
    {71}(Base:136; Count:1; Mnem:oc_JNO; Modes:[ee_r]),
    {72}(Base:137; Count:1; Modes:[ee_r]),
    {73}(Base:138; Count:1; Modes:[ee_r]),
    {74}(Base:139; Count:1; Modes:[ee_r]),
    {75}(Base:140; Count:1; Modes:[ee_r]),
    {76}(Base:141; Count:1; Modes:[ee_r]),
    {77}(Base:142; Count:1; Modes:[ee_r]),
    {78}(Base:143; Count:1; Mnem:oc_JS; Modes:[ee_r]),
    {79}(Base:144; Count:1; Mnem:oc_JNS; Modes:[ee_r]),
    {7A}(Base:145; Count:1; Modes:[ee_r]),
    {7B}(Base:146; Count:1; Modes:[ee_r]),
    {7C}(Base:147; Count:1; Modes:[ee_r]),
    {7D}(Base:148; Count:1; Modes:[ee_r]),
    {7E}(Base:149; Count:1; Modes:[ee_r]),
    {7F}(Base:150; Count:1; Modes:[ee_r]),
    {80}(Base:151; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {81}(Base:159; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {82}(Base:167; Count:9; Dep:[ed_OpcdExt]; Modes:[ee_r,ee_e]),
    {83}(Base:176; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {84}(Base:184; Count:1; Mnem:oc_TEST; Modes:[ee_r]),
    {85}(Base:185; Count:1; Mnem:oc_TEST; Modes:[ee_r]),
    {86}(Base:186; Count:1; Mnem:oc_XCHG; Modes:[ee_r]),
    {87}(Base:187; Count:1; Mnem:oc_XCHG; Modes:[ee_r]),
    {88}(Base:188; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {89}(Base:189; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {8A}(Base:190; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {8B}(Base:191; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {8C}(Base:192; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {8D}(Base:193; Count:1; Mnem:oc_LEA; Modes:[ee_r]),
    {8E}(Base:194; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {8F}(Base:195; Count:2; Mnem:oc_POP; Dep:[ed_OpcdExt]; Modes:[ee_r,ee_e]),
    {90}(Base:197; Count:4; Dep:[ed_Pref,ed_Z]; Modes:[ee_r]),
    {91}(Dep:[ed_Z]),
    {92}(Dep:[ed_Z]),
    {93}(Dep:[ed_Z]),
    {94}(Dep:[ed_Z]),
    {95}(Dep:[ed_Z]),
    {96}(Dep:[ed_Z]),
    {97}(Dep:[ed_Z]),
    {98}(Base:201; Count:3; Modes:[ee_r,ee_e]),
    {99}(Base:204; Count:3; Modes:[ee_r,ee_e]),
    {9A}(Base:207; Count:2; Mnem:oc_CALLF; Modes:[ee_r,ee_e]),
    {9B}(Base:209; Count:2; Modes:[ee_r]),
    {9C}(Base:211; Count:3; Modes:[ee_r,ee_e]),
    {9D}(Base:214; Count:3; Modes:[ee_r,ee_e]),
    {9E}(Base:217; Count:1; Mnem:oc_SAHF; Modes:[ee_r]),
    {9F}(Base:218; Count:1; Mnem:oc_LAHF; Modes:[ee_r]),
    {A0}(Base:219; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {A1}(Base:220; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {A2}(Base:221; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {A3}(Base:222; Count:1; Mnem:oc_MOV; Modes:[ee_r]),
    {A4}(Base:223; Count:1; Modes:[ee_r]),
    {A5}(Base:224; Count:3; Modes:[ee_r,ee_e]),
    {A6}(Base:227; Count:1; Modes:[ee_r]),
    {A7}(Base:228; Count:3; Modes:[ee_r,ee_e]),
    {A8}(Base:231; Count:1; Mnem:oc_TEST; Modes:[ee_r]),
    {A9}(Base:232; Count:1; Mnem:oc_TEST; Modes:[ee_r]),
    {AA}(Base:233; Count:1; Modes:[ee_r]),
    {AB}(Base:234; Count:3; Modes:[ee_r,ee_e]),
    {AC}(Base:237; Count:1; Modes:[ee_r]),
    {AD}(Base:238; Count:3; Modes:[ee_r,ee_e]),
    {AE}(Base:241; Count:1; Modes:[ee_r]),
    {AF}(Base:242; Count:3; Modes:[ee_r,ee_e]),
    {B0}(Base:245; Count:1; Mnem:oc_MOV; Dep:[ed_Z]; Modes:[ee_r]),
    {B1}(Dep:[ed_Z]),
    {B2}(Dep:[ed_Z]),
    {B3}(Dep:[ed_Z]),
    {B4}(Dep:[ed_Z]),
    {B5}(Dep:[ed_Z]),
    {B6}(Dep:[ed_Z]),
    {B7}(Dep:[ed_Z]),
    {B8}(Base:246; Count:1; Mnem:oc_MOV; Dep:[ed_Z]; Modes:[ee_r]),
    {B9}(Dep:[ed_Z]),
    {BA}(Dep:[ed_Z]),
    {BB}(Dep:[ed_Z]),
    {BC}(Dep:[ed_Z]),
    {BD}(Dep:[ed_Z]),
    {BE}(Dep:[ed_Z]),
    {BF}(Dep:[ed_Z]),
    {C0}(Base:247; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {C1}(Base:255; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {C2}(Base:263; Count:1; Mnem:oc_RETN; Modes:[ee_r]),
    {C3}(Base:264; Count:1; Mnem:oc_RETN; Modes:[ee_r]),
    {C4}(Base:265; Count:2; Mnem:oc_LES; Modes:[ee_r,ee_e]),
    {C5}(Base:267; Count:2; Mnem:oc_LDS; Modes:[ee_r,ee_e]),
    {C6}(Base:269; Count:1; Mnem:oc_MOV; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {C7}(Base:270; Count:1; Mnem:oc_MOV; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {C8}(Base:271; Count:2; Mnem:oc_ENTER; Modes:[ee_r,ee_e]),
    {C9}(Base:273; Count:2; Mnem:oc_LEAVE; Modes:[ee_r,ee_e]),
    {CA}(Base:275; Count:1; Mnem:oc_RETF; Modes:[ee_r]),
    {CB}(Base:276; Count:1; Mnem:oc_RETF; Modes:[ee_r]),
    {CC}(Base:277; Count:1; Mnem:oc_INT; Modes:[ee_r]),
    {CD}(Base:278; Count:1; Mnem:oc_INT; Modes:[ee_r]),
    {CE}(Base:279; Count:1; Mnem:oc_INTO; Modes:[ee_r]),
    {CF}(Base:280; Count:3; Modes:[ee_r,ee_e]),
    {D0}(Base:283; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {D1}(Base:291; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {D2}(Base:299; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {D3}(Base:307; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {D4}(Base:315; Count:3; Dep:[ed_SecOpcd]; Modes:[ee_r,ee_e]),
    {D5}(Base:318; Count:3; Dep:[ed_SecOpcd]; Modes:[ee_r,ee_e]),
    {D6}(Base:321; Count:3; Modes:[ee_r,ee_e]),
    {D7}(Base:324; Count:1; Modes:[ee_r]),
    {D8}(Base:325; Count:10; Dep:[ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {D9}(Base:335; Count:41; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {DA}(Base:376; Count:13; Dep:[ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {DB}(Base:389; Count:25; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {DC}(Base:414; Count:18; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {DD}(Base:432; Count:18; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {DE}(Base:450; Count:23; Dep:[ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {DF}(Base:473; Count:19; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r]),
    {E0}(Base:492; Count:2; Modes:[ee_r,ee_e]),
    {E1}(Base:494; Count:2; Modes:[ee_r,ee_e]),
    {E2}(Base:496; Count:2; Mnem:oc_LOOP; Modes:[ee_r,ee_e]),
    {E3}(Base:498; Count:2; Modes:[ee_r,ee_e]),
    {E4}(Base:500; Count:1; Mnem:oc_IN; Modes:[ee_r]),
    {E5}(Base:501; Count:1; Mnem:oc_IN; Modes:[ee_r]),
    {E6}(Base:502; Count:1; Mnem:oc_OUT; Modes:[ee_r]),
    {E7}(Base:503; Count:1; Mnem:oc_OUT; Modes:[ee_r]),
    {E8}(Base:504; Count:1; Mnem:oc_CALL; Modes:[ee_r]),
    {E9}(Base:505; Count:1; Mnem:oc_JMP; Modes:[ee_r]),
    {EA}(Base:506; Count:2; Mnem:oc_JMPF; Modes:[ee_r,ee_e]),
    {EB}(Base:508; Count:1; Mnem:oc_JMP; Modes:[ee_r]),
    {EC}(Base:509; Count:1; Mnem:oc_IN; Modes:[ee_r]),
    {ED}(Base:510; Count:1; Mnem:oc_IN; Modes:[ee_r]),
    {EE}(Base:511; Count:1; Mnem:oc_OUT; Modes:[ee_r]),
    {EF}(Base:512; Count:1; Mnem:oc_OUT; Modes:[ee_r]),
    {F0}(Base:513; Count:1; Mnem:oc_LOCK; Modes:[ee_r]),
    {F1}(Base:514; Count:2; Modes:[ee_r]),
    {F2}(Base:516; Count:5; Mnem:oc_REP; Modes:[ee_r,ee_e]),
    {F3}(Base:521; Count:5; Mnem:oc_REP; Modes:[ee_r,ee_e]),
    {F4}(Base:526; Count:1; Mnem:oc_HLT; Modes:[ee_r]),
    {F5}(Base:527; Count:1; Mnem:oc_CMC; Modes:[ee_r]),
    {F6}(Base:528; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {F7}(Base:536; Count:8; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {F8}(Base:544; Count:1; Mnem:oc_CLC; Modes:[ee_r]),
    {F9}(Base:545; Count:1; Mnem:oc_STC; Modes:[ee_r]),
    {FA}(Base:546; Count:1; Mnem:oc_CLI; Modes:[ee_r]),
    {FB}(Base:547; Count:1; Mnem:oc_STI; Modes:[ee_r]),
    {FC}(Base:548; Count:1; Mnem:oc_CLD; Modes:[ee_r]),
    {FD}(Base:549; Count:1; Mnem:oc_STD; Modes:[ee_r]),
    {FE}(Base:550; Count:2; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {FF}(Base:552; Count:10; Dep:[ed_OpcdExt]; Modes:[ee_r,ee_e])
  );

const
  OneByteEntries: array[0..561]of TOpcodeEntry = (
{00}(Base:0; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_ADD; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
{01}(Base:1; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_ADD; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
{02}(Base:2; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_ADD; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
{03}(Base:3; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_ADD; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
{04}(Base:4; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_ADD; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
{05}(Base:5; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_ADD; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
{06}(Base:6; Count:1; Flags:[]; Mnem:oc_PUSH; grp1:g1_gen; grp2:g2_segreg; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{07}(Base:7; Count:1; Flags:[]; Mnem:oc_POP; grp1:g1_gen; grp2:g2_segreg; Note:'Pop a Value from the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{08}(Base:8; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_OR; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
{09}(Base:9; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_OR; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
{0A}(Base:10; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_OR; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
{0B}(Base:11; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_OR; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
{0C}(Base:12; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_OR; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
{0D}(Base:13; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_OR; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
{0E}(Base:14; Count:1; Flags:[]; Mnem:oc_PUSH; grp1:g1_gen; grp2:g2_segreg; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{0F}(Base:15; Count:1; Flags:[en_doc1632_ref]; Mnem:oc_POP; grp1:g1_gen; grp2:g2_segreg; Note:'Pop a Value from the Stack'),
    (Flags:[en_attr]; Attr:ea_invd),
    (Flags:[en_ref]),
{10}(Base:16; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_ADC; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
{11}(Base:17; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_ADC; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
{12}(Base:18; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_ADC; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
{13}(Base:19; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_ADC; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
{14}(Base:20; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_ADC; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
{15}(Base:21; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_ADC; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
{16}(Base:22; Count:1; Flags:[]; Mnem:oc_PUSH; grp1:g1_gen; grp2:g2_segreg; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{17}(Base:23; Count:1; Flags:[en_attr]; Mnem:oc_POP; Attr:ea_delaysint; grp1:g1_gen; grp2:g2_segreg; Note:'Pop a Value from the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{18}(Base:24; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_SBB; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
{19}(Base:25; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_SBB; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
{1A}(Base:26; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_SBB; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
{1B}(Base:27; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_SBB; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
{1C}(Base:28; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_SBB; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
{1D}(Base:29; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_SBB; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
{1E}(Base:30; Count:1; Flags:[]; Mnem:oc_PUSH; grp1:g1_gen; grp2:g2_segreg; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{1F}(Base:31; Count:1; Flags:[]; Mnem:oc_POP; grp1:g1_gen; grp2:g2_segreg; Note:'Pop a Value from the Stack'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{20}(Base:32; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_AND; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
{21}(Base:33; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_AND; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
{22}(Base:34; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_AND; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
{23}(Base:35; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_AND; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
{24}(Base:36; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_AND; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
{25}(Base:37; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_AND; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
{26}(Base:38; Count:1; Flags:[]; Mnem:oc_ES; grp1:g1_prefix; grp2:g2_segreg; Note:'ES segment override prefix'),
    (Flags:[en_attr]; Attr:ea_undef; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'(use with any branch instruction is reserved)'),
    (Flags:[en_attr,en_mode]; Attr:ea_null; mode:ee_e; grp1:g1_prefix; grp2:g2_segreg; Note:'Null Prefix in 64-bit Mode'),
{27}(Base:39; Count:1; Flags:[]; Mnem:oc_DAA; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_SZAPC; ModifF:fs_OSZAPC; TestF:fs_AC; UndefF:fs_O; Note:'Decimal Adjust AL after Addition'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{28}(Base:40; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_SUB; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
{29}(Base:41; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_SUB; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
{2A}(Base:42; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_SUB; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
{2B}(Base:43; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_SUB; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
{2C}(Base:44; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_SUB; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
{2D}(Base:45; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_SUB; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
{2E}(Base:46; Count:1; Flags:[]; Mnem:oc_CS; grp1:g1_prefix; grp2:g2_segreg; Note:'CS segment override prefix'),
    (Base:47; Count:1; Flags:[en_doc1632_ref]; Mnem:oc_NTAKEN; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'Branch not taken prefix (only with Jcc instructions)'),
    (Flags:[en_attr,en_mode]; Attr:ea_null; mode:ee_e; grp1:g1_prefix; grp2:g2_segreg; Note:'Null Prefix in 64-bit Mode'),
{2F}(Base:48; Count:1; Flags:[]; Mnem:oc_DAS; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_SZAPC; ModifF:fs_OSZAPC; TestF:fs_AC; UndefF:fs_O; Note:'Decimal Adjust AL after Subtraction'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{30}(Base:49; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_XOR; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
{31}(Base:50; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_XOR; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
{32}(Base:51; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_XOR; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
{33}(Base:52; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_XOR; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
{34}(Base:53; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_XOR; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
{35}(Base:54; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_XOR; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
{36}(Base:55; Count:1; Flags:[]; Mnem:oc_SS; grp1:g1_prefix; grp2:g2_segreg; Note:'SS segment override prefix'),
    (Flags:[en_attr]; Attr:ea_undef; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'(use with any branch instruction is reserved)'),
    (Flags:[en_attr,en_mode]; Attr:ea_null; mode:ee_e; grp1:g1_prefix; grp2:g2_segreg; Note:'Null Prefix in 64-bit Mode'),
{37}(Base:56; Count:1; Flags:[]; Mnem:oc_AAA; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_AC; ModifF:fs_OSZAPC; TestF:fs_A; UndefF:fs_OSZP; Note:'ASCII Adjust After Addition'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{38}(Base:57; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_CMP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{39}(Base:58; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_CMP; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{3A}(Base:59; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_CMP; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{3B}(Base:60; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_CMP; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{3C}(Base:61; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_CMP; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{3D}(Base:62; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_CMP; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{3E}(Base:63; Count:1; Flags:[]; Mnem:oc_DS; grp1:g1_prefix; grp2:g2_segreg; Note:'DS segment override prefix'),
    (Base:64; Count:1; Flags:[en_doc1632_ref]; Mnem:oc_TAKEN; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'Branch taken prefix (only with Jcc instructions)'),
    (Flags:[en_attr,en_mode]; Attr:ea_null; mode:ee_e; grp1:g1_prefix; grp2:g2_segreg; Note:'Null Prefix in 64-bit Mode'),
{3F}(Base:65; Count:1; Flags:[]; Mnem:oc_AAS; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_AC; ModifF:fs_OSZAPC; TestF:fs_A; UndefF:fs_OSZP; Note:'ASCII Adjust AL After Subtraction'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{40}(Base:66; Count:1; Flags:[]; Mnem:oc_INC; FData:[od_Z]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAP; ModifF:fs_OSZAP; Note:'Increment by 1'),
    (Base:67; Count:1; Flags:[en_mode]; Mnem:oc_REX; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'Access to new 8-bit registers'),
{41}(Base:68; Count:1; Flags:[en_mode]; Mnem:oc_REX_B; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'Extension of r/m field, base field, or opcode reg field'),
{42}(Base:69; Count:1; Flags:[en_mode]; Mnem:oc_REX_X; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'Extension of SIB index field'),
{43}(Base:70; Count:1; Flags:[en_mode]; Mnem:oc_REX_XB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.X and REX.B combination'),
{44}(Base:71; Count:1; Flags:[en_mode]; Mnem:oc_REX_R; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'Extension of ModR/M reg field'),
{45}(Base:72; Count:1; Flags:[en_mode]; Mnem:oc_REX_RB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.R and REX.B combination'),
{46}(Base:73; Count:1; Flags:[en_mode]; Mnem:oc_REX_RX; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.R and REX.X combination'),
{47}(Base:74; Count:1; Flags:[en_mode]; Mnem:oc_REX_RXB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.R, REX.X and REX.B combination'),
{48}(Base:75; Count:1; Flags:[]; Mnem:oc_DEC; FData:[od_Z]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAP; ModifF:fs_OSZAP; Note:'Decrement by 1'),
    (Base:76; Count:1; Flags:[en_mode]; Mnem:oc_REX_W; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'64 Bit Operand Size'),
{49}(Base:77; Count:1; Flags:[en_mode]; Mnem:oc_REX_WB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W and REX.B combination'),
{4A}(Base:78; Count:1; Flags:[en_mode]; Mnem:oc_REX_WX; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W and REX.X combination'),
{4B}(Base:79; Count:1; Flags:[en_mode]; Mnem:oc_REX_WXB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W, REX.X and REX.B combination'),
{4C}(Base:80; Count:1; Flags:[en_mode]; Mnem:oc_REX_WR; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W and REX.R combination'),
{4D}(Base:81; Count:1; Flags:[en_mode]; Mnem:oc_REX_WRB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W, REX.R and REX.B combination'),
{4E}(Base:82; Count:1; Flags:[en_mode]; Mnem:oc_REX_WRX; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W, REX.R and REX.X combination'),
{4F}(Base:83; Count:1; Flags:[en_mode]; Mnem:oc_REX_WRXB; mode:ee_e; grp1:g1_prefix; grp2:g2_rex; Note:'REX.W, REX.R, REX.X and REX.B combination'),
{50}(Base:84; Count:1; Flags:[]; Mnem:oc_PUSH; FData:[od_Z]; grp1:g1_gen; grp2:g2_stack; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
    (Base:85; Count:1; Flags:[en_mode]; Mnem:oc_PUSH; mode:ee_e; FData:[od_Z]; grp1:g1_gen; grp2:g2_stack; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
{58}(Base:86; Count:1; Flags:[]; Mnem:oc_POP; FData:[od_Z]; grp1:g1_gen; grp2:g2_stack; Note:'Pop a Value from the Stack'),
    (Base:87; Count:1; Flags:[en_mode]; Mnem:oc_POP; mode:ee_e; FData:[od_Z]; grp1:g1_gen; grp2:g2_stack; Note:'Pop a Value from the Stack'),
{60}(Base:88; Count:1; Flags:[]; Mnem:oc_PUSHA; grp1:g1_gen; grp2:g2_stack; Note:'Push All General-Purpose Registers'),
    (Base:89; Count:1; Flags:[]; Mnem:oc_PUSHAD; grp1:g1_gen; grp2:g2_stack; Note:'Push All General-Purpose Registers'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{61}(Base:90; Count:1; Flags:[]; Mnem:oc_POPA; grp1:g1_gen; grp2:g2_stack; Note:'Pop All General-Purpose Registers'),
    (Base:91; Count:1; Flags:[]; Mnem:oc_POPAD; grp1:g1_gen; grp2:g2_stack; Note:'Pop All General-Purpose Registers'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{62}(Base:92; Count:1; Flags:[en_direction,en_r,en_ring]; Mnem:oc_BOUND; FVals:[ba_direction,ba_ring]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_stack; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Check Array Index Against Bounds'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{63}(Base:93; Count:1; Flags:[en_r]; Mnem:oc_ARPL; FData:[od_ModR,od_ModM]; grp1:g1_system; DefF:fs_Z; ModifF:fs_Z; Note:'Adjust RPL Field of Segment Selector'),
    (Base:94; Count:1; Flags:[en_direction,en_mode,en_r]; Mnem:oc_MOVSXD; FVals:[ba_direction]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_conver; Note:'Move with Sign-Extension'),
{64}(Base:95; Count:1; Flags:[]; Mnem:oc_FS; grp1:g1_prefix; grp2:g2_segreg; Note:'FS segment override prefix'),
    (Flags:[en_attr,en_is_undoc]; Attr:ea_undef; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'(only with Jcc instructions)'),
    (Base:96; Count:1; Flags:[en_doc,en_doc1632_ref,en_is_doc,en_particular]; Mnem:oc_ALTER; FVals:[ba_doc]; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'Alternating branch prefix (only with Jcc instructions)'),
{65}(Base:97; Count:1; Flags:[]; Mnem:oc_GS; grp1:g1_prefix; grp2:g2_segreg; Note:'GS segment override prefix'),
    (Flags:[en_attr]; Attr:ea_undef; grp1:g1_prefix; grp2:g2_branch; grp3:g3_cond; Note:'(only with Jcc instructions)'),
{66}(Flags:[]; grp1:g1_prefix; Note:'Operand-size override prefix'),
    (Flags:[en_doc]; grp1:g1_prefix; iExt:ie_sse2; Note:'Precision-size override prefix'),
{67}(Flags:[]; grp1:g1_prefix; Note:'Address-size override prefix'),
{68}(Base:98; Count:1; Flags:[]; Mnem:oc_PUSH; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
{69}(Base:99; Count:1; Flags:[en_r]; Mnem:oc_IMUL; FData:[od_ModR,od_ModM,od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Signed Multiply'),
{6A}(Base:100; Count:1; Flags:[en_sign_ext]; Mnem:oc_PUSH; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
{6B}(Base:101; Count:1; Flags:[en_r,en_sign_ext]; Mnem:oc_IMUL; FData:[od_ModR,od_ModM,od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Signed Multiply'),
{6C}(Base:102; Count:2; Flags:[en_op_size,en_ring,en_ring_ref]; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Input from Port to String'),
{6D}(Base:104; Count:2; Flags:[en_op_size,en_ring,en_ring_ref]; FVals:[ba_op_size,ba_ring]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Input from Port to String'),
    (Base:106; Count:2; Flags:[en_op_size,en_ring,en_ring_ref]; FVals:[ba_op_size,ba_ring]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Input from Port to String'),
{6E}(Base:108; Count:2; Flags:[en_op_size,en_ring,en_ring_ref]; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Output String to Port'),
{6F}(Base:110; Count:2; Flags:[en_op_size,en_ring,en_ring_ref]; FVals:[ba_op_size,ba_ring]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Output String to Port'),
    (Base:112; Count:2; Flags:[en_op_size,en_ring,en_ring_ref]; FVals:[ba_op_size,ba_ring]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Output String to Port'),
{70}(Base:114; Count:1; Flags:[en_tttn]; Mnem:oc_JO; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_O; Note:'Jump short if overflow (OF=1)'),
{71}(Base:115; Count:1; Flags:[en_tttn]; Mnem:oc_JNO; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_O; Note:'Jump short if not overflow (OF=0)'),
{72}(Base:116; Count:3; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_C; Note:'Jump short if below/not above or equal/carry (CF=1)'),
{73}(Base:119; Count:3; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_C; Note:'Jump short if not below/above or equal/not carry (CF=0)'),
{74}(Base:122; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Jump short if zero/equal (ZF=0)'),
{75}(Base:124; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Jump short if not zero/not equal (ZF=1)'),
{76}(Base:126; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_ZC; Note:'Jump short if below or equal/not above (CF=1 AND ZF=1)'),
{77}(Base:128; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_ZC; Note:'Jump short if not below or equal/above (CF=0 AND ZF=0)'),
{78}(Base:130; Count:1; Flags:[en_tttn]; Mnem:oc_JS; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_S; Note:'Jump short if sign (SF=1)'),
{79}(Base:131; Count:1; Flags:[en_tttn]; Mnem:oc_JNS; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_S; Note:'Jump short if not sign (SF=0)'),
{7A}(Base:132; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_P; Note:'Jump short if parity/parity even (PF=1)'),
{7B}(Base:134; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_P; Note:'Jump short if not parity/parity odd'),
{7C}(Base:136; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OS; Note:'Jump short if less/not greater (SF!=OF)'),
{7D}(Base:138; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OS; Note:'Jump short if not less/greater or equal (SF=OF)'),
{7E}(Base:140; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OSZ; Note:'Jump short if less or equal/not greater ((ZF=1) OR (SF!=OF))'),
{7F}(Base:142; Count:2; Flags:[en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OSZ; Note:'Jump short if not less nor equal/greater ((ZF=0) AND (SF=OF))'),
{80}(Base:144; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_ADD; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
    (Base:145; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_OR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
    (Base:146; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_ADC; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
    (Base:147; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_SBB; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
    (Base:148; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_AND; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
    (Base:149; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_SUB; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
    (Base:150; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_XOR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
    (Base:151; Count:1; Flags:[en_op_size]; Mnem:oc_CMP; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{81}(Base:152; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_ADD; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
    (Base:153; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_OR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
    (Base:154; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_ADC; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
    (Base:155; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_SBB; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
    (Base:156; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_AND; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
    (Base:157; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_SUB; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
    (Base:158; Count:1; Flags:[en_lock,en_op_size]; Mnem:oc_XOR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
    (Base:159; Count:1; Flags:[en_op_size]; Mnem:oc_CMP; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{82}(Base:160; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_ADD; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
    (Base:161; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_OR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
    (Base:162; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_ADC; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
    (Base:163; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_SBB; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
    (Base:164; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_AND; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
    (Base:165; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_SUB; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
    (Base:166; Count:1; Flags:[en_alias,en_lock,en_op_size]; Mnem:oc_XOR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
    (Base:167; Count:1; Flags:[en_alias,en_op_size]; Mnem:oc_CMP; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{83}(Base:168; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_ADD; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Add'),
    (Base:169; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_OR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Inclusive OR'),
    (Base:170; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_ADC; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Add with Carry'),
    (Base:171; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_SBB; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Integer Subtraction with Borrow'),
    (Base:172; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_AND; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical AND'),
    (Base:173; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_SUB; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Subtract'),
    (Base:174; Count:1; Flags:[en_lock,en_op_size,en_sign_ext]; Mnem:oc_XOR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Exclusive OR'),
    (Base:175; Count:1; Flags:[en_op_size,en_sign_ext]; Mnem:oc_CMP; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare Two Operands'),
{84}(Base:176; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_TEST; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
{85}(Base:177; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_TEST; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
{86}(Base:178; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_XCHG; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Exchange Register/Memory with Register'),
{87}(Base:179; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_XCHG; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Exchange Register/Memory with Register'),
{88}(Base:180; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{89}(Base:181; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOV; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{8A}(Base:182; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOV; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{8B}(Base:183; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOV; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{8C}(Base:184; Count:2; Flags:[en_direction,en_r]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{8D}(Base:186; Count:1; Flags:[en_r]; Mnem:oc_LEA; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Load Effective Address'),
{8E}(Base:187; Count:1; Flags:[en_direction,en_r]; Mnem:oc_MOV; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{8F}(Base:188; Count:1; Flags:[en_op_size]; Mnem:oc_POP; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_stack; Note:'Pop a Value from the Stack'),
    (Base:189; Count:1; Flags:[en_mode,en_op_size]; Mnem:oc_POP; FVals:[ba_op_size]; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_stack; Note:'Pop a Value from the Stack'),
{90}(Base:190; Count:1; Flags:[en_attr]; Mnem:oc_XCHG; Attr:ea_acc; FData:[od_Z]; grp1:g1_gen; grp2:g2_datamov; Note:'Exchange Register/Memory with Register'),
    (Base:191; Count:1; Flags:[en_doc_ref]; Mnem:oc_NOP; grp1:g1_gen; grp2:g2_control; Note:'No Operation'),
    (Base:192; Count:1; Flags:[en_attr,en_doc_ref,en_particular]; Mnem:oc_NOP; Attr:ea_nop; Dep:[ed_Pref]; Pref:$F3; grp1:g1_gen; grp2:g2_control; Note:'No Operation'),
    (Base:193; Count:1; Flags:[]; Mnem:oc_PAUSE; Dep:[ed_Pref]; Pref:$F3; grp1:g1_cachect; iExt:ie_sse2; Note:'Spin Loop Hint'),
{98}(Base:194; Count:1; Flags:[]; Mnem:oc_CBW; grp1:g1_gen; grp2:g2_conver; Note:'Convert Byte to Word'),
    (Base:195; Count:1; Flags:[]; Mnem:oc_CWDE; grp1:g1_gen; grp2:g2_conver; Note:'Convert Word to Doubleword'),
    (Base:196; Count:3; Flags:[en_mode]; mode:ee_e; grp1:g1_gen; grp2:g2_conver; Note:'Convert'),
{99}(Base:199; Count:1; Flags:[]; Mnem:oc_CWD; grp1:g1_gen; grp2:g2_conver; Note:'Convert Word to Doubleword'),
    (Base:200; Count:1; Flags:[]; Mnem:oc_CDQ; grp1:g1_gen; grp2:g2_conver; Note:'Convert Doubleword to Quadword'),
    (Base:201; Count:3; Flags:[en_mode]; mode:ee_e; grp1:g1_gen; grp2:g2_conver; Note:'Convert'),
{9A}(Base:204; Count:1; Flags:[]; Mnem:oc_CALLF; FData:[od_Ptr]; grp1:g1_gen; grp2:g2_stack; Note:'Call Procedure'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{9B}(Base:205; Count:2; Flags:[]; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Check pending unmasked floating-point exceptions'),
    (Flags:[]; grp1:g1_prefix; grp2:g2_x87fpu; grp3:g3_control; CModifF:$F; CUndefF:$F; Note:'Wait Prefix'),
{9C}(Base:207; Count:1; Flags:[]; Mnem:oc_PUSHF; grp1:g1_gen; grp2:g2_flgctrl; Note:'Push FLAGS Register onto the Stack'),
    (Base:208; Count:1; Flags:[]; Mnem:oc_PUSHFD; grp1:g1_gen; grp2:g2_flgctrl; Note:'Push eFLAGS Register onto the Stack'),
    (Base:209; Count:2; Flags:[en_mode]; mode:ee_e; grp1:g1_gen; grp2:g2_flgctrl; Note:'Push rFLAGS Register onto the Stack'),
{9D}(Base:211; Count:1; Flags:[]; Mnem:oc_POPF; grp1:g1_gen; grp2:g2_flgctrl; Note:'Pop Stack into FLAGS Register'),
    (Base:212; Count:1; Flags:[]; Mnem:oc_POPFD; grp1:g1_gen; grp2:g2_flgctrl; Note:'Pop Stack into eFLAGS Register'),
    (Base:213; Count:2; Flags:[en_mode]; mode:ee_e; grp1:g1_gen; grp2:g2_flgctrl; Note:'Pop Stack into rFLAGS Register'),
{9E}(Base:215; Count:1; Flags:[en_doc64_ref]; Mnem:oc_SAHF; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_SZAPC; ModifF:fs_SZAPC; Note:'Store AH into Flags'),
{9F}(Base:216; Count:1; Flags:[en_doc64_ref]; Mnem:oc_LAHF; grp1:g1_gen; grp2:g2_flgctrl; TestF:fs_SZAPC; Note:'Load Status Flags into AH Register'),
{A0}(Base:217; Count:1; Flags:[en_op_size]; Mnem:oc_MOV; FData:[od_ImOfs]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{A1}(Base:218; Count:1; Flags:[en_op_size]; Mnem:oc_MOV; FVals:[ba_op_size]; FData:[od_ImOfs]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{A2}(Base:219; Count:1; Flags:[en_op_size]; Mnem:oc_MOV; FData:[od_ImOfs]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{A3}(Base:220; Count:1; Flags:[en_op_size]; Mnem:oc_MOV; FVals:[ba_op_size]; FData:[od_ImOfs]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{A4}(Base:221; Count:2; Flags:[en_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Move Data from String to String'),
{A5}(Base:223; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Move Data from String to String'),
    (Base:225; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Move Data from String to String'),
    (Base:227; Count:4; Flags:[en_mode,en_op_size]; FVals:[ba_op_size]; mode:ee_e; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Move Data from String to String'),
{A6}(Base:231; Count:2; Flags:[en_op_size]; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Compare String Operands'),
{A7}(Base:233; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Compare String Operands'),
    (Base:235; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Compare String Operands'),
    (Base:237; Count:4; Flags:[en_mode,en_op_size]; FVals:[ba_op_size]; mode:ee_e; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Compare String Operands'),
{A8}(Base:241; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_TEST; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
{A9}(Base:242; Count:1; Flags:[en_attr,en_op_size]; Mnem:oc_TEST; FVals:[ba_op_size]; Attr:ea_acc; FData:[od_I]; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
{AA}(Base:243; Count:2; Flags:[en_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Store String'),
{AB}(Base:245; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Store String'),
    (Base:247; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Store String'),
    (Base:249; Count:4; Flags:[en_mode,en_op_size]; FVals:[ba_op_size]; mode:ee_e; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Store String'),
{AC}(Base:253; Count:2; Flags:[en_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Load String'),
{AD}(Base:255; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Load String'),
    (Base:257; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Load String'),
    (Base:259; Count:4; Flags:[en_mode,en_op_size]; FVals:[ba_op_size]; mode:ee_e; grp1:g1_gen; grp2:g2_string; TestF:fs_D; Note:'Load String'),
{AE}(Base:263; Count:2; Flags:[en_op_size]; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Scan String'),
{AF}(Base:265; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Scan String'),
    (Base:267; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Scan String'),
    (Base:269; Count:4; Flags:[en_mode,en_op_size]; FVals:[ba_op_size]; mode:ee_e; grp1:g1_gen; grp2:g2_string; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_D; Note:'Scan String'),
{B0}(Base:273; Count:1; Flags:[]; Mnem:oc_MOV; FData:[od_I,od_Z]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{B8}(Base:274; Count:1; Flags:[]; Mnem:oc_MOV; FData:[od_I,od_Z]; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{C0}(Base:275; Count:1; Flags:[en_op_size]; Mnem:oc_ROL; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:276; Count:1; Flags:[en_op_size]; Mnem:oc_ROR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:277; Count:1; Flags:[en_op_size]; Mnem:oc_RCL; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:278; Count:1; Flags:[en_op_size]; Mnem:oc_RCR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:279; Count:2; Flags:[en_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:281; Count:1; Flags:[en_op_size]; Mnem:oc_SHR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:282; Count:2; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; FVals:[ba_doc]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:284; Count:1; Flags:[en_op_size]; Mnem:oc_SAR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OA; Note:'Shift'),
{C1}(Base:285; Count:1; Flags:[en_op_size]; Mnem:oc_ROL; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:286; Count:1; Flags:[en_op_size]; Mnem:oc_ROR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:287; Count:1; Flags:[en_op_size]; Mnem:oc_RCL; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:288; Count:1; Flags:[en_op_size]; Mnem:oc_RCR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:289; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:291; Count:1; Flags:[en_op_size]; Mnem:oc_SHR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:292; Count:2; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; FVals:[ba_doc]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:294; Count:1; Flags:[en_op_size]; Mnem:oc_SAR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OA; Note:'Shift'),
{C2}(Base:295; Count:1; Flags:[]; Mnem:oc_RETN; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; Note:'Return from procedure'),
{C3}(Base:296; Count:1; Flags:[]; Mnem:oc_RETN; grp1:g1_gen; grp2:g2_stack; Note:'Return from procedure'),
{C4}(Base:297; Count:1; Flags:[en_r]; Mnem:oc_LES; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_segreg; Note:'Load Far Pointer'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{C5}(Base:298; Count:1; Flags:[en_r]; Mnem:oc_LDS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_segreg; Note:'Load Far Pointer'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{C6}(Base:299; Count:1; Flags:[en_op_size]; Mnem:oc_MOV; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{C7}(Base:300; Count:1; Flags:[en_op_size]; Mnem:oc_MOV; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; Note:'Move'),
{C8}(Base:301; Count:1; Flags:[]; Mnem:oc_ENTER; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; Note:'Make Stack Frame for Procedure Parameters'),
    (Base:302; Count:1; Flags:[en_mode]; Mnem:oc_ENTER; mode:ee_e; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; Note:'Make Stack Frame for Procedure Parameters'),
{C9}(Base:303; Count:1; Flags:[]; Mnem:oc_LEAVE; grp1:g1_gen; grp2:g2_stack; Note:'High Level Procedure Exit'),
    (Base:304; Count:1; Flags:[en_mode]; Mnem:oc_LEAVE; mode:ee_e; grp1:g1_gen; grp2:g2_stack; Note:'High Level Procedure Exit'),
{CA}(Base:305; Count:1; Flags:[en_ring]; Mnem:oc_RETF; FVals:[ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; Note:'Return from procedure'),
{CB}(Base:306; Count:1; Flags:[en_ring]; Mnem:oc_RETF; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_stack; Note:'Return from procedure'),
{CC}(Base:307; Count:1; Flags:[en_alias,en_ring]; Mnem:oc_INT; FVals:[ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Call to Interrupt Procedure'),
{CD}(Base:308; Count:1; Flags:[en_ring]; Mnem:oc_INT; FVals:[ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_stack; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Call to Interrupt Procedure'),
{CE}(Base:309; Count:1; Flags:[en_ring]; Mnem:oc_INTO; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_stack; DefF:fs_I; ModifF:fs_I; TestF:fs_O; Vals0F:fs_I; Note:'Call to Interrupt Procedure'),
{CF}(Base:310; Count:1; Flags:[en_ring]; Mnem:oc_IRET; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_stack; Note:'Interrupt Return'),
    (Base:311; Count:1; Flags:[en_ring]; Mnem:oc_IRETD; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_stack; Note:'Interrupt Return'),
    (Base:312; Count:3; Flags:[en_mode,en_ring]; FVals:[ba_ring]; mode:ee_e; grp1:g1_gen; grp2:g2_stack; Note:'Interrupt Return'),
{D0}(Base:315; Count:1; Flags:[en_op_size]; Mnem:oc_ROL; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Rotate'),
    (Base:316; Count:1; Flags:[en_op_size]; Mnem:oc_ROR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Rotate'),
    (Base:317; Count:1; Flags:[en_op_size]; Mnem:oc_RCL; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Rotate'),
    (Base:318; Count:1; Flags:[en_op_size]; Mnem:oc_RCR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Rotate'),
    (Base:319; Count:2; Flags:[en_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
    (Base:321; Count:1; Flags:[en_op_size]; Mnem:oc_SHR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
    (Base:322; Count:2; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; FVals:[ba_doc]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
    (Base:324; Count:1; Flags:[en_op_size]; Mnem:oc_SAR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
{D1}(Base:325; Count:1; Flags:[en_op_size]; Mnem:oc_ROL; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Rotate'),
    (Base:326; Count:1; Flags:[en_op_size]; Mnem:oc_ROR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Rotate'),
    (Base:327; Count:1; Flags:[en_op_size]; Mnem:oc_RCL; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Rotate'),
    (Base:328; Count:1; Flags:[en_op_size]; Mnem:oc_RCR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; Note:'Rotate'),
    (Base:329; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
    (Base:331; Count:1; Flags:[en_op_size]; Mnem:oc_SHR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
    (Base:332; Count:2; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; FVals:[ba_doc,ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
    (Base:334; Count:1; Flags:[en_op_size]; Mnem:oc_SAR; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
{D2}(Base:335; Count:1; Flags:[en_op_size]; Mnem:oc_ROL; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:336; Count:1; Flags:[en_op_size]; Mnem:oc_ROR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:337; Count:1; Flags:[en_op_size]; Mnem:oc_RCL; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:338; Count:1; Flags:[en_op_size]; Mnem:oc_RCR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:339; Count:2; Flags:[en_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:341; Count:1; Flags:[en_op_size]; Mnem:oc_SHR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:342; Count:2; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; FVals:[ba_doc]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:344; Count:1; Flags:[en_op_size]; Mnem:oc_SAR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OA; Note:'Shift'),
{D3}(Base:345; Count:1; Flags:[en_op_size]; Mnem:oc_ROL; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:346; Count:1; Flags:[en_op_size]; Mnem:oc_ROR; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; UndefF:fs_O; Note:'Rotate'),
    (Base:347; Count:1; Flags:[en_op_size]; Mnem:oc_RCL; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:348; Count:1; Flags:[en_op_size]; Mnem:oc_RCR; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; TestF:fs_C; UndefF:fs_O; Note:'Rotate'),
    (Base:349; Count:2; Flags:[en_op_size]; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:351; Count:1; Flags:[en_op_size]; Mnem:oc_SHR; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:352; Count:2; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; FVals:[ba_doc,ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Shift'),
    (Base:354; Count:1; Flags:[en_op_size]; Mnem:oc_SAR; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Note:'Shift'),
{D4}(Base:355; Count:1; Flags:[]; Mnem:oc_AAM; Dep:[ed_SecOpcd]; SecOpcd:$A; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_SZP; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'ASCII Adjust AX After Multiply'),
    (Base:356; Count:1; Flags:[]; Mnem:oc_AMX; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_SZP; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Adjust AX After Multiply'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{D5}(Base:357; Count:1; Flags:[]; Mnem:oc_AAD; Dep:[ed_SecOpcd]; SecOpcd:$A; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_SZP; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'ASCII Adjust AX Before Division'),
    (Base:358; Count:1; Flags:[]; Mnem:oc_ADX; FData:[od_I]; grp1:g1_gen; grp2:g2_arith; grp3:g3_decimal; DefF:fs_SZP; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Adjust AX Before Division'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{D6}(Flags:[en_attr,en_doc_ref,en_is_undoc,en_particular]; Attr:ea_undef; Note:'Undefined and Reserved; Does not Generate #UD'),
    (Base:359; Count:2; Flags:[en_doc,en_doc_ref,en_is_doc]; FVals:[ba_doc]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_C; Note:'Set AL If Carry'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{D7}(Base:361; Count:2; Flags:[]; grp1:g1_gen; grp2:g2_datamov; Note:'Table Look-up Translation'),
{D8}(Base:363; Count:2; Flags:[en_mem_format]; Mnem:oc_FADD; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add'),
    (Base:365; Count:2; Flags:[en_mem_format]; Mnem:oc_FMUL; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply'),
    (Base:367; Count:1; Flags:[en_mem_format]; Mnem:oc_FCOM; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real'),
    (Base:368; Count:1; Flags:[]; Mnem:oc_FCOM; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$2; SecOpcd:$D1; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real'),
    (Base:369; Count:1; Flags:[en_fpop,en_mem_format]; Mnem:oc_FCOMP; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:370; Count:1; Flags:[en_fpop]; Mnem:oc_FCOMP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$3; SecOpcd:$D9; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:371; Count:2; Flags:[en_mem_format]; Mnem:oc_FSUB; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract'),
    (Base:373; Count:2; Flags:[en_mem_format]; Mnem:oc_FSUBR; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract'),
    (Base:375; Count:2; Flags:[en_mem_format]; Mnem:oc_FDIV; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide'),
    (Base:377; Count:2; Flags:[en_mem_format]; Mnem:oc_FDIVR; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide'),
{D9}(Base:379; Count:1; Flags:[en_fpush,en_mem_format]; Mnem:oc_FLD; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Floating Point Value'),
    (Base:380; Count:1; Flags:[en_mem_format]; Mnem:oc_FXCH; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Exchange Register Contents'),
    (Base:381; Count:1; Flags:[]; Mnem:oc_FXCH; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$1; SecOpcd:$C9; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Exchange Register Contents'),
    (Base:382; Count:1; Flags:[en_mem_format]; Mnem:oc_FST; mem_format:$0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value'),
    (Base:383; Count:1; Flags:[]; Mnem:oc_FNOP; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$2; SecOpcd:$D0; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'No Operation'),
    (Base:384; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FSTP; mem_format:$0; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:385; Count:1; Flags:[en_doc_part_alias_ref,en_doc_ref,en_fpop,en_mod,en_part_alias,en_particular]; Mnem:oc_FSTP1; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:386; Count:1; Flags:[en_doc,en_doc_part_alias_ref,en_doc_ref,en_fpop,en_mod,en_part_alias,en_particular]; Mnem:oc_FSTP1; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:387; Count:1; Flags:[]; Mnem:oc_FLDENV; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_control; CDefF:$F; CModifF:$F; Note:'Load x87 FPU Environment'),
    (Base:388; Count:1; Flags:[]; Mnem:oc_FCHS; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Change Sign'),
    (Base:389; Count:1; Flags:[]; Mnem:oc_FABS; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Absolute Value'),
    (Base:390; Count:1; Flags:[]; Mnem:oc_FTST; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E4; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Test'),
    (Base:391; Count:1; Flags:[]; Mnem:oc_FXAM; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E5; grp1:g1_x87fpu; CDefF:$F; CModifF:$F; Note:'Examine'),
    (Base:392; Count:1; Flags:[]; Mnem:oc_FLDCW; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Load x87 FPU Control Word'),
    (Base:393; Count:1; Flags:[en_fpush]; Mnem:oc_FLD1; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$E8; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant +1.0'),
    (Base:394; Count:1; Flags:[en_fpush]; Mnem:oc_FLDL2T; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$E9; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant log<sub>2</sub>10'),
    (Base:395; Count:1; Flags:[en_fpush]; Mnem:oc_FLDL2E; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$EA; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant log<sub>2</sub>e'),
    (Base:396; Count:1; Flags:[en_fpush]; Mnem:oc_FLDPI; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$EB; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant ?'),
    (Base:397; Count:1; Flags:[en_fpush]; Mnem:oc_FLDLG2; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$EC; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant log<sub>10</sub>2'),
    (Base:398; Count:1; Flags:[en_fpush]; Mnem:oc_FLDLN2; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$ED; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant log<sub>e</sub>2'),
    (Base:399; Count:1; Flags:[en_fpush]; Mnem:oc_FLDZ; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$EE; grp1:g1_x87fpu; grp2:g2_ldconst; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Constant +0.0'),
    (Base:400; Count:1; Flags:[]; Mnem:oc_FNSTENV; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Environment'),
    (Base:401; Count:1; Flags:[]; Mnem:oc_FSTENV; FData:[od_ModM]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$9B; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Environment'),
    (Base:402; Count:1; Flags:[]; Mnem:oc_F2XM1; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F0; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Compute 2<sup>x</sup>-1'),
    (Base:403; Count:1; Flags:[en_fpop]; Mnem:oc_FYL2X; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F1; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Compute y ? log<sub>2</sub>x and Pop'),
    (Base:404; Count:1; Flags:[en_fpush]; Mnem:oc_FPTAN; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F2; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$6; CModifF:$F; CUndefF:$9; Note:'Partial Tangent'),
    (Base:405; Count:1; Flags:[en_fpop]; Mnem:oc_FPATAN; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F3; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Partial Arctangent and Pop'),
    (Base:406; Count:1; Flags:[en_fpush]; Mnem:oc_FXTRACT; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Extract Exponent and Significand'),
    (Base:407; Count:1; Flags:[]; Mnem:oc_FPREM1; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$F; CModifF:$F; Note:'IEEE Partial Remainder'),
    (Base:408; Count:1; Flags:[]; Mnem:oc_FDECSTP; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F6; grp1:g1_x87fpu; grp2:g2_control; CDefF:$2; CModifF:$F; CUndefF:$D; CVals0F:$2; Note:'Decrement Stack-Top Pointer'),
    (Base:409; Count:1; Flags:[]; Mnem:oc_FINCSTP; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F7; grp1:g1_x87fpu; grp2:g2_control; CDefF:$2; CModifF:$F; CUndefF:$D; CVals0F:$2; Note:'Increment Stack-Top Pointer'),
    (Base:410; Count:1; Flags:[]; Mnem:oc_FNSTCW; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Control Word'),
    (Base:411; Count:1; Flags:[]; Mnem:oc_FSTCW; FData:[od_ModM]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$9B; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Control Word'),
    (Base:412; Count:1; Flags:[]; Mnem:oc_FPREM; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$F8; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$F; CModifF:$F; Note:'Partial Remainder (for compatibility with i8087 and i287)'),
    (Base:413; Count:1; Flags:[en_fpop]; Mnem:oc_FYL2XP1; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$F9; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Compute y ? log<sub>2</sub>(x+1) and Pop'),
    (Base:414; Count:1; Flags:[]; Mnem:oc_FSQRT; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$FA; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Square Root'),
    (Base:415; Count:1; Flags:[en_fpush]; Mnem:oc_FSINCOS; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$FB; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$6; CModifF:$F; CUndefF:$9; Note:'Sine and Cosine'),
    (Base:416; Count:1; Flags:[]; Mnem:oc_FRNDINT; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$FC; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Round to Integer'),
    (Base:417; Count:1; Flags:[]; Mnem:oc_FSCALE; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$FD; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Scale'),
    (Base:418; Count:1; Flags:[]; Mnem:oc_FSIN; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$FE; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$6; CModifF:$F; CUndefF:$9; Note:'Sine'),
    (Base:419; Count:1; Flags:[]; Mnem:oc_FCOS; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$FF; grp1:g1_x87fpu; grp2:g2_trans; CDefF:$6; CModifF:$F; CUndefF:$9; Note:'Cosine'),
{DA}(Base:420; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIADD; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add'),
    (Base:421; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVB; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_C; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - below (CF=1)'),
    (Base:422; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIMUL; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply'),
    (Base:423; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVE; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_Z; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - equal (ZF=1)'),
    (Base:424; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FICOM; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Integer'),
    (Base:425; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVBE; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_Z; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - below or equal (CF=1 or ZF=1)'),
    (Base:426; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FICOMP; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Integer and Pop'),
    (Base:427; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVU; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_P; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - unordered (PF=1)'),
    (Base:428; Count:1; Flags:[en_mem_format]; Mnem:oc_FISUB; mem_format:$1; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract'),
    (Base:429; Count:1; Flags:[en_mem_format]; Mnem:oc_FISUBR; mem_format:$1; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract'),
    (Base:430; Count:1; Flags:[en_fpop]; Mnem:oc_FUCOMPP; FVals:[ba_fpop]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$E9; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Unordered Compare Floating Point Values and Pop Twice'),
    (Base:431; Count:1; Flags:[en_mem_format]; Mnem:oc_FIDIV; mem_format:$1; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide'),
    (Base:432; Count:1; Flags:[en_mem_format]; Mnem:oc_FIDIVR; mem_format:$1; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide'),
{DB}(Base:433; Count:1; Flags:[en_fpush,en_mem_format,en_mod]; Mnem:oc_FILD; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Integer'),
    (Base:434; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVNB; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_C; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - not below (CF=0)'),
    (Base:435; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FISTTP; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_conver; iExt:ie_sse3; CDefF:$2; CModifF:$F; CUndefF:$D; CVals0F:$2; Note:'Store Integer with Truncation and Pop'),
    (Base:436; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVNE; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_Z; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - not equal (ZF=0)'),
    (Base:437; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIST; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Integer'),
    (Base:438; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVNBE; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_Z; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - below or equal (CF=0 and ZF=0)'),
    (Base:439; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FISTP; mem_format:$1; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Integer and Pop'),
    (Base:440; Count:1; Flags:[en_mod]; Mnem:oc_FCMOVNU; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; TestF:fs_P; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'FP Conditional Move - not unordered (PF=0)'),
    (Base:441; Count:1; Flags:[]; Mnem:oc_FNENI; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E0; grp1:g1_x87fpu; grp2:g2_control; Note:'Enable NPX Interrupt'),
    (Base:442; Count:1; Flags:[]; Mnem:oc_FENI; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Pref:$9B; OpcdExt:$4; SecOpcd:$E0; grp1:g1_x87fpu; grp2:g2_control; Note:'Enable NPX Interrupt'),
    (Base:443; Count:1; Flags:[en_attr,en_doc_ref,en_particular]; Mnem:oc_FNENI; Attr:ea_nop; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E0; grp1:g1_obsol; grp2:g2_control; Note:'Treated as Integer NOP'),
    (Base:444; Count:1; Flags:[]; Mnem:oc_FNDISI; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E1; grp1:g1_x87fpu; grp2:g2_control; Note:'Disable NPX Interrupt'),
    (Base:445; Count:1; Flags:[]; Mnem:oc_FDISI; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Pref:$9B; OpcdExt:$4; SecOpcd:$E1; grp1:g1_x87fpu; grp2:g2_control; Note:'Disable NPX Interrupt'),
    (Base:446; Count:1; Flags:[en_attr,en_doc_ref,en_particular]; Mnem:oc_FNDISI; Attr:ea_nop; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E1; grp1:g1_obsol; grp2:g2_control; Note:'Treated as Integer NOP'),
    (Base:447; Count:1; Flags:[]; Mnem:oc_FNCLEX; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E2; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Clear Exceptions'),
    (Base:448; Count:1; Flags:[]; Mnem:oc_FCLEX; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Pref:$9B; OpcdExt:$4; SecOpcd:$E2; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Clear Exceptions'),
    (Base:449; Count:1; Flags:[]; Mnem:oc_FNINIT; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E3; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CVals0F:$F; Note:'Initialize Floating-Point Unit'),
    (Base:450; Count:1; Flags:[]; Mnem:oc_FINIT; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Pref:$9B; OpcdExt:$4; SecOpcd:$E3; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CVals0F:$F; Note:'Initialize Floating-Point Unit'),
    (Base:451; Count:1; Flags:[]; Mnem:oc_FNSETPM; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E4; grp1:g1_x87fpu; grp2:g2_control; Note:'Set Protected Mode'),
    (Base:452; Count:1; Flags:[]; Mnem:oc_FSETPM; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Pref:$9B; OpcdExt:$4; SecOpcd:$E4; grp1:g1_x87fpu; grp2:g2_control; Note:'Set Protected Mode'),
    (Base:453; Count:1; Flags:[en_attr,en_doc_ref,en_particular]; Mnem:oc_FNSETPM; Attr:ea_nop; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E4; grp1:g1_obsol; grp2:g2_control; Note:'Treated as Integer NOP'),
    (Base:454; Count:1; Flags:[en_fpush,en_mod]; Mnem:oc_FLD; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Floating Point Value'),
    (Base:455; Count:1; Flags:[en_mod]; Mnem:oc_FUCOMI; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_compar; DefF:fs_OZPC; ModifF:fs_OZPC; Vals0F:fs_O; CDefF:$2; CModifF:$2; Note:'Unordered Compare Floating Point Values and Set EFLAGS'),
    (Base:456; Count:1; Flags:[]; Mnem:oc_FCOMI; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_compar; DefF:fs_OZPC; ModifF:fs_OZPC; Vals0F:fs_O; CDefF:$2; CModifF:$2; Note:'Compare Floating Point Values and Set EFLAGS'),
    (Base:457; Count:1; Flags:[en_fpop]; Mnem:oc_FSTP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
{DC}(Base:458; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FADD; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add'),
    (Base:459; Count:1; Flags:[en_mod]; Mnem:oc_FADD; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add'),
    (Base:460; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FMUL; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply'),
    (Base:461; Count:1; Flags:[en_mod]; Mnem:oc_FMUL; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply'),
    (Base:462; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FCOM; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real'),
    (Base:463; Count:1; Flags:[en_alias,en_doc_ref,en_mod,en_particular]; Mnem:oc_FCOM2; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real'),
    (Base:464; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_mod,en_particular]; Mnem:oc_FCOM2; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real'),
    (Base:465; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FCOMP; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:466; Count:1; Flags:[en_alias,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FCOMP3; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:467; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FCOMP3; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:468; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FSUB; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract'),
    (Base:469; Count:1; Flags:[en_mod]; Mnem:oc_FSUBR; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract'),
    (Base:470; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FSUBR; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract'),
    (Base:471; Count:1; Flags:[en_mod]; Mnem:oc_FSUB; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract'),
    (Base:472; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FDIV; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide'),
    (Base:473; Count:1; Flags:[en_mod]; Mnem:oc_FDIVR; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide'),
    (Base:474; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FDIVR; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide'),
    (Base:475; Count:1; Flags:[en_mod]; Mnem:oc_FDIV; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide and Pop'),
{DD}(Base:476; Count:1; Flags:[en_fpush,en_mem_format,en_mod]; Mnem:oc_FLD; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Floating Point Value'),
    (Base:477; Count:1; Flags:[en_mod]; Mnem:oc_FFREE; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Free Floating-Point Register'),
    (Base:478; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FISTTP; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_conver; iExt:ie_sse3; CDefF:$2; CModifF:$F; CUndefF:$D; CVals0F:$2; Note:'Store Integer with Truncation and Pop'),
    (Base:479; Count:1; Flags:[en_alias,en_doc_ref,en_mod,en_particular]; Mnem:oc_FXCH4; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Exchange Register Contents'),
    (Base:480; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_mod,en_particular]; Mnem:oc_FXCH4; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Exchange Register Contents'),
    (Base:481; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FST; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value'),
    (Base:482; Count:1; Flags:[en_mod]; Mnem:oc_FST; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value'),
    (Base:483; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FSTP; mem_format:$2; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:484; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FSTP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:485; Count:1; Flags:[en_mod]; Mnem:oc_FRSTOR; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_control; CDefF:$F; CModifF:$F; Note:'Restore x87 FPU State'),
    (Base:486; Count:1; Flags:[en_mod]; Mnem:oc_FUCOM; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Unordered Compare Floating Point Values'),
    (Base:487; Count:1; Flags:[]; Mnem:oc_FUCOM; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E1; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Unordered Compare Floating Point Values'),
    (Base:488; Count:1; Flags:[en_fpop]; Mnem:oc_FUCOMP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Unordered Compare Floating Point Values and Pop'),
    (Base:489; Count:1; Flags:[en_fpop]; Mnem:oc_FUCOMP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$E9; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Unordered Compare Floating Point Values and Pop'),
    (Base:490; Count:1; Flags:[]; Mnem:oc_FNSAVE; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_control; CDefF:$F; CModifF:$F; CVals0F:$F; Note:'Store x87 FPU State'),
    (Base:491; Count:1; Flags:[]; Mnem:oc_FSAVE; FData:[od_ModM]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$9B; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_control; CDefF:$F; CModifF:$F; CVals0F:$F; Note:'Store x87 FPU State'),
    (Base:492; Count:1; Flags:[]; Mnem:oc_FNSTSW; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Status Word'),
    (Base:493; Count:1; Flags:[]; Mnem:oc_FSTSW; FData:[od_ModM]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$9B; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Status Word'),
{DE}(Base:494; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIADD; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add'),
    (Base:495; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FADDP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add and Pop'),
    (Base:496; Count:1; Flags:[en_fpop]; Mnem:oc_FADDP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$0; SecOpcd:$C1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Add and Pop'),
    (Base:497; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIMUL; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply'),
    (Base:498; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FMULP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply and Pop'),
    (Base:499; Count:1; Flags:[en_fpop]; Mnem:oc_FMULP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$1; SecOpcd:$C9; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Multiply and Pop'),
    (Base:500; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FICOM; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Integer'),
    (Base:501; Count:1; Flags:[en_alias,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FCOMP5; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:502; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FCOMP5; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop'),
    (Base:503; Count:1; Flags:[en_fpop,en_mem_format]; Mnem:oc_FICOMP; mem_format:$3; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Integer and Pop'),
    (Base:504; Count:1; Flags:[en_fpop]; Mnem:oc_FCOMPP; FVals:[ba_fpop]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$3; SecOpcd:$D9; grp1:g1_x87fpu; grp2:g2_compar; CDefF:$F; CModifF:$F; Note:'Compare Real and Pop Twice'),
    (Base:505; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FISUB; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract'),
    (Base:506; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FSUBRP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract and Pop'),
    (Base:507; Count:1; Flags:[en_fpop]; Mnem:oc_FSUBRP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract and Pop'),
    (Base:508; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FISUBR; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Subtract'),
    (Base:509; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FSUBP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract and Pop'),
    (Base:510; Count:1; Flags:[en_fpop]; Mnem:oc_FSUBP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$5; SecOpcd:$E9; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Subtract and Pop'),
    (Base:511; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIDIV; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide'),
    (Base:512; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FDIVRP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide and Pop'),
    (Base:513; Count:1; Flags:[en_fpop]; Mnem:oc_FDIVRP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$6; SecOpcd:$F1; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide and Pop'),
    (Base:514; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIDIVR; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Reverse Divide'),
    (Base:515; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FDIVP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide and Pop'),
    (Base:516; Count:1; Flags:[en_fpop]; Mnem:oc_FDIVP; FData:[od_ModM]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$F9; grp1:g1_x87fpu; grp2:g2_arith; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Divide and Pop'),
{DF}(Base:517; Count:1; Flags:[en_fpush,en_mem_format,en_mod]; Mnem:oc_FILD; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Integer'),
    (Base:518; Count:1; Flags:[en_doc_ref,en_fpop,en_mod]; Mnem:oc_FFREEP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Free Floating-Point Register and Pop'),
    (Base:519; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FISTTP; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_conver; iExt:ie_sse3; CDefF:$2; CModifF:$F; CUndefF:$D; CVals0F:$2; Note:'Store Integer with Truncation and Pop'),
    (Base:520; Count:1; Flags:[en_alias,en_doc_ref,en_mod,en_particular]; Mnem:oc_FXCH7; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Exchange Register Contents'),
    (Base:521; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_mod,en_particular]; Mnem:oc_FXCH7; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Exchange Register Contents'),
    (Base:522; Count:1; Flags:[en_mem_format,en_mod]; Mnem:oc_FIST; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Integer'),
    (Base:523; Count:1; Flags:[en_alias,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FSTP8; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:524; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FSTP8; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:525; Count:1; Flags:[en_fpop,en_mem_format,en_mod]; Mnem:oc_FISTP; mem_format:$3; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Integer and Pop'),
    (Base:526; Count:1; Flags:[en_alias,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FSTP9; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:527; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_fpop,en_mod,en_particular]; Mnem:oc_FSTP9; FVals:[ba_doc]; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Floating Point Value and Pop'),
    (Base:528; Count:1; Flags:[en_fpush]; Mnem:oc_FBLD; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Binary Coded Decimal'),
    (Base:529; Count:1; Flags:[]; Mnem:oc_FNSTSW; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$4; SecOpcd:$E0; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Status Word'),
    (Base:530; Count:1; Flags:[]; Mnem:oc_FSTSW; Dep:[ed_Pref,ed_OpcdExt,ed_SecOpcd]; Pref:$9B; OpcdExt:$4; SecOpcd:$E0; grp1:g1_x87fpu; grp2:g2_control; CModifF:$F; CUndefF:$F; Note:'Store x87 FPU Status Word'),
    (Base:531; Count:1; Flags:[en_fpush,en_mod]; Mnem:oc_FILD; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Load Integer'),
    (Base:532; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FUCOMIP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_x87fpu; grp2:g2_compar; DefF:fs_OZPC; ModifF:fs_OZPC; Vals0F:fs_O; CDefF:$2; CModifF:$2; Note:'Unordered Compare Floating Point Values and Set EFLAGS and Pop'),
    (Base:533; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FBSTP; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store BCD Integer and Pop'),
    (Base:534; Count:1; Flags:[en_fpop,en_mod]; Mnem:oc_FCOMIP; mod_:em_nomem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_x87fpu; grp2:g2_compar; DefF:fs_OZPC; ModifF:fs_OZPC; Vals0F:fs_O; CDefF:$2; CModifF:$2; Note:'Compare Floating Point Values and Set EFLAGS and Pop'),
    (Base:535; Count:1; Flags:[en_fpop]; Mnem:oc_FISTP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_x87fpu; grp2:g2_datamov; CDefF:$2; CModifF:$F; CUndefF:$D; Note:'Store Integer and Pop'),
{E0}(Base:536; Count:2; Flags:[]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Decrement count; Jump short if count!=0 and ZF=0'),
    (Base:538; Count:2; Flags:[en_doc64_ref,en_mode]; mode:ee_e; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Decrement count; Jump short if count!=0 and ZF=0'),
{E1}(Base:540; Count:2; Flags:[]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Decrement count; Jump short if count!=0 and ZF=1'),
    (Base:542; Count:2; Flags:[en_doc64_ref,en_mode]; mode:ee_e; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Decrement count; Jump short if count!=0 and ZF=1'),
{E2}(Base:544; Count:1; Flags:[]; Mnem:oc_LOOP; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; Note:'Decrement count; Jump short if count!=0'),
    (Base:545; Count:1; Flags:[en_doc64_ref,en_mode]; Mnem:oc_LOOP; mode:ee_e; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; Note:'Decrement count; Jump short if count!=0'),
{E3}(Base:546; Count:2; Flags:[]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; Note:'Jump short if eCX register is 0'),
    (Base:548; Count:2; Flags:[en_doc64_ref,en_mode]; mode:ee_e; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; Note:'Jump short if rCX register is 0'),
{E4}(Base:550; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_IN; FVals:[ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_inout; Note:'Input from Port'),
{E5}(Base:551; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_IN; FVals:[ba_op_size,ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_inout; Note:'Input from Port'),
{E6}(Base:552; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_OUT; FVals:[ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_inout; Note:'Output to Port'),
{E7}(Base:553; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_OUT; FVals:[ba_op_size,ba_ring]; FData:[od_I]; grp1:g1_gen; grp2:g2_inout; Note:'Output to Port'),
{E8}(Base:554; Count:1; Flags:[en_doc64_ref]; Mnem:oc_CALL; FData:[od_J]; grp1:g1_gen; grp2:g2_stack; Note:'Call Procedure'),
{E9}(Base:555; Count:1; Flags:[en_doc64_ref]; Mnem:oc_JMP; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; Note:'Jump'),
{EA}(Base:556; Count:1; Flags:[]; Mnem:oc_JMPF; FData:[od_Ptr]; grp1:g1_gen; grp2:g2_branch; Note:'Jump'),
    (Flags:[en_attr,en_mode]; Attr:ea_invd; mode:ee_e; Note:'Invalid Instruction in 64-Bit Mode'),
{EB}(Base:557; Count:1; Flags:[]; Mnem:oc_JMP; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; Note:'Jump'),
{EC}(Base:558; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_IN; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_inout; Note:'Input from Port'),
{ED}(Base:559; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_IN; FVals:[ba_op_size,ba_ring]; grp1:g1_gen; grp2:g2_inout; Note:'Input from Port'),
{EE}(Base:560; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_OUT; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_inout; Note:'Output to Port'),
{EF}(Base:561; Count:1; Flags:[en_op_size,en_ring,en_ring_ref]; Mnem:oc_OUT; FVals:[ba_op_size,ba_ring]; grp1:g1_gen; grp2:g2_inout; Note:'Output to Port'),
{F0}(Base:562; Count:1; Flags:[]; Mnem:oc_LOCK; grp1:g1_prefix; Note:'Assert LOCK# Signal Prefix'),
{F1}(Flags:[en_attr,en_doc_ref,en_is_undoc]; Attr:ea_undef; Note:'Undefined and Reserved; Does not Generate #UD'),
    (Base:563; Count:2; Flags:[en_doc,en_doc_part_alias_ref,en_doc_ref,en_is_doc,en_part_alias]; FVals:[ba_doc]; grp1:g1_gen; grp2:g2_stack; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Call to Interrupt Procedure'),
{F2}(Base:565; Count:2; Flags:[en_doc_ref]; grp1:g1_prefix; grp2:g2_string; TestF:fs_Z; Note:'Repeat String Operation Prefix'),
    (Base:567; Count:1; Flags:[en_doc,en_doc_ref,en_particular]; Mnem:oc_REP; FVals:[ba_doc]; grp1:g1_prefix; grp2:g2_string; Note:'Repeat String Operation Prefix'),
    (Base:568; Count:2; Flags:[en_doc_ref,en_mode]; mode:ee_e; grp1:g1_prefix; grp2:g2_string; TestF:fs_Z; Note:'Repeat String Operation Prefix'),
    (Base:570; Count:1; Flags:[en_doc,en_doc_ref,en_mode,en_particular]; Mnem:oc_REP; FVals:[ba_doc]; mode:ee_e; grp1:g1_prefix; grp2:g2_string; Note:'Repeat String Operation Prefix'),
    (Flags:[en_doc]; grp1:g1_prefix; iExt:ie_sse2; Note:'Scalar Double-precision Prefix'),
{F3}(Base:571; Count:2; Flags:[en_doc_ref]; grp1:g1_prefix; grp2:g2_string; TestF:fs_Z; Note:'Repeat String Operation Prefix'),
    (Base:573; Count:1; Flags:[en_doc_ref]; Mnem:oc_REP; grp1:g1_prefix; grp2:g2_string; Note:'Repeat String Operation Prefix'),
    (Base:574; Count:2; Flags:[en_doc_ref,en_mode]; mode:ee_e; grp1:g1_prefix; grp2:g2_string; TestF:fs_Z; Note:'Repeat String Operation Prefix'),
    (Base:576; Count:1; Flags:[en_doc_ref,en_mode]; Mnem:oc_REP; mode:ee_e; grp1:g1_prefix; grp2:g2_string; Note:'Repeat String Operation Prefix'),
    (Flags:[en_doc]; grp1:g1_prefix; iExt:ie_sse1; Note:'Scalar Single-precision Prefix'),
{F4}(Base:577; Count:1; Flags:[en_ring]; Mnem:oc_HLT; grp1:g1_system; Note:'Halt'),
{F5}(Base:578; Count:1; Flags:[]; Mnem:oc_CMC; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_C; ModifF:fs_C; TestF:fs_C; Note:'Complement Carry Flag'),
{F6}(Base:579; Count:1; Flags:[en_op_size]; Mnem:oc_TEST; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
    (Base:580; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; Mnem:oc_TEST; FVals:[ba_doc]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
    (Base:581; Count:1; Flags:[en_op_size]; Mnem:oc_NOT; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_logical; Note:'One''s Complement Negation'),
    (Base:582; Count:1; Flags:[en_op_size]; Mnem:oc_NEG; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Two''s Complement Negation'),
    (Base:583; Count:1; Flags:[en_op_size]; Mnem:oc_MUL; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Unsigned Multiply'),
    (Base:584; Count:1; Flags:[en_op_size]; Mnem:oc_IMUL; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Signed Multiply'),
    (Base:585; Count:1; Flags:[en_op_size]; Mnem:oc_DIV; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Unsigned Divide'),
    (Base:586; Count:1; Flags:[en_op_size]; Mnem:oc_IDIV; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Signed Divide'),
{F7}(Base:587; Count:1; Flags:[en_op_size]; Mnem:oc_TEST; FVals:[ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
    (Base:588; Count:1; Flags:[en_alias,en_doc,en_doc_ref,en_op_size]; Mnem:oc_TEST; FVals:[ba_doc,ba_op_size]; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_logical; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_A; Vals0F:fs_OC; Note:'Logical Compare'),
    (Base:589; Count:1; Flags:[en_op_size]; Mnem:oc_NOT; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_logical; Note:'One''s Complement Negation'),
    (Base:590; Count:1; Flags:[en_op_size]; Mnem:oc_NEG; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Two''s Complement Negation'),
    (Base:591; Count:1; Flags:[en_op_size]; Mnem:oc_MUL; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Unsigned Multiply'),
    (Base:592; Count:1; Flags:[en_op_size]; Mnem:oc_IMUL; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Signed Multiply'),
    (Base:593; Count:1; Flags:[en_op_size]; Mnem:oc_DIV; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Unsigned Divide'),
    (Base:594; Count:1; Flags:[en_op_size]; Mnem:oc_IDIV; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Signed Divide'),
{F8}(Base:595; Count:1; Flags:[]; Mnem:oc_CLC; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_C; ModifF:fs_C; Vals0F:fs_C; Note:'Clear Carry Flag'),
{F9}(Base:596; Count:1; Flags:[]; Mnem:oc_STC; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_C; ModifF:fs_C; Vals1F:fs_C; Note:'Set Carry Flag'),
{FA}(Base:597; Count:1; Flags:[en_ring,en_ring_ref]; Mnem:oc_CLI; FVals:[ba_ring]; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Clear Interrupt Flag'),
{FB}(Base:598; Count:1; Flags:[en_attr,en_ring,en_ring_ref]; Mnem:oc_STI; FVals:[ba_ring]; Attr:ea_delaysint_cond; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_I; ModifF:fs_I; Vals1F:fs_I; Note:'Set Interrupt Flag'),
{FC}(Base:599; Count:1; Flags:[]; Mnem:oc_CLD; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_D; ModifF:fs_D; Vals0F:fs_D; Note:'Clear Direction Flag'),
{FD}(Base:600; Count:1; Flags:[]; Mnem:oc_STD; grp1:g1_gen; grp2:g2_flgctrl; DefF:fs_D; ModifF:fs_D; Vals1F:fs_D; Note:'Set Direction Flag'),
{FE}(Base:601; Count:1; Flags:[en_op_size]; Mnem:oc_INC; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAP; ModifF:fs_OSZAP; Note:'Increment by 1'),
    (Base:602; Count:1; Flags:[en_op_size]; Mnem:oc_DEC; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAP; ModifF:fs_OSZAP; Note:'Decrement by 1'),
{FF}(Base:603; Count:1; Flags:[en_op_size]; Mnem:oc_INC; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAP; ModifF:fs_OSZAP; Note:'Increment by 1'),
    (Base:604; Count:1; Flags:[en_op_size]; Mnem:oc_DEC; FVals:[ba_op_size]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAP; ModifF:fs_OSZAP; Note:'Decrement by 1'),
    (Base:605; Count:1; Flags:[]; Mnem:oc_CALL; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_stack; Note:'Call Procedure'),
    (Base:606; Count:1; Flags:[en_doc64_ref,en_mode]; Mnem:oc_CALL; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_stack; Note:'Call Procedure'),
    (Base:607; Count:1; Flags:[en_doc64_ref]; Mnem:oc_CALLF; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_stack; Note:'Call Procedure'),
    (Base:608; Count:1; Flags:[]; Mnem:oc_JMP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_branch; Note:'Jump'),
    (Base:609; Count:1; Flags:[en_doc64_ref,en_mode]; Mnem:oc_JMP; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_branch; Note:'Jump'),
    (Base:610; Count:1; Flags:[en_doc64_ref]; Mnem:oc_JMPF; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_branch; Note:'Jump'),
    (Base:611; Count:1; Flags:[]; Mnem:oc_PUSH; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_stack; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
    (Base:612; Count:1; Flags:[en_mode]; Mnem:oc_PUSH; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_stack; Note:'Push Word, Doubleword or Quadword Onto the Stack')
  );

const
  OneByteSyntaxes: array[0..612]of TOpcodeSyntax = (
   {00_0}
    (Base:0; Count:2; Mnem:oc_ADD),
   {01_0}
    (Base:2; Count:2; Mnem:oc_ADD),
   {02_0}
    (Base:4; Count:2; Mnem:oc_ADD),
   {03_0}
    (Base:6; Count:2; Mnem:oc_ADD),
   {04_0}
    (Base:8; Count:2; Mnem:oc_ADD),
   {05_0}
    (Base:10; Count:2; Mnem:oc_ADD),
   {06_0}
    (Base:12; Count:2; Mnem:oc_PUSH),
   {07_0}
    (Base:14; Count:2; Mnem:oc_POP),
   {08_0}
    (Base:0; Count:2; Mnem:oc_OR),
   {09_0}
    (Base:2; Count:2; Mnem:oc_OR),
   {0A_0}
    (Base:4; Count:2; Mnem:oc_OR),
   {0B_0}
    (Base:6; Count:2; Mnem:oc_OR),
   {0C_0}
    (Base:8; Count:2; Mnem:oc_OR),
   {0D_0}
    (Base:10; Count:2; Mnem:oc_OR),
   {0E_0}
    (Base:16; Count:2; Mnem:oc_PUSH),
   {0F_0}
    (Base:18; Count:2; Mnem:oc_POP),
   {10_0}
    (Base:0; Count:2; Mnem:oc_ADC),
   {11_0}
    (Base:2; Count:2; Mnem:oc_ADC),
   {12_0}
    (Base:4; Count:2; Mnem:oc_ADC),
   {13_0}
    (Base:6; Count:2; Mnem:oc_ADC),
   {14_0}
    (Base:8; Count:2; Mnem:oc_ADC),
   {15_0}
    (Base:10; Count:2; Mnem:oc_ADC),
   {16_0}
    (Base:20; Count:2; Mnem:oc_PUSH),
   {17_0}
    (Base:22; Count:2; Mnem:oc_POP),
   {18_0}
    (Base:0; Count:2; Mnem:oc_SBB),
   {19_0}
    (Base:2; Count:2; Mnem:oc_SBB),
   {1A_0}
    (Base:4; Count:2; Mnem:oc_SBB),
   {1B_0}
    (Base:6; Count:2; Mnem:oc_SBB),
   {1C_0}
    (Base:8; Count:2; Mnem:oc_SBB),
   {1D_0}
    (Base:10; Count:2; Mnem:oc_SBB),
   {1E_0}
    (Base:24; Count:2; Mnem:oc_PUSH),
   {1F_0}
    (Base:26; Count:2; Mnem:oc_POP),
   {20_0}
    (Base:0; Count:2; Mnem:oc_AND),
   {21_0}
    (Base:2; Count:2; Mnem:oc_AND),
   {22_0}
    (Base:4; Count:2; Mnem:oc_AND),
   {23_0}
    (Base:6; Count:2; Mnem:oc_AND),
   {24_0}
    (Base:8; Count:2; Mnem:oc_AND),
   {25_0}
    (Base:10; Count:2; Mnem:oc_AND),
   {26_0}
    (Base:28; Count:1; Mnem:oc_ES),
   {27_0}
    (Base:29; Count:1; Mnem:oc_DAA),
   {28_0}
    (Base:0; Count:2; Mnem:oc_SUB),
   {29_0}
    (Base:2; Count:2; Mnem:oc_SUB),
   {2A_0}
    (Base:4; Count:2; Mnem:oc_SUB),
   {2B_0}
    (Base:6; Count:2; Mnem:oc_SUB),
   {2C_0}
    (Base:8; Count:2; Mnem:oc_SUB),
   {2D_0}
    (Base:10; Count:2; Mnem:oc_SUB),
   {2E_0}
    (Base:30; Count:1; Mnem:oc_CS),
   {2E_1}
    (Mnem:oc_NTAKEN),
   {2F_0}
    (Base:29; Count:1; Mnem:oc_DAS),
   {30_0}
    (Base:0; Count:2; Mnem:oc_XOR),
   {31_0}
    (Base:2; Count:2; Mnem:oc_XOR),
   {32_0}
    (Base:4; Count:2; Mnem:oc_XOR),
   {33_0}
    (Base:6; Count:2; Mnem:oc_XOR),
   {34_0}
    (Base:8; Count:2; Mnem:oc_XOR),
   {35_0}
    (Base:10; Count:2; Mnem:oc_XOR),
   {36_0}
    (Base:31; Count:1; Mnem:oc_SS),
   {37_0}
    (Base:32; Count:2; Mnem:oc_AAA),
   {38_0}
    (Base:34; Count:2; Mnem:oc_CMP),
   {39_0}
    (Base:36; Count:2; Mnem:oc_CMP),
   {3A_0}
    (Base:38; Count:2; Mnem:oc_CMP),
   {3B_0}
    (Base:40; Count:2; Mnem:oc_CMP),
   {3C_0}
    (Base:42; Count:2; Mnem:oc_CMP),
   {3D_0}
    (Base:44; Count:2; Mnem:oc_CMP),
   {3E_0}
    (Base:46; Count:1; Mnem:oc_DS),
   {3E_1}
    (Mnem:oc_TAKEN),
   {3F_0}
    (Base:32; Count:2; Mnem:oc_AAS),
   {40_0}
    (Base:47; Count:1; Mnem:oc_INC),
   {40_1}
    (Mnem:oc_REX),
   {41_0}
    (Mnem:oc_REX_B),
   {42_0}
    (Mnem:oc_REX_X),
   {43_0}
    (Mnem:oc_REX_XB),
   {44_0}
    (Mnem:oc_REX_R),
   {45_0}
    (Mnem:oc_REX_RB),
   {46_0}
    (Mnem:oc_REX_RX),
   {47_0}
    (Mnem:oc_REX_RXB),
   {48_0}
    (Base:47; Count:1; Mnem:oc_DEC),
   {48_1}
    (Mnem:oc_REX_W),
   {49_0}
    (Mnem:oc_REX_WB),
   {4A_0}
    (Mnem:oc_REX_WX),
   {4B_0}
    (Mnem:oc_REX_WXB),
   {4C_0}
    (Mnem:oc_REX_WR),
   {4D_0}
    (Mnem:oc_REX_WRB),
   {4E_0}
    (Mnem:oc_REX_WRX),
   {4F_0}
    (Mnem:oc_REX_WRXB),
   {50_0}
    (Base:48; Count:2; Mnem:oc_PUSH),
   {50_1}
    (Base:50; Count:2; Mnem:oc_PUSH),
   {58_0}
    (Base:52; Count:2; Mnem:oc_POP),
   {58_1}
    (Base:54; Count:2; Mnem:oc_POP),
   {60_0}
    (Base:56; Count:9; Mnem:oc_PUSHA),
   {60_1}
    (Base:65; Count:9; Mnem:oc_PUSHAD),
   {61_0}
    (Base:74; Count:8; Mnem:oc_POPA),
   {61_1}
    (Base:82; Count:8; Mnem:oc_POPAD),
   {62_0}
    (Base:90; Count:4; Mnem:oc_BOUND),
   {63_0}
    (Base:94; Count:2; Mnem:oc_ARPL),
   {63_1}
    (Base:96; Count:2; Mnem:oc_MOVSXD),
   {64_0}
    (Base:98; Count:1; Mnem:oc_FS),
   {64_2}
    (Mnem:oc_ALTER),
   {65_0}
    (Base:99; Count:1; Mnem:oc_GS),
   {68_0}
    (Base:100; Count:2; Mnem:oc_PUSH),
   {69_0}
    (Base:102; Count:3; Mnem:oc_IMUL),
   {6A_0}
    (Base:105; Count:2; Mnem:oc_PUSH),
   {6B_0}
    (Base:107; Count:3; Mnem:oc_IMUL),
   {6C_0}
    (Base:110; Count:2; Mnem:oc_INS),
    (Base:112; Count:2; Mnem:oc_INSB),
   {6D_0}
    (Base:114; Count:2; Mnem:oc_INS),
    (Base:116; Count:2; Mnem:oc_INSW),
   {6D_1}
    (Base:118; Count:2; Mnem:oc_INS),
    (Base:120; Count:2; Mnem:oc_INSD),
   {6E_0}
    (Base:122; Count:2; Mnem:oc_OUTS),
    (Base:124; Count:2; Mnem:oc_OUTSB),
   {6F_0}
    (Base:126; Count:2; Mnem:oc_OUTS),
    (Base:128; Count:2; Mnem:oc_OUTSW),
   {6F_1}
    (Base:130; Count:2; Mnem:oc_OUTS),
    (Base:132; Count:2; Mnem:oc_OUTSD),
   {70_0}
    (Base:134; Count:1; Mnem:oc_JO),
   {71_0}
    (Base:134; Count:1; Mnem:oc_JNO),
   {72_0}
    (Base:134; Count:1; Mnem:oc_JB),
    (Base:134; Count:1; Mnem:oc_JNAE),
    (Base:134; Count:1; Mnem:oc_JC),
   {73_0}
    (Base:134; Count:1; Mnem:oc_JNB),
    (Base:134; Count:1; Mnem:oc_JAE),
    (Base:134; Count:1; Mnem:oc_JNC),
   {74_0}
    (Base:134; Count:1; Mnem:oc_JZ),
    (Base:134; Count:1; Mnem:oc_JE),
   {75_0}
    (Base:134; Count:1; Mnem:oc_JNZ),
    (Base:134; Count:1; Mnem:oc_JNE),
   {76_0}
    (Base:134; Count:1; Mnem:oc_JBE),
    (Base:134; Count:1; Mnem:oc_JNA),
   {77_0}
    (Base:134; Count:1; Mnem:oc_JNBE),
    (Base:134; Count:1; Mnem:oc_JA),
   {78_0}
    (Base:134; Count:1; Mnem:oc_JS),
   {79_0}
    (Base:134; Count:1; Mnem:oc_JNS),
   {7A_0}
    (Base:134; Count:1; Mnem:oc_JP),
    (Base:134; Count:1; Mnem:oc_JPE),
   {7B_0}
    (Base:134; Count:1; Mnem:oc_JNP),
    (Base:134; Count:1; Mnem:oc_JPO),
   {7C_0}
    (Base:134; Count:1; Mnem:oc_JL),
    (Base:134; Count:1; Mnem:oc_JNGE),
   {7D_0}
    (Base:134; Count:1; Mnem:oc_JNL),
    (Base:134; Count:1; Mnem:oc_JGE),
   {7E_0}
    (Base:134; Count:1; Mnem:oc_JLE),
    (Base:134; Count:1; Mnem:oc_JNG),
   {7F_0}
    (Base:134; Count:1; Mnem:oc_JNLE),
    (Base:134; Count:1; Mnem:oc_JG),
   {80_0}
    (Base:135; Count:2; Mnem:oc_ADD),
   {80_1}
    (Base:135; Count:2; Mnem:oc_OR),
   {80_2}
    (Base:135; Count:2; Mnem:oc_ADC),
   {80_3}
    (Base:135; Count:2; Mnem:oc_SBB),
   {80_4}
    (Base:135; Count:2; Mnem:oc_AND),
   {80_5}
    (Base:135; Count:2; Mnem:oc_SUB),
   {80_6}
    (Base:135; Count:2; Mnem:oc_XOR),
   {80_7}
    (Base:137; Count:2; Mnem:oc_CMP),
   {81_0}
    (Base:139; Count:2; Mnem:oc_ADD),
   {81_1}
    (Base:139; Count:2; Mnem:oc_OR),
   {81_2}
    (Base:139; Count:2; Mnem:oc_ADC),
   {81_3}
    (Base:139; Count:2; Mnem:oc_SBB),
   {81_4}
    (Base:139; Count:2; Mnem:oc_AND),
   {81_5}
    (Base:139; Count:2; Mnem:oc_SUB),
   {81_6}
    (Base:139; Count:2; Mnem:oc_XOR),
   {81_7}
    (Base:141; Count:2; Mnem:oc_CMP),
   {82_0}
    (Base:135; Count:2; Mnem:oc_ADD),
   {82_1}
    (Base:135; Count:2; Mnem:oc_OR),
   {82_2}
    (Base:135; Count:2; Mnem:oc_ADC),
   {82_3}
    (Base:135; Count:2; Mnem:oc_SBB),
   {82_4}
    (Base:135; Count:2; Mnem:oc_AND),
   {82_5}
    (Base:135; Count:2; Mnem:oc_SUB),
   {82_6}
    (Base:135; Count:2; Mnem:oc_XOR),
   {82_7}
    (Base:137; Count:2; Mnem:oc_CMP),
   {83_0}
    (Base:143; Count:2; Mnem:oc_ADD),
   {83_1}
    (Base:143; Count:2; Mnem:oc_OR),
   {83_2}
    (Base:143; Count:2; Mnem:oc_ADC),
   {83_3}
    (Base:143; Count:2; Mnem:oc_SBB),
   {83_4}
    (Base:143; Count:2; Mnem:oc_AND),
   {83_5}
    (Base:143; Count:2; Mnem:oc_SUB),
   {83_6}
    (Base:143; Count:2; Mnem:oc_XOR),
   {83_7}
    (Base:145; Count:2; Mnem:oc_CMP),
   {84_0}
    (Base:34; Count:2; Mnem:oc_TEST),
   {85_0}
    (Base:36; Count:2; Mnem:oc_TEST),
   {86_0}
    (Base:147; Count:2; Mnem:oc_XCHG),
   {87_0}
    (Base:149; Count:2; Mnem:oc_XCHG),
   {88_0}
    (Base:151; Count:2; Mnem:oc_MOV),
   {89_0}
    (Base:153; Count:2; Mnem:oc_MOV),
   {8A_0}
    (Base:155; Count:2; Mnem:oc_MOV),
   {8B_0}
    (Base:157; Count:2; Mnem:oc_MOV),
   {8C_0}
    (Base:159; Count:2; Mnem:oc_MOV),
    (Base:161; Count:2; Mnem:oc_MOV),
   {8D_0}
    (Base:163; Count:2; Mnem:oc_LEA),
   {8E_0}
    (Base:165; Count:2; Mnem:oc_MOV),
   {8F_0}
    (Base:167; Count:2; Mnem:oc_POP),
   {8F_1}
    (Base:169; Count:2; Mnem:oc_POP),
   {90_0}
    (Base:171; Count:2; Mnem:oc_XCHG),
   {90_1}
    (Mnem:oc_NOP),
   {90_2}
    (Mnem:oc_NOP),
   {90_3}
    (Mnem:oc_PAUSE),
   {98_0}
    (Base:173; Count:2; Mnem:oc_CBW),
   {98_1}
    (Base:175; Count:2; Mnem:oc_CWDE),
   {98_2}
    (Base:173; Count:2; Mnem:oc_CBW),
    (Base:177; Count:2; Mnem:oc_CWDE),
    (Base:179; Count:2; Mnem:oc_CDQE),
   {99_0}
    (Base:181; Count:2; Mnem:oc_CWD),
   {99_1}
    (Base:183; Count:2; Mnem:oc_CDQ),
   {99_2}
    (Base:181; Count:2; Mnem:oc_CWD),
    (Base:185; Count:2; Mnem:oc_CDQ),
    (Base:187; Count:2; Mnem:oc_CQO),
   {9A_0}
    (Base:189; Count:2; Mnem:oc_CALLF),
   {9B_0}
    (Mnem:oc_FWAIT),
    (Mnem:oc_WAIT),
   {9C_0}
    (Base:191; Count:2; Mnem:oc_PUSHF),
   {9C_1}
    (Base:193; Count:2; Mnem:oc_PUSHFD),
   {9C_2}
    (Base:195; Count:2; Mnem:oc_PUSHF),
    (Base:197; Count:2; Mnem:oc_PUSHFQ),
   {9D_0}
    (Base:199; Count:2; Mnem:oc_POPF),
   {9D_1}
    (Base:201; Count:2; Mnem:oc_POPFD),
   {9D_2}
    (Base:203; Count:2; Mnem:oc_POPF),
    (Base:205; Count:2; Mnem:oc_POPFQ),
   {9E_0}
    (Base:207; Count:1; Mnem:oc_SAHF),
   {9F_0}
    (Base:208; Count:1; Mnem:oc_LAHF),
   {A0_0}
    (Base:209; Count:2; Mnem:oc_MOV),
   {A1_0}
    (Base:211; Count:2; Mnem:oc_MOV),
   {A2_0}
    (Base:213; Count:2; Mnem:oc_MOV),
   {A3_0}
    (Base:215; Count:2; Mnem:oc_MOV),
   {A4_0}
    (Base:217; Count:2; Mnem:oc_MOVS),
    (Base:219; Count:2; Mnem:oc_MOVSB),
   {A5_0}
    (Base:221; Count:2; Mnem:oc_MOVS),
    (Base:223; Count:2; Mnem:oc_MOVSW),
   {A5_1}
    (Base:225; Count:2; Mnem:oc_MOVS),
    (Base:227; Count:2; Mnem:oc_MOVSD),
   {A5_2}
    (Base:229; Count:2; Mnem:oc_MOVS),
    (Base:231; Count:2; Mnem:oc_MOVSW),
    (Base:233; Count:2; Mnem:oc_MOVSD),
    (Base:235; Count:2; Mnem:oc_MOVSQ),
   {A6_0}
    (Base:237; Count:2; Mnem:oc_CMPS),
    (Base:239; Count:2; Mnem:oc_CMPSB),
   {A7_0}
    (Base:241; Count:2; Mnem:oc_CMPS),
    (Base:243; Count:2; Mnem:oc_CMPSW),
   {A7_1}
    (Base:245; Count:2; Mnem:oc_CMPS),
    (Base:247; Count:2; Mnem:oc_CMPSD),
   {A7_2}
    (Base:249; Count:2; Mnem:oc_CMPS),
    (Base:251; Count:2; Mnem:oc_CMPSW),
    (Base:253; Count:2; Mnem:oc_CMPSD),
    (Base:255; Count:2; Mnem:oc_CMPSQ),
   {A8_0}
    (Base:42; Count:2; Mnem:oc_TEST),
   {A9_0}
    (Base:44; Count:2; Mnem:oc_TEST),
   {AA_0}
    (Base:257; Count:2; Mnem:oc_STOS),
    (Base:259; Count:2; Mnem:oc_STOSB),
   {AB_0}
    (Base:261; Count:2; Mnem:oc_STOS),
    (Base:263; Count:2; Mnem:oc_STOSW),
   {AB_1}
    (Base:265; Count:2; Mnem:oc_STOS),
    (Base:267; Count:2; Mnem:oc_STOSD),
   {AB_2}
    (Base:269; Count:2; Mnem:oc_STOS),
    (Base:271; Count:2; Mnem:oc_STOSW),
    (Base:273; Count:2; Mnem:oc_STOSD),
    (Base:275; Count:2; Mnem:oc_STOSQ),
   {AC_0}
    (Base:277; Count:2; Mnem:oc_LODS),
    (Base:279; Count:2; Mnem:oc_LODSB),
   {AD_0}
    (Base:281; Count:2; Mnem:oc_LODS),
    (Base:283; Count:2; Mnem:oc_LODSW),
   {AD_1}
    (Base:285; Count:2; Mnem:oc_LODS),
    (Base:287; Count:2; Mnem:oc_LODSD),
   {AD_2}
    (Base:289; Count:2; Mnem:oc_LODS),
    (Base:291; Count:2; Mnem:oc_LODSW),
    (Base:293; Count:2; Mnem:oc_LODSD),
    (Base:295; Count:2; Mnem:oc_LODSQ),
   {AE_0}
    (Base:297; Count:2; Mnem:oc_SCAS),
    (Base:299; Count:2; Mnem:oc_SCASB),
   {AF_0}
    (Base:301; Count:2; Mnem:oc_SCAS),
    (Base:303; Count:2; Mnem:oc_SCASW),
   {AF_1}
    (Base:305; Count:2; Mnem:oc_SCAS),
    (Base:307; Count:2; Mnem:oc_SCASD),
   {AF_2}
    (Base:309; Count:2; Mnem:oc_SCAS),
    (Base:311; Count:2; Mnem:oc_SCASW),
    (Base:313; Count:2; Mnem:oc_SCASD),
    (Base:315; Count:2; Mnem:oc_SCASQ),
   {B0_0}
    (Base:317; Count:2; Mnem:oc_MOV),
   {B8_0}
    (Base:319; Count:2; Mnem:oc_MOV),
   {C0_0}
    (Base:135; Count:2; Mnem:oc_ROL),
   {C0_1}
    (Base:135; Count:2; Mnem:oc_ROR),
   {C0_2}
    (Base:135; Count:2; Mnem:oc_RCL),
   {C0_3}
    (Base:135; Count:2; Mnem:oc_RCR),
   {C0_4}
    (Base:135; Count:2; Mnem:oc_SHL),
    (Base:135; Count:2; Mnem:oc_SAL),
   {C0_5}
    (Base:135; Count:2; Mnem:oc_SHR),
   {C0_6}
    (Base:135; Count:2; Mnem:oc_SAL),
    (Base:135; Count:2; Mnem:oc_SHL),
   {C0_7}
    (Base:135; Count:2; Mnem:oc_SAR),
   {C1_0}
    (Base:321; Count:2; Mnem:oc_ROL),
   {C1_1}
    (Base:321; Count:2; Mnem:oc_ROR),
   {C1_2}
    (Base:321; Count:2; Mnem:oc_RCL),
   {C1_3}
    (Base:321; Count:2; Mnem:oc_RCR),
   {C1_4}
    (Base:321; Count:2; Mnem:oc_SHL),
    (Base:321; Count:2; Mnem:oc_SAL),
   {C1_5}
    (Base:321; Count:2; Mnem:oc_SHR),
   {C1_6}
    (Base:321; Count:2; Mnem:oc_SAL),
    (Base:321; Count:2; Mnem:oc_SHL),
   {C1_7}
    (Base:321; Count:2; Mnem:oc_SAR),
   {C2_0}
    (Base:323; Count:2; Mnem:oc_RETN),
   {C3_0}
    (Base:325; Count:1; Mnem:oc_RETN),
   {C4_0}
    (Base:326; Count:3; Mnem:oc_LES),
   {C5_0}
    (Base:329; Count:3; Mnem:oc_LDS),
   {C6_0}
    (Base:332; Count:2; Mnem:oc_MOV),
   {C7_0}
    (Base:334; Count:2; Mnem:oc_MOV),
   {C8_0}
    (Base:336; Count:4; Mnem:oc_ENTER),
   {C8_1}
    (Base:340; Count:4; Mnem:oc_ENTER),
   {C9_0}
    (Base:344; Count:2; Mnem:oc_LEAVE),
   {C9_1}
    (Base:346; Count:2; Mnem:oc_LEAVE),
   {CA_0}
    (Base:348; Count:2; Mnem:oc_RETF),
   {CB_0}
    (Base:325; Count:1; Mnem:oc_RETF),
   {CC_0}
    (Base:350; Count:3; Mnem:oc_INT),
   {CD_0}
    (Base:353; Count:3; Mnem:oc_INT),
   {CE_0}
    (Base:356; Count:2; Mnem:oc_INTO),
   {CF_0}
    (Base:358; Count:2; Mnem:oc_IRET),
   {CF_1}
    (Base:360; Count:2; Mnem:oc_IRETD),
   {CF_2}
    (Base:358; Count:2; Mnem:oc_IRET),
    (Base:362; Count:2; Mnem:oc_IRETD),
    (Base:364; Count:2; Mnem:oc_IRETQ),
   {D0_0}
    (Base:366; Count:2; Mnem:oc_ROL),
   {D0_1}
    (Base:366; Count:2; Mnem:oc_ROR),
   {D0_2}
    (Base:366; Count:2; Mnem:oc_RCL),
   {D0_3}
    (Base:366; Count:2; Mnem:oc_RCR),
   {D0_4}
    (Base:366; Count:2; Mnem:oc_SHL),
    (Base:366; Count:2; Mnem:oc_SAL),
   {D0_5}
    (Base:366; Count:2; Mnem:oc_SHR),
   {D0_6}
    (Base:366; Count:2; Mnem:oc_SAL),
    (Base:366; Count:2; Mnem:oc_SHL),
   {D0_7}
    (Base:366; Count:2; Mnem:oc_SAR),
   {D1_0}
    (Base:368; Count:2; Mnem:oc_ROL),
   {D1_1}
    (Base:368; Count:2; Mnem:oc_ROR),
   {D1_2}
    (Base:368; Count:2; Mnem:oc_RCL),
   {D1_3}
    (Base:368; Count:2; Mnem:oc_RCR),
   {D1_4}
    (Base:368; Count:2; Mnem:oc_SHL),
    (Base:368; Count:2; Mnem:oc_SAL),
   {D1_5}
    (Base:368; Count:2; Mnem:oc_SHR),
   {D1_6}
    (Base:368; Count:2; Mnem:oc_SAL),
    (Base:368; Count:2; Mnem:oc_SHL),
   {D1_7}
    (Base:368; Count:2; Mnem:oc_SAR),
   {D2_0}
    (Base:370; Count:2; Mnem:oc_ROL),
   {D2_1}
    (Base:370; Count:2; Mnem:oc_ROR),
   {D2_2}
    (Base:370; Count:2; Mnem:oc_RCL),
   {D2_3}
    (Base:370; Count:2; Mnem:oc_RCR),
   {D2_4}
    (Base:370; Count:2; Mnem:oc_SHL),
    (Base:370; Count:2; Mnem:oc_SAL),
   {D2_5}
    (Base:370; Count:2; Mnem:oc_SHR),
   {D2_6}
    (Base:370; Count:2; Mnem:oc_SAL),
    (Base:370; Count:2; Mnem:oc_SHL),
   {D2_7}
    (Base:370; Count:2; Mnem:oc_SAR),
   {D3_0}
    (Base:372; Count:2; Mnem:oc_ROL),
   {D3_1}
    (Base:372; Count:2; Mnem:oc_ROR),
   {D3_2}
    (Base:372; Count:2; Mnem:oc_RCL),
   {D3_3}
    (Base:372; Count:2; Mnem:oc_RCR),
   {D3_4}
    (Base:372; Count:2; Mnem:oc_SHL),
    (Base:372; Count:2; Mnem:oc_SAL),
   {D3_5}
    (Base:372; Count:2; Mnem:oc_SHR),
   {D3_6}
    (Base:372; Count:2; Mnem:oc_SAL),
    (Base:372; Count:2; Mnem:oc_SHL),
   {D3_7}
    (Base:372; Count:2; Mnem:oc_SAR),
   {D4_0}
    (Base:374; Count:2; Mnem:oc_AAM),
   {D4_1}
    (Base:376; Count:3; Mnem:oc_AMX),
   {D5_0}
    (Base:32; Count:2; Mnem:oc_AAD),
   {D5_1}
    (Base:379; Count:3; Mnem:oc_ADX),
   {D6_1}
    (Base:382; Count:1; Mnem:oc_SALC),
    (Base:382; Count:1; Mnem:oc_SETALC),
   {D7_0}
    (Base:383; Count:2; Mnem:oc_XLAT),
    (Base:385; Count:2; Mnem:oc_XLATB),
   {D8_0}
    (Base:387; Count:2; Mnem:oc_FADD),
    (Base:389; Count:2; Mnem:oc_FADD),
   {D8_1}
    (Base:387; Count:2; Mnem:oc_FMUL),
    (Base:389; Count:2; Mnem:oc_FMUL),
   {D8_2}
    (Base:391; Count:2; Mnem:oc_FCOM),
   {D8_3}
    (Base:393; Count:2; Mnem:oc_FCOM),
   {D8_4}
    (Base:391; Count:2; Mnem:oc_FCOMP),
   {D8_5}
    (Base:393; Count:2; Mnem:oc_FCOMP),
   {D8_6}
    (Base:387; Count:2; Mnem:oc_FSUB),
    (Base:389; Count:2; Mnem:oc_FSUB),
   {D8_7}
    (Base:387; Count:2; Mnem:oc_FSUBR),
    (Base:389; Count:2; Mnem:oc_FSUBR),
   {D8_8}
    (Base:387; Count:2; Mnem:oc_FDIV),
    (Base:389; Count:2; Mnem:oc_FDIV),
   {D8_9}
    (Base:387; Count:2; Mnem:oc_FDIVR),
    (Base:389; Count:2; Mnem:oc_FDIVR),
   {D9_0}
    (Base:395; Count:2; Mnem:oc_FLD),
   {D9_1}
    (Base:397; Count:2; Mnem:oc_FXCH),
   {D9_2}
    (Base:399; Count:2; Mnem:oc_FXCH),
   {D9_3}
    (Base:401; Count:2; Mnem:oc_FST),
   {D9_4}
    (Mnem:oc_FNOP),
   {D9_5}
    (Base:401; Count:2; Mnem:oc_FSTP),
   {D9_6}
    (Base:403; Count:2; Mnem:oc_FSTP1),
   {D9_7}
    (Base:403; Count:2; Mnem:oc_FSTP1),
   {D9_8}
    (Base:405; Count:1; Mnem:oc_FLDENV),
   {D9_9}
    (Base:406; Count:1; Mnem:oc_FCHS),
   {D9_10}
    (Base:406; Count:1; Mnem:oc_FABS),
   {D9_11}
    (Base:407; Count:1; Mnem:oc_FTST),
   {D9_12}
    (Base:407; Count:1; Mnem:oc_FXAM),
   {D9_13}
    (Base:408; Count:1; Mnem:oc_FLDCW),
   {D9_14}
    (Base:406; Count:1; Mnem:oc_FLD1),
   {D9_15}
    (Base:406; Count:1; Mnem:oc_FLDL2T),
   {D9_16}
    (Base:406; Count:1; Mnem:oc_FLDL2E),
   {D9_17}
    (Base:406; Count:1; Mnem:oc_FLDPI),
   {D9_18}
    (Base:406; Count:1; Mnem:oc_FLDLG2),
   {D9_19}
    (Base:406; Count:1; Mnem:oc_FLDLN2),
   {D9_20}
    (Base:406; Count:1; Mnem:oc_FLDZ),
   {D9_21}
    (Base:409; Count:1; Mnem:oc_FNSTENV),
   {D9_22}
    (Base:409; Count:1; Mnem:oc_FSTENV),
   {D9_23}
    (Base:406; Count:1; Mnem:oc_F2XM1),
   {D9_24}
    (Base:410; Count:2; Mnem:oc_FYL2X),
   {D9_25}
    (Base:406; Count:1; Mnem:oc_FPTAN),
   {D9_26}
    (Base:410; Count:2; Mnem:oc_FPATAN),
   {D9_27}
    (Base:406; Count:1; Mnem:oc_FXTRACT),
   {D9_28}
    (Base:412; Count:2; Mnem:oc_FPREM1),
   {D9_29}
    (Mnem:oc_FDECSTP),
   {D9_30}
    (Mnem:oc_FINCSTP),
   {D9_31}
    (Base:414; Count:1; Mnem:oc_FNSTCW),
   {D9_32}
    (Base:414; Count:1; Mnem:oc_FSTCW),
   {D9_33}
    (Base:412; Count:2; Mnem:oc_FPREM),
   {D9_34}
    (Base:410; Count:2; Mnem:oc_FYL2XP1),
   {D9_35}
    (Base:406; Count:1; Mnem:oc_FSQRT),
   {D9_36}
    (Base:406; Count:1; Mnem:oc_FSINCOS),
   {D9_37}
    (Base:406; Count:1; Mnem:oc_FRNDINT),
   {D9_38}
    (Base:412; Count:2; Mnem:oc_FSCALE),
   {D9_39}
    (Base:406; Count:1; Mnem:oc_FSIN),
   {D9_40}
    (Base:406; Count:1; Mnem:oc_FCOS),
   {DA_0}
    (Base:415; Count:2; Mnem:oc_FIADD),
   {DA_1}
    (Base:389; Count:2; Mnem:oc_FCMOVB),
   {DA_2}
    (Base:415; Count:2; Mnem:oc_FIMUL),
   {DA_3}
    (Base:389; Count:2; Mnem:oc_FCMOVE),
   {DA_4}
    (Base:417; Count:2; Mnem:oc_FICOM),
   {DA_5}
    (Base:389; Count:2; Mnem:oc_FCMOVBE),
   {DA_6}
    (Base:417; Count:2; Mnem:oc_FICOMP),
   {DA_7}
    (Base:389; Count:2; Mnem:oc_FCMOVU),
   {DA_8}
    (Base:415; Count:2; Mnem:oc_FISUB),
   {DA_9}
    (Base:415; Count:2; Mnem:oc_FISUBR),
   {DA_10}
    (Base:419; Count:2; Mnem:oc_FUCOMPP),
   {DA_11}
    (Base:415; Count:2; Mnem:oc_FIDIV),
   {DA_12}
    (Base:415; Count:2; Mnem:oc_FIDIVR),
   {DB_0}
    (Base:415; Count:2; Mnem:oc_FILD),
   {DB_1}
    (Base:389; Count:2; Mnem:oc_FCMOVNB),
   {DB_2}
    (Base:421; Count:2; Mnem:oc_FISTTP),
   {DB_3}
    (Base:389; Count:2; Mnem:oc_FCMOVNE),
   {DB_4}
    (Base:421; Count:2; Mnem:oc_FIST),
   {DB_5}
    (Base:389; Count:2; Mnem:oc_FCMOVNBE),
   {DB_6}
    (Base:421; Count:2; Mnem:oc_FISTP),
   {DB_7}
    (Base:389; Count:2; Mnem:oc_FCMOVNU),
   {DB_8}
    (Mnem:oc_FNENI),
   {DB_9}
    (Mnem:oc_FENI),
   {DB_10}
    (Mnem:oc_FNENI),
   {DB_11}
    (Mnem:oc_FNDISI),
   {DB_12}
    (Mnem:oc_FDISI),
   {DB_13}
    (Mnem:oc_FNDISI),
   {DB_14}
    (Mnem:oc_FNCLEX),
   {DB_15}
    (Mnem:oc_FCLEX),
   {DB_16}
    (Mnem:oc_FNINIT),
   {DB_17}
    (Mnem:oc_FINIT),
   {DB_18}
    (Mnem:oc_FNSETPM),
   {DB_19}
    (Mnem:oc_FSETPM),
   {DB_20}
    (Mnem:oc_FNSETPM),
   {DB_21}
    (Base:423; Count:2; Mnem:oc_FLD),
   {DB_22}
    (Base:425; Count:2; Mnem:oc_FUCOMI),
   {DB_23}
    (Base:425; Count:2; Mnem:oc_FCOMI),
   {DB_24}
    (Base:427; Count:2; Mnem:oc_FSTP),
   {DC_0}
    (Base:429; Count:2; Mnem:oc_FADD),
   {DC_1}
    (Base:431; Count:2; Mnem:oc_FADD),
   {DC_2}
    (Base:429; Count:2; Mnem:oc_FMUL),
   {DC_3}
    (Base:431; Count:2; Mnem:oc_FMUL),
   {DC_4}
    (Base:433; Count:2; Mnem:oc_FCOM),
   {DC_5}
    (Base:435; Count:2; Mnem:oc_FCOM2),
   {DC_6}
    (Base:435; Count:2; Mnem:oc_FCOM2),
   {DC_7}
    (Base:433; Count:2; Mnem:oc_FCOMP),
   {DC_8}
    (Base:435; Count:2; Mnem:oc_FCOMP3),
   {DC_9}
    (Base:435; Count:2; Mnem:oc_FCOMP3),
   {DC_10}
    (Base:429; Count:2; Mnem:oc_FSUB),
   {DC_11}
    (Base:431; Count:2; Mnem:oc_FSUBR),
   {DC_12}
    (Base:429; Count:2; Mnem:oc_FSUBR),
   {DC_13}
    (Base:431; Count:2; Mnem:oc_FSUB),
   {DC_14}
    (Base:429; Count:2; Mnem:oc_FDIV),
   {DC_15}
    (Base:431; Count:2; Mnem:oc_FDIVR),
   {DC_16}
    (Base:429; Count:2; Mnem:oc_FDIVR),
   {DC_17}
    (Base:431; Count:2; Mnem:oc_FDIV),
   {DD_0}
    (Base:429; Count:2; Mnem:oc_FLD),
   {DD_1}
    (Base:437; Count:1; Mnem:oc_FFREE),
   {DD_2}
    (Base:438; Count:2; Mnem:oc_FISTTP),
   {DD_3}
    (Base:397; Count:2; Mnem:oc_FXCH4),
   {DD_4}
    (Base:397; Count:2; Mnem:oc_FXCH4),
   {DD_5}
    (Base:440; Count:2; Mnem:oc_FST),
   {DD_6}
    (Base:442; Count:2; Mnem:oc_FST),
   {DD_7}
    (Base:440; Count:2; Mnem:oc_FSTP),
   {DD_8}
    (Base:442; Count:2; Mnem:oc_FSTP),
   {DD_9}
    (Base:444; Count:9; Mnem:oc_FRSTOR),
   {DD_10}
    (Base:435; Count:2; Mnem:oc_FUCOM),
   {DD_11}
    (Base:393; Count:2; Mnem:oc_FUCOM),
   {DD_12}
    (Base:435; Count:2; Mnem:oc_FUCOMP),
   {DD_13}
    (Base:393; Count:2; Mnem:oc_FUCOMP),
   {DD_14}
    (Base:453; Count:9; Mnem:oc_FNSAVE),
   {DD_15}
    (Base:453; Count:9; Mnem:oc_FSAVE),
   {DD_16}
    (Base:462; Count:1; Mnem:oc_FNSTSW),
   {DD_17}
    (Base:462; Count:1; Mnem:oc_FSTSW),
   {DE_0}
    (Base:463; Count:2; Mnem:oc_FIADD),
   {DE_1}
    (Base:431; Count:2; Mnem:oc_FADDP),
   {DE_2}
    (Base:465; Count:2; Mnem:oc_FADDP),
   {DE_3}
    (Base:463; Count:2; Mnem:oc_FIMUL),
   {DE_4}
    (Base:431; Count:2; Mnem:oc_FMULP),
   {DE_5}
    (Base:465; Count:2; Mnem:oc_FMULP),
   {DE_6}
    (Base:467; Count:2; Mnem:oc_FICOM),
   {DE_7}
    (Base:435; Count:2; Mnem:oc_FCOMP5),
   {DE_8}
    (Base:435; Count:2; Mnem:oc_FCOMP5),
   {DE_9}
    (Base:467; Count:2; Mnem:oc_FICOMP),
   {DE_10}
    (Base:419; Count:2; Mnem:oc_FCOMPP),
   {DE_11}
    (Base:463; Count:2; Mnem:oc_FISUB),
   {DE_12}
    (Base:431; Count:2; Mnem:oc_FSUBRP),
   {DE_13}
    (Base:465; Count:2; Mnem:oc_FSUBRP),
   {DE_14}
    (Base:463; Count:2; Mnem:oc_FISUBR),
   {DE_15}
    (Base:431; Count:2; Mnem:oc_FSUBP),
   {DE_16}
    (Base:465; Count:2; Mnem:oc_FSUBP),
   {DE_17}
    (Base:463; Count:2; Mnem:oc_FIDIV),
   {DE_18}
    (Base:431; Count:2; Mnem:oc_FDIVRP),
   {DE_19}
    (Base:465; Count:2; Mnem:oc_FDIVRP),
   {DE_20}
    (Base:463; Count:2; Mnem:oc_FIDIVR),
   {DE_21}
    (Base:431; Count:2; Mnem:oc_FDIVP),
   {DE_22}
    (Base:465; Count:2; Mnem:oc_FDIVP),
   {DF_0}
    (Base:463; Count:2; Mnem:oc_FILD),
   {DF_1}
    (Base:437; Count:1; Mnem:oc_FFREEP),
   {DF_2}
    (Base:469; Count:2; Mnem:oc_FISTTP),
   {DF_3}
    (Base:397; Count:2; Mnem:oc_FXCH7),
   {DF_4}
    (Base:397; Count:2; Mnem:oc_FXCH7),
   {DF_5}
    (Base:469; Count:2; Mnem:oc_FIST),
   {DF_6}
    (Base:403; Count:2; Mnem:oc_FSTP8),
   {DF_7}
    (Base:403; Count:2; Mnem:oc_FSTP8),
   {DF_8}
    (Base:469; Count:2; Mnem:oc_FISTP),
   {DF_9}
    (Base:403; Count:2; Mnem:oc_FSTP9),
   {DF_10}
    (Base:403; Count:2; Mnem:oc_FSTP9),
   {DF_11}
    (Base:471; Count:2; Mnem:oc_FBLD),
   {DF_12}
    (Base:473; Count:1; Mnem:oc_FNSTSW),
   {DF_13}
    (Base:473; Count:1; Mnem:oc_FSTSW),
   {DF_14}
    (Base:474; Count:2; Mnem:oc_FILD),
   {DF_15}
    (Base:425; Count:2; Mnem:oc_FUCOMIP),
   {DF_16}
    (Base:476; Count:2; Mnem:oc_FBSTP),
   {DF_17}
    (Base:425; Count:2; Mnem:oc_FCOMIP),
   {DF_18}
    (Base:438; Count:2; Mnem:oc_FISTP),
   {E0_0}
    (Base:478; Count:2; Mnem:oc_LOOPNZ),
    (Base:478; Count:2; Mnem:oc_LOOPNE),
   {E0_1}
    (Base:480; Count:2; Mnem:oc_LOOPNZ),
    (Base:480; Count:2; Mnem:oc_LOOPNE),
   {E1_0}
    (Base:478; Count:2; Mnem:oc_LOOPZ),
    (Base:478; Count:2; Mnem:oc_LOOPE),
   {E1_1}
    (Base:480; Count:2; Mnem:oc_LOOPZ),
    (Base:480; Count:2; Mnem:oc_LOOPE),
   {E2_0}
    (Base:478; Count:2; Mnem:oc_LOOP),
   {E2_1}
    (Base:480; Count:2; Mnem:oc_LOOP),
   {E3_0}
    (Base:482; Count:2; Mnem:oc_JCXZ),
    (Base:484; Count:2; Mnem:oc_JECXZ),
   {E3_1}
    (Base:484; Count:2; Mnem:oc_JECXZ),
    (Base:486; Count:2; Mnem:oc_JRCXZ),
   {E4_0}
    (Base:488; Count:2; Mnem:oc_IN),
   {E5_0}
    (Base:490; Count:2; Mnem:oc_IN),
   {E6_0}
    (Base:492; Count:2; Mnem:oc_OUT),
   {E7_0}
    (Base:494; Count:2; Mnem:oc_OUT),
   {E8_0}
    (Base:496; Count:2; Mnem:oc_CALL),
   {E9_0}
    (Base:498; Count:1; Mnem:oc_JMP),
   {EA_0}
    (Base:499; Count:1; Mnem:oc_JMPF),
   {EB_0}
    (Base:134; Count:1; Mnem:oc_JMP),
   {EC_0}
    (Base:500; Count:2; Mnem:oc_IN),
   {ED_0}
    (Base:502; Count:2; Mnem:oc_IN),
   {EE_0}
    (Base:504; Count:2; Mnem:oc_OUT),
   {EF_0}
    (Base:506; Count:2; Mnem:oc_OUT),
   {F0_0}
    (Mnem:oc_LOCK),
   {F1_1}
    (Base:356; Count:2; Mnem:oc_INT1),
    (Base:356; Count:2; Mnem:oc_ICEBP),
   {F2_0}
    (Base:508; Count:1; Mnem:oc_REPNZ),
    (Base:508; Count:1; Mnem:oc_REPNE),
   {F2_1}
    (Base:508; Count:1; Mnem:oc_REP),
   {F2_2}
    (Base:509; Count:1; Mnem:oc_REPNZ),
    (Base:509; Count:1; Mnem:oc_REPNE),
   {F2_3}
    (Base:509; Count:1; Mnem:oc_REP),
   {F3_0}
    (Base:508; Count:1; Mnem:oc_REPZ),
    (Base:508; Count:1; Mnem:oc_REPE),
   {F3_1}
    (Base:510; Count:1; Mnem:oc_REP),
   {F3_2}
    (Base:509; Count:1; Mnem:oc_REPZ),
    (Base:509; Count:1; Mnem:oc_REPE),
   {F3_3}
    (Base:509; Count:1; Mnem:oc_REP),
   {F4_0}
    (Mnem:oc_HLT),
   {F5_0}
    (Mnem:oc_CMC),
   {F6_0}
    (Base:137; Count:2; Mnem:oc_TEST),
   {F6_1}
    (Base:137; Count:2; Mnem:oc_TEST),
   {F6_2}
    (Base:511; Count:1; Mnem:oc_NOT),
   {F6_3}
    (Base:511; Count:1; Mnem:oc_NEG),
   {F6_4}
    (Base:512; Count:3; Mnem:oc_MUL),
   {F6_5}
    (Base:512; Count:3; Mnem:oc_IMUL),
   {F6_6}
    (Base:515; Count:4; Mnem:oc_DIV),
   {F6_7}
    (Base:515; Count:4; Mnem:oc_IDIV),
   {F7_0}
    (Base:519; Count:2; Mnem:oc_TEST),
   {F7_1}
    (Base:519; Count:2; Mnem:oc_TEST),
   {F7_2}
    (Base:521; Count:1; Mnem:oc_NOT),
   {F7_3}
    (Base:521; Count:1; Mnem:oc_NEG),
   {F7_4}
    (Base:522; Count:3; Mnem:oc_MUL),
   {F7_5}
    (Base:522; Count:3; Mnem:oc_IMUL),
   {F7_6}
    (Base:525; Count:3; Mnem:oc_DIV),
   {F7_7}
    (Base:525; Count:3; Mnem:oc_IDIV),
   {F8_0}
    (Mnem:oc_CLC),
   {F9_0}
    (Mnem:oc_STC),
   {FA_0}
    (Mnem:oc_CLI),
   {FB_0}
    (Mnem:oc_STI),
   {FC_0}
    (Mnem:oc_CLD),
   {FD_0}
    (Mnem:oc_STD),
   {FE_0}
    (Base:511; Count:1; Mnem:oc_INC),
   {FE_1}
    (Base:511; Count:1; Mnem:oc_DEC),
   {FF_0}
    (Base:521; Count:1; Mnem:oc_INC),
   {FF_1}
    (Base:521; Count:1; Mnem:oc_DEC),
   {FF_2}
    (Base:528; Count:2; Mnem:oc_CALL),
   {FF_3}
    (Base:530; Count:2; Mnem:oc_CALL),
   {FF_4}
    (Base:532; Count:2; Mnem:oc_CALLF),
   {FF_5}
    (Base:534; Count:1; Mnem:oc_JMP),
   {FF_6}
    (Base:535; Count:1; Mnem:oc_JMP),
   {FF_7}
    (Base:536; Count:1; Mnem:oc_JMPF),
   {FF_8}
    (Base:528; Count:2; Mnem:oc_PUSH),
   {FF_9}
    (Base:537; Count:2; Mnem:oc_PUSH)
  );

const
  OneByteArgs: array[0..538]of TOpcodeArg = (
   {00_0 ADD, 08_0 OR, 10_0 ADC, 18_0 SBB, 20_0 AND, 28_0 SUB, 30_0 XOR}
    (Flags:[afDst]; A:am_E; T:at_b),
    (A:am_G; T:at_b),
   {01_0 ADD, 09_0 OR, 11_0 ADC, 19_0 SBB, 21_0 AND, 29_0 SUB, 31_0 XOR}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
   {02_0 ADD, 0A_0 OR, 12_0 ADC, 1A_0 SBB, 22_0 AND, 2A_0 SUB, 32_0 XOR}
    (Flags:[afDst]; A:am_G; T:at_b),
    (A:am_E; T:at_b),
   {03_0 ADD, 0B_0 OR, 13_0 ADC, 1B_0 SBB, 23_0 AND, 2B_0 SUB, 33_0 XOR}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
   {04_0 ADD, 0C_0 OR, 14_0 ADC, 1C_0 SBB, 24_0 AND, 2C_0 SUB, 34_0 XOR}
    (Name:an_AL; Flags:[afDst,afNr]; nr:0; T:at_b),
    (A:am_I; T:at_b),
   {05_0 ADD, 0D_0 OR, 15_0 ADC, 1D_0 SBB, 25_0 AND, 2D_0 SUB, 35_0 XOR}
    (Name:an_rAX; Flags:[afDst,afNr]; nr:0; T:at_vqp),
    (A:am_I; T:at_vds),
   {06_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_ES; Flags:[afNr]; nr:0; A:am_S2; T:at_w),
   {07_0 POP}
    (Name:an_ES; Flags:[afDst,afNoDepend,afNr]; nr:0; A:am_S2; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {0E_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_CS; Flags:[afNr]; nr:1; A:am_S2; T:at_w),
   {0F_0 POP}
    (Name:an_CS; Flags:[afDst,afNr]; nr:1; A:am_S2; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {16_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_SS; Flags:[afNr]; nr:2; A:am_S2; T:at_w),
   {17_0 POP}
    (Name:an_SS; Flags:[afDst,afNoDepend,afNr]; nr:2; A:am_S2; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {1E_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_DS; Flags:[afNr]; nr:3; A:am_S2; T:at_w),
   {1F_0 POP}
    (Name:an_DS; Flags:[afDst,afNoDepend,afNr]; nr:3; A:am_S2; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {26_0 ES}
    (Name:an_ES; Flags:[afNoDispl,afNr]; nr:0; T:at_w),
   {27_0 DAA, 2F_0 DAS}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
   {2E_0 CS}
    (Name:an_CS; Flags:[afNoDispl,afNr]; nr:1; T:at_w),
   {36_0 SS}
    (Name:an_SS; Flags:[afNoDispl,afNr]; nr:2; T:at_w),
   {37_0 AAA, 3F_0 AAS, D5_0 AAD}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an_AH; Flags:[afDst,afNoDispl,afNr]; nr:4; T:at_b),
   {38_0 CMP, 84_0 TEST}
    (A:am_E; T:at_b),
    (A:am_G; T:at_b),
   {39_0 CMP, 85_0 TEST}
    (A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
   {3A_0 CMP}
    (A:am_G; T:at_b),
    (A:am_E; T:at_b),
   {3B_0 CMP}
    (A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
   {3C_0 CMP, A8_0 TEST}
    (Name:an_AL; Flags:[afNr]; nr:0; T:at_b),
    (A:am_I; T:at_b),
   {3D_0 CMP, A9_0 TEST}
    (Name:an_rAX; Flags:[afNr]; nr:0; T:at_vqp),
    (A:am_I; T:at_vds),
   {3E_0 DS}
    (Name:an_DS; Flags:[afNoDispl,afNr]; nr:3; T:at_w),
   {40_0 INC, 48_0 DEC}
    (Flags:[afDst]; A:am_Z; T:at_v),
   {50_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_Z; T:at_v),
   {50_1 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_Z; T:at_vq),
   {58_0 POP}
    (Flags:[afDst,afNoDepend]; A:am_Z; T:at_v),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {58_1 POP}
    (Flags:[afDst,afNoDepend]; A:am_Z; T:at_vq),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {60_0 PUSHA}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
    (Name:an_CX; Flags:[afNoDispl,afNr]; nr:1; T:at_wo),
    (Name:an_DX; Flags:[afNoDispl,afNr]; nr:2; T:at_wo),
    (Name:an_BX; Flags:[afNoDispl,afNr]; nr:3; T:at_wo),
    (Name:an_SP; Flags:[afNoDispl,afNr]; nr:4; T:at_wo),
    (Name:an_BP; Flags:[afNoDispl,afNr]; nr:5; T:at_wo),
    (Name:an_SI; Flags:[afNoDispl,afNr]; nr:6; T:at_wo),
    (Name:an_DI; Flags:[afNoDispl,afNr]; nr:7; T:at_wo),
   {60_1 PUSHAD}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_do),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_do),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_do),
    (Name:an_EBX; Flags:[afNoDispl,afNr]; nr:3; T:at_do),
    (Name:an_ESP; Flags:[afNoDispl,afNr]; nr:4; T:at_do),
    (Name:an_eBP; Flags:[afNoDispl,afNr]; nr:5; T:at_do),
    (Name:an_ESI; Flags:[afNoDispl,afNr]; nr:6; T:at_do),
    (Name:an_EDI; Flags:[afNoDispl,afNr]; nr:7; T:at_do),
   {61_0 POPA}
    (Name:an_DI; Flags:[afDst,afNoDispl,afNr]; nr:7; T:at_wo),
    (Name:an_SI; Flags:[afDst,afNoDispl,afNr]; nr:6; T:at_wo),
    (Name:an_BP; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_wo),
    (Name:an_BX; Flags:[afDst,afNoDispl,afNr]; nr:3; T:at_wo),
    (Name:an_DX; Flags:[afDst,afNoDispl,afNr]; nr:2; T:at_wo),
    (Name:an_CX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_wo),
    (Name:an_AX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_wo),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {61_1 POPAD}
    (Name:an_EDI; Flags:[afDst,afNoDispl,afNr]; nr:7; T:at_do),
    (Name:an_ESI; Flags:[afDst,afNoDispl,afNr]; nr:6; T:at_do),
    (Name:an_eBP; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_do),
    (Name:an_EBX; Flags:[afDst,afNoDispl,afNr]; nr:3; T:at_do),
    (Name:an_EDX; Flags:[afDst,afNoDispl,afNr]; nr:2; T:at_do),
    (Name:an_eCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_do),
    (Name:an_eAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_do),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {62_0 BOUND}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_G; T:at_v),
    (A:am_M; T:at_a),
    (Name:an_EFlags; Flags:[afNoDispl]; A:am_F; T:at_v),
   {63_0 ARPL}
    (A:am_E; T:at_w),
    (A:am_G; T:at_w),
   {63_1 MOVSXD}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_dqp),
    (A:am_E; T:at_d),
   {64_0 FS}
    (Name:an_FS; Flags:[afNoDispl,afNr]; nr:4; T:at_w),
   {65_0 GS}
    (Name:an_GS; Flags:[afNoDispl,afNr]; nr:5; T:at_w),
   {68_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_I; T:at_vs),
   {69_0 IMUL}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
    (A:am_I; T:at_vds),
   {6A_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_I; T:at_bss),
   {6B_0 IMUL}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
    (A:am_I; T:at_bs),
   {6C_0 INS}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_b),
    (Name:an_DX; Flags:[afNr]; nr:2; T:at_w),
   {6C_0 INSB}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_b),
    (Name:an_DX; Flags:[afNoDispl,afNr]; nr:2; T:at_w),
   {6D_0 INS}
    (Name:an_ESiLDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_wo),
    (Name:an_DX; Flags:[afNr]; nr:2; T:at_w),
   {6D_0 INSW}
    (Name:an_ESiLDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_DX; Flags:[afNoDispl,afNr]; nr:2; T:at_w),
   {6D_1 INS}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_v),
    (Name:an_DX; Flags:[afNr]; nr:2; T:at_w),
   {6D_1 INSD}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_do),
    (Name:an_DX; Flags:[afNoDispl,afNr]; nr:2; T:at_w),
   {6E_0 OUTS}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNr]; nr:2; T:at_w),
    (Name:an__DS_iLrSIJ; A:am_X; T:at_b),
   {6E_0 OUTSB}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an__DS_iLrSIJ; Flags:[afNoDispl]; A:am_X; T:at_b),
   {6F_0 OUTS}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNr]; nr:2; T:at_w),
    (Name:an_DSiLSIJ; A:am_X; T:at_wo),
   {6F_0 OUTSW}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an_DSiLSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {6F_1 OUTS}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNr]; nr:2; T:at_w),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_v),
   {6F_1 OUTSD}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_do),
   {70_0 JO, 71_0 JNO, 72_0 JB, 72_0 JNAE, 72_0 JC, 73_0 JNB, 73_0 JAE, 73_0 JNC,
    74_0 JZ, 74_0 JE, 75_0 JNZ, 75_0 JNE, 76_0 JBE, 76_0 JNA, 77_0 JNBE, 77_0 JA,
    78_0 JS, 79_0 JNS, 7A_0 JP, 7A_0 JPE, 7B_0 JNP, 7B_0 JPO, 7C_0 JL, 7C_0 JNGE,
    7D_0 JNL, 7D_0 JGE, 7E_0 JLE, 7E_0 JNG, 7F_0 JNLE, 7F_0 JG, EB_0 JMP}
    (A:am_J; T:at_bs),
   {80_0 ADD, 80_1 OR, 80_2 ADC, 80_3 SBB, 80_4 AND, 80_5 SUB, 80_6 XOR, 82_0 ADD,
    82_1 OR, 82_2 ADC, 82_3 SBB, 82_4 AND, 82_5 SUB, 82_6 XOR, C0_0 ROL, C0_1 ROR,
    C0_2 RCL, C0_3 RCR, C0_4 SHL, C0_4 SAL, C0_5 SHR, C0_6 SAL, C0_6 SHL, C0_7 SAR}
    (Flags:[afDst]; A:am_E; T:at_b),
    (A:am_I; T:at_b),
   {80_7 CMP, 82_7 CMP, F6_0 TEST, F6_1 TEST}
    (A:am_E; T:at_b),
    (A:am_I; T:at_b),
   {81_0 ADD, 81_1 OR, 81_2 ADC, 81_3 SBB, 81_4 AND, 81_5 SUB, 81_6 XOR}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_I; T:at_vds),
   {81_7 CMP}
    (A:am_E; T:at_vqp),
    (A:am_I; T:at_vds),
   {83_0 ADD, 83_1 OR, 83_2 ADC, 83_3 SBB, 83_4 AND, 83_5 SUB, 83_6 XOR}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_I; T:at_bs),
   {83_7 CMP}
    (A:am_E; T:at_vqp),
    (A:am_I; T:at_bs),
   {86_0 XCHG}
    (Flags:[afDst]; A:am_G; T:at_b),
    (Flags:[afDst]; A:am_E; T:at_b),
   {87_0 XCHG}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (Flags:[afDst]; A:am_E; T:at_vqp),
   {88_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_b),
    (A:am_G; T:at_b),
   {89_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
   {8A_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_b),
    (A:am_E; T:at_b),
   {8B_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
   {8C_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_w),
    (A:am_S; T:at_w),
   {8C_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_vqp),
    (A:am_S; T:at_w),
   {8D_0 LEA}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_vqp),
    (Flags:[afNoDepend]; A:am_M),
   {8E_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_S; T:at_w),
    (A:am_E; T:at_w),
   {8F_0 POP}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_v),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {8F_1 POP}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_vq),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {90_0 XCHG}
    (Flags:[afDst]; A:am_Z; T:at_vqp),
    (Name:an_rAX; Flags:[afDst,afNr]; nr:0; T:at_vqp),
   {98_0 CBW, 98_2 CBW}
    (Name:an_AX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_wo),
    (Name:an_AL; Flags:[afNoDispl,afNr]; nr:0; T:at_b),
   {98_1 CWDE}
    (Name:an_eAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_do),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_w),
   {98_2 CWDE}
    (Name:an_eAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_dp),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_w),
   {98_2 CDQE}
    (Name:an_rAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_qp),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
   {99_0 CWD, 99_2 CWD}
    (Name:an_DX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {99_1 CDQ}
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_do),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_do),
   {99_2 CDQ}
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_dp),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_dp),
   {99_2 CQO}
    (Name:an_rDX; Flags:[afDst,afNoDispl,afNr]; nr:2; T:at_qp),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_qp),
   {9A_0 CALLF}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_A; T:at_p),
   {9C_0 PUSHF}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_Flags; Flags:[afNoDispl]; A:am_F; T:at_wo),
   {9C_1 PUSHFD}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_EFlags; Flags:[afNoDispl]; A:am_F; T:at_do),
   {9C_2 PUSHF}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_Flags; Flags:[afNoDispl]; A:am_F; T:at_ws),
   {9C_2 PUSHFQ}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_RFlags; Flags:[afNoDispl]; A:am_F; T:at_qs),
   {9D_0 POPF}
    (Name:an_Flags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_wo),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {9D_1 POPFD}
    (Name:an_EFlags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_do),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {9D_2 POPF}
    (Name:an_Flags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_ws),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {9D_2 POPFQ}
    (Name:an_RFlags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_qs),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {9E_0 SAHF}
    (Name:an_AH; Flags:[afNoDispl,afNr]; nr:4; T:at_b),
   {9F_0 LAHF}
    (Name:an_AH; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4; T:at_b),
   {A0_0 MOV}
    (Name:an_AL; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_b),
    (A:am_O; T:at_b),
   {A1_0 MOV}
    (Name:an_rAX; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_vqp),
    (A:am_O; T:at_vqp),
   {A2_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_O; T:at_b),
    (Name:an_AL; Flags:[afNr]; nr:0; T:at_b),
   {A3_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_O; T:at_vqp),
    (Name:an_rAX; Flags:[afNr]; nr:0; T:at_vqp),
   {A4_0 MOVS}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_b),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_b),
   {A4_0 MOVSB}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_b),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_b),
   {A5_0 MOVS}
    (Name:an_ESiLDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_wo),
    (Name:an_DSiLSIJ; A:am_X; T:at_wo),
   {A5_0 MOVSW}
    (Name:an_ESiLDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_DSiLSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {A5_1 MOVS}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_v),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_v),
   {A5_1 MOVSD}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_do),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_do),
   {A5_2 MOVS}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_vqp),
    (Name:an_LrSIJ; A:am_X; T:at_vqp),
   {A5_2 MOVSW}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {A5_2 MOVSD}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_dp),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_dp),
   {A5_2 MOVSQ}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_qp),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_qp),
   {A6_0 CMPS}
    (Name:an__ESi_LrDIJ; A:am_Y; T:at_b),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_b),
   {A6_0 CMPSB}
    (Name:an__ESi_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_b),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_b),
   {A7_0 CMPS}
    (Name:an_ESiLDIJ; A:am_Y; T:at_wo),
    (Name:an_DSiLSIJ; A:am_X; T:at_wo),
   {A7_0 CMPSW}
    (Name:an_ESiLDIJ; Flags:[afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_DSiLSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {A7_1 CMPS}
    (Name:an__ESi_LrDIJ; A:am_Y; T:at_v),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_v),
   {A7_1 CMPSD}
    (Name:an__ESi_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_do),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_do),
   {A7_2 CMPS}
    (Name:an_LrDIJ; A:am_Y; T:at_vqp),
    (Name:an_LrSIJ; A:am_X; T:at_vqp),
   {A7_2 CMPSW}
    (Name:an_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {A7_2 CMPSD}
    (Name:an_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_dp),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_dp),
   {A7_2 CMPSQ}
    (Name:an_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_qp),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_qp),
   {AA_0 STOS}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_b),
    (Name:an_AL; Flags:[afNoDispl,afNr]; nr:0; T:at_b),
   {AA_0 STOSB}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_b),
    (Name:an_AL; Flags:[afNoDispl,afNr]; nr:0; T:at_b),
   {AB_0 STOS}
    (Name:an_ESiLDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {AB_0 STOSW}
    (Name:an_ESiLDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {AB_1 STOS}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_v),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_v),
   {AB_1 STOSD}
    (Name:an__ESi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_do),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_do),
   {AB_2 STOS}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend]; A:am_Y; T:at_vqp),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_vqp),
   {AB_2 STOSW}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {AB_2 STOSD}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_dp),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_dp),
   {AB_2 STOSQ}
    (Name:an_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_Y; T:at_qp),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_qp),
   {AC_0 LODS}
    (Name:an_AL; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_b),
   {AC_0 LODSB}
    (Name:an_AL; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_b),
   {AD_0 LODS}
    (Name:an_AX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_wo),
    (Name:an_DSiLSIJ; A:am_X; T:at_wo),
   {AD_0 LODSW}
    (Name:an_AX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_wo),
    (Name:an_DSiLSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {AD_1 LODS}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_v),
    (Name:an__DSi_LrSIJ; A:am_X; T:at_v),
   {AD_1 LODSD}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_do),
    (Name:an__DSi_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_do),
   {AD_2 LODS}
    (Name:an_rAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_vqp),
    (Name:an_LrSIJ; A:am_X; T:at_vqp),
   {AD_2 LODSW}
    (Name:an_AX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_wo),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_wo),
   {AD_2 LODSD}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_dp),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_dp),
   {AD_2 LODSQ}
    (Name:an_rAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_qp),
    (Name:an_LrSIJ; Flags:[afNoDispl]; A:am_X; T:at_qp),
   {AE_0 SCAS}
    (Name:an__ESi_LrDIJ; A:am_Y; T:at_b),
    (Name:an_AL; Flags:[afNoDispl,afNr]; nr:0; T:at_b),
   {AE_0 SCASB}
    (Name:an__ESi_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_b),
    (Name:an_AL; Flags:[afNoDispl,afNr]; nr:0; T:at_b),
   {AF_0 SCAS}
    (Name:an_ESiLDIJ; A:am_Y; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {AF_0 SCASW}
    (Name:an_ESiLDIJ; Flags:[afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {AF_1 SCAS}
    (Name:an__ESi_LrDIJ; A:am_Y; T:at_v),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_v),
   {AF_1 SCASD}
    (Name:an__ESi_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_do),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_do),
   {AF_2 SCAS}
    (Name:an_LrDIJ; A:am_Y; T:at_vqp),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_vqp),
   {AF_2 SCASW}
    (Name:an_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_wo),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_wo),
   {AF_2 SCASD}
    (Name:an_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_dp),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_dp),
   {AF_2 SCASQ}
    (Name:an_LrDIJ; Flags:[afNoDispl]; A:am_Y; T:at_qp),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_qp),
   {B0_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_Z; T:at_b),
    (A:am_I; T:at_b),
   {B8_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_Z; T:at_vqp),
    (A:am_I; T:at_vqp),
   {C1_0 ROL, C1_1 ROR, C1_2 RCL, C1_3 RCR, C1_4 SHL, C1_4 SAL, C1_5 SHR, C1_6 SAL,
    C1_6 SHL, C1_7 SAR}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_I; T:at_b),
   {C2_0 RETN}
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
    (A:am_I; T:at_w),
   {C3_0 RETN, CB_0 RETF}
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {C4_0 LES}
    (Name:an_ES; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_w),
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_v),
    (A:am_M; T:at_p),
   {C5_0 LDS}
    (Name:an_DS; Flags:[afDst,afNoDispl,afNr]; nr:3; T:at_w),
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_v),
    (A:am_M; T:at_p),
   {C6_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_b),
    (A:am_I; T:at_b),
   {C7_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_vqp),
    (A:am_I; T:at_vds),
   {C8_0 ENTER}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_eBP; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_v),
    (A:am_I; T:at_w),
    (A:am_I; T:at_b),
   {C8_1 ENTER}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_rBP; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_vq),
    (A:am_I; T:at_w),
    (A:am_I; T:at_b),
   {C9_0 LEAVE}
    (Name:an_eBP; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_v),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {C9_1 LEAVE}
    (Name:an_rBP; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_vq),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {CA_0 RETF}
    (A:am_I; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {CC_0 INT}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_3; A:am_I),
    (Name:an_EFlags; Flags:[afNoDispl]; A:am_F; T:at_v),
   {CD_0 INT}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_I; T:at_b),
    (Name:an_EFlags; Flags:[afNoDispl]; A:am_F; T:at_v),
   {CE_0 INTO, F1_1 INT1, F1_1 ICEBP}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_EFlags; Flags:[afNoDispl]; A:am_F; T:at_v),
   {CF_0 IRET, CF_2 IRET}
    (Name:an_Flags; Flags:[afDst,afNoDispl]; A:am_F; T:at_wo),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {CF_1 IRETD}
    (Name:an_EFlags; Flags:[afDst,afNoDispl]; A:am_F; T:at_do),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {CF_2 IRETD}
    (Name:an_EFlags; Flags:[afDst,afNoDispl]; A:am_F; T:at_dp),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {CF_2 IRETQ}
    (Name:an_RFlags; Flags:[afDst,afNoDispl]; A:am_F; T:at_qp),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {D0_0 ROL, D0_1 ROR, D0_2 RCL, D0_3 RCR, D0_4 SHL, D0_4 SAL, D0_5 SHR, D0_6 SAL,
    D0_6 SHL, D0_7 SAR}
    (Flags:[afDst]; A:am_E; T:at_b),
    (Name:an_1; A:am_I),
   {D1_0 ROL, D1_1 ROR, D1_2 RCL, D1_3 RCR, D1_4 SHL, D1_4 SAL, D1_5 SHR, D1_6 SAL,
    D1_6 SHL, D1_7 SAR}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (Name:an_1; A:am_I),
   {D2_0 ROL, D2_1 ROR, D2_2 RCL, D2_3 RCR, D2_4 SHL, D2_4 SAL, D2_5 SHR, D2_6 SAL,
    D2_6 SHL, D2_7 SAR}
    (Flags:[afDst]; A:am_E; T:at_b),
    (Name:an_CL; Flags:[afNr]; nr:1; T:at_b),
   {D3_0 ROL, D3_1 ROR, D3_2 RCL, D3_3 RCR, D3_4 SHL, D3_4 SAL, D3_5 SHR, D3_6 SAL,
    D3_6 SHL, D3_7 SAR}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (Name:an_CL; Flags:[afNr]; nr:1; T:at_b),
   {D4_0 AAM}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an_AH; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4; T:at_b),
   {D4_1 AMX}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an_AH; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4; T:at_b),
    (A:am_I; T:at_b),
   {D5_1 ADX}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an_AH; Flags:[afDst,afNoDispl,afNr]; nr:4; T:at_b),
    (A:am_I; T:at_b),
   {D6_1 SALC, D6_1 SETALC}
    (Name:an_AL; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_b),
   {D7_0 XLAT}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an__DSi_LrBXtALJ; A:am_BB; T:at_b),
   {D7_0 XLATB}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an__DSi_LrBXtALJ; Flags:[afNoDispl]; A:am_BB; T:at_b),
   {D8_0 FADD, D8_1 FMUL, D8_6 FSUB, D8_7 FSUBR, D8_8 FDIV, D8_9 FDIVR}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_sr),
   {D8_0 FADD, D8_1 FMUL, D8_6 FSUB, D8_7 FSUBR, D8_8 FDIV, D8_9 FDIVR, DA_1 FCMOVB,
    DA_3 FCMOVE, DA_5 FCMOVBE, DA_7 FCMOVU, DB_1 FCMOVNB, DB_3 FCMOVNE, DB_5 FCMOVNBE,
    DB_7 FCMOVNU}
    (Name:an_ST; Flags:[afDst,afNr]; nr:0),
    (A:am_EST),
   {D8_2 FCOM, D8_4 FCOMP}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (A:am_ES; T:at_sr),
   {D8_3 FCOM, D8_5 FCOMP, DD_11 FUCOM, DD_13 FUCOMP}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1; A:am_EST),
   {D9_0 FLD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_ES; T:at_sr),
   {D9_1 FXCH, DD_3 FXCH4, DD_4 FXCH4, DF_3 FXCH7, DF_4 FXCH7}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (Flags:[afDst]; A:am_EST),
   {D9_2 FXCH}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afDst,afNoDispl,afNr]; nr:1; A:am_EST),
   {D9_3 FST, D9_5 FSTP}
    (Flags:[afDst]; A:am_M; T:at_sr),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {D9_6 FSTP1, D9_7 FSTP1, DF_6 FSTP8, DF_7 FSTP8, DF_9 FSTP9, DF_10 FSTP9}
    (Flags:[afDst]; A:am_EST),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {D9_8 FLDENV}
    (A:am_M; T:at_e),
   {D9_9 FCHS, D9_10 FABS, D9_14 FLD1, D9_15 FLDL2T, D9_16 FLDL2E, D9_17 FLDPI,
    D9_18 FLDLG2, D9_19 FLDLN2, D9_20 FLDZ, D9_23 F2XM1, D9_25 FPTAN, D9_27 FXTRACT,
    D9_35 FSQRT, D9_36 FSINCOS, D9_37 FRNDINT, D9_39 FSIN, D9_40 FCOS}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
   {D9_11 FTST, D9_12 FXAM}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {D9_13 FLDCW}
    (A:am_M; T:at_w),
   {D9_21 FNSTENV, D9_22 FSTENV}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_e),
   {D9_24 FYL2X, D9_26 FPATAN, D9_34 FYL2XP1}
    (Name:an_ST1; Flags:[afDst,afNoDispl,afNr]; nr:1),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {D9_28 FPREM1, D9_33 FPREM, D9_38 FSCALE}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
   {D9_31 FNSTCW, D9_32 FSTCW}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_w),
   {DA_0 FIADD, DA_2 FIMUL, DA_8 FISUB, DA_9 FISUBR, DA_11 FIDIV, DA_12 FIDIVR,
    DB_0 FILD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_di),
   {DA_4 FICOM, DA_6 FICOMP}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_di),
   {DA_10 FUCOMPP, DE_10 FCOMPP}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
   {DB_2 FISTTP, DB_4 FIST, DB_6 FISTP}
    (Flags:[afDst]; A:am_M; T:at_di),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {DB_21 FLD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_er),
   {DB_22 FUCOMI, DB_23 FCOMI, DF_15 FUCOMIP, DF_17 FCOMIP}
    (Name:an_ST; Flags:[afNr]; nr:0),
    (A:am_EST),
   {DB_24 FSTP}
    (Flags:[afDst]; A:am_M; T:at_er),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {DC_0 FADD, DC_2 FMUL, DC_10 FSUB, DC_12 FSUBR, DC_14 FDIV, DC_16 FDIVR, DD_0 FLD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_dr),
   {DC_1 FADD, DC_3 FMUL, DC_11 FSUBR, DC_13 FSUB, DC_15 FDIVR, DC_17 FDIV, DE_1 FADDP,
    DE_4 FMULP, DE_12 FSUBRP, DE_15 FSUBP, DE_18 FDIVRP, DE_21 FDIVP}
    (Flags:[afDst]; A:am_EST),
    (Name:an_ST; Flags:[afNr]; nr:0),
   {DC_4 FCOM, DC_7 FCOMP}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_dr),
   {DC_5 FCOM2, DC_6 FCOM2, DC_8 FCOMP3, DC_9 FCOMP3, DD_10 FUCOM, DD_12 FUCOMP,
    DE_7 FCOMP5, DE_8 FCOMP5}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (A:am_EST),
   {DD_1 FFREE, DF_1 FFREEP}
    (A:am_EST),
   {DD_2 FISTTP, DF_18 FISTP}
    (Flags:[afDst]; A:am_M; T:at_qi),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {DD_5 FST, DD_7 FSTP}
    (Flags:[afDst]; A:am_M; T:at_dr),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {DD_6 FST, DD_8 FSTP}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_EST),
   {DD_9 FRSTOR}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afDst,afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afDst,afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afDst,afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afDst,afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afDst,afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afDst,afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afDst,afNoDispl,afNr]; nr:7),
    (A:am_M; T:at_st),
   {DD_14 FNSAVE, DD_15 FSAVE}
    (Flags:[afDst]; A:am_M; T:at_st),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afNoDispl,afNr]; nr:7),
   {DD_16 FNSTSW, DD_17 FSTSW}
    (Flags:[afDst]; A:am_M; T:at_w),
   {DE_0 FIADD, DE_3 FIMUL, DE_11 FISUB, DE_14 FISUBR, DE_17 FIDIV, DE_20 FIDIVR,
    DF_0 FILD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_wi),
   {DE_2 FADDP, DE_5 FMULP, DE_13 FSUBRP, DE_16 FSUBP, DE_19 FDIVRP, DE_22 FDIVP}
    (Name:an_ST1; Flags:[afDst,afNoDispl,afNr]; nr:1; A:am_EST),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {DE_6 FICOM, DE_9 FICOMP}
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_wi),
   {DF_2 FISTTP, DF_5 FIST, DF_8 FISTP}
    (Flags:[afDst]; A:am_M; T:at_wi),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {DF_11 FBLD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_bcd),
   {DF_12 FNSTSW, DF_13 FSTSW}
    (Name:an_AX; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_w),
   {DF_14 FILD}
    (Name:an_ST; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_M; T:at_qi),
   {DF_16 FBSTP}
    (Flags:[afDst]; A:am_M; T:at_bcd),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
   {E0_0 LOOPNZ, E0_0 LOOPNE, E1_0 LOOPZ, E1_0 LOOPE, E2_0 LOOP}
    (Name:an_eCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_va),
    (A:am_J; T:at_bs),
   {E0_1 LOOPNZ, E0_1 LOOPNE, E1_1 LOOPZ, E1_1 LOOPE, E2_1 LOOP}
    (Name:an_rCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_dqa),
    (A:am_J; T:at_bs),
   {E3_0 JCXZ}
    (A:am_J; T:at_bs),
    (Name:an_CX; Flags:[afNoDispl,afNr]; nr:1; T:at_wa),
   {E3_0 JECXZ, E3_1 JECXZ}
    (A:am_J; T:at_bs),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_da),
   {E3_1 JRCXZ}
    (A:am_J; T:at_bs),
    (Name:an_rCX; Flags:[afNoDispl,afNr]; nr:1; T:at_qa),
   {E4_0 IN}
    (Name:an_AL; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_b),
    (A:am_I; T:at_b),
   {E5_0 IN}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_v),
    (A:am_I; T:at_b),
   {E6_0 OUT}
    (Flags:[afDst]; A:am_I; T:at_b),
    (Name:an_AL; Flags:[afNr]; nr:0; T:at_b),
   {E7_0 OUT}
    (Flags:[afDst]; A:am_I; T:at_b),
    (Name:an_eAX; Flags:[afNoDepend,afNr]; nr:0; T:at_v),
   {E8_0 CALL}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_J; T:at_vds),
   {E9_0 JMP}
    (A:am_J; T:at_vds),
   {EA_0 JMPF}
    (A:am_A; T:at_p),
   {EC_0 IN}
    (Name:an_AL; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_b),
    (Name:an_DX; Flags:[afNr]; nr:2; T:at_w),
   {ED_0 IN}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNr]; nr:0; T:at_v),
    (Name:an_DX; Flags:[afNr]; nr:2; T:at_w),
   {EE_0 OUT}
    (Name:an_DX; Flags:[afDst,afNr]; nr:2; T:at_w),
    (Name:an_AL; Flags:[afNr]; nr:0; T:at_b),
   {EF_0 OUT}
    (Name:an_DX; Flags:[afDst,afNr]; nr:2; T:at_w),
    (Name:an_eAX; Flags:[afNoDepend,afNr]; nr:0; T:at_v),
   {F2_0 REPNZ, F2_0 REPNE, F2_1 REP, F3_0 REPZ, F3_0 REPE}
    (Name:an_eCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_va),
   {F2_2 REPNZ, F2_2 REPNE, F2_3 REP, F3_2 REPZ, F3_2 REPE, F3_3 REP}
    (Name:an_rCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_dqa),
   {F3_1 REP}
    (Name:an_rCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_va),
   {F6_2 NOT, F6_3 NEG, FE_0 INC, FE_1 DEC}
    (Flags:[afDst]; A:am_E; T:at_b),
   {F6_4 MUL, F6_5 IMUL}
    (Name:an_AX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_w),
    (Name:an_AL; Flags:[afNoDispl,afNr]; nr:0; T:at_b),
    (A:am_E; T:at_b),
   {F6_6 DIV, F6_7 IDIV}
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (Name:an_AH; Flags:[afDst,afNoDispl,afNr]; nr:4; T:at_b),
    (Name:an_AX; Flags:[afNoDispl,afNr]; nr:0; T:at_w),
    (A:am_E; T:at_b),
   {F7_0 TEST, F7_1 TEST}
    (A:am_E; T:at_vqp),
    (A:am_I; T:at_vqp),
   {F7_2 NOT, F7_3 NEG, FF_0 INC, FF_1 DEC}
    (Flags:[afDst]; A:am_E; T:at_vqp),
   {F7_4 MUL, F7_5 IMUL}
    (Name:an_rDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_vqp),
    (Name:an_rAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_vqp),
    (A:am_E; T:at_vqp),
   {F7_6 DIV, F7_7 IDIV}
    (Name:an_rDX; Flags:[afDst,afNoDispl,afNr]; nr:2; T:at_vqp),
    (Name:an_rAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_vqp),
    (A:am_E; T:at_vqp),
   {FF_2 CALL, FF_8 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_E; T:at_v),
   {FF_3 CALL}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_E; T:at_q),
   {FF_4 CALLF}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_M; T:at_ptp),
   {FF_5 JMP}
    (A:am_E; T:at_v),
   {FF_6 JMP}
    (A:am_E; T:at_q),
   {FF_7 JMPF}
    (A:am_M; T:at_ptp),
   {FF_9 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (A:am_E; T:at_vq)
  );

{Two-byte opcodes}
const
  TwoByte: TPrimaryOpcodes = (
    {00}(Base:0; Count:7; Dep:[ed_OpcdExt]; Modes:[ee_r,ee_p]),
    {01}(Base:7; Count:17; Dep:[ed_OpcdExt,ed_SecOpcd]; Modes:[ee_r,ee_p,ee_e]),
    {02}(Base:24; Count:1; Mnem:oc_LAR; Modes:[ee_p]),
    {03}(Base:25; Count:1; Mnem:oc_LSL; Modes:[ee_p]),
    {04}(),
    {05}(Base:26; Count:2; Modes:[ee_p,ee_e]),
    {06}(Base:28; Count:1; Mnem:oc_CLTS; Modes:[ee_r]),
    {07}(Base:29; Count:2; Modes:[ee_p,ee_e]),
    {08}(Base:31; Count:1; Mnem:oc_INVD; Modes:[ee_r]),
    {09}(Base:32; Count:1; Mnem:oc_WBINVD; Modes:[ee_r]),
    {0A}(),
    {0B}(Base:33; Count:1; Mnem:oc_UD2; Modes:[ee_r]),
    {0C}(),
    {0D}(Base:34; Count:2; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {0E}(),
    {0F}(),
    {10}(Base:36; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {11}(Base:40; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {12}(Base:44; Count:5; Dep:[ed_Pref]; Modes:[ee_r]),
    {13}(Base:49; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {14}(Base:51; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {15}(Base:53; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {16}(Base:55; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {17}(Base:59; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {18}(Base:61; Count:9; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {19}(Base:70; Count:1; Mnem:oc_HINT_NOP; Modes:[ee_r]),
    {1A}(Base:71; Count:1; Mnem:oc_HINT_NOP; Modes:[ee_r]),
    {1B}(Base:72; Count:1; Mnem:oc_HINT_NOP; Modes:[ee_r]),
    {1C}(Base:73; Count:1; Mnem:oc_HINT_NOP; Modes:[ee_r]),
    {1D}(Base:74; Count:1; Mnem:oc_HINT_NOP; Modes:[ee_r]),
    {1E}(Base:75; Count:1; Mnem:oc_HINT_NOP; Modes:[ee_r]),
    {1F}(Base:76; Count:9; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {20}(Base:85; Count:4; Mnem:oc_MOV; Modes:[ee_r,ee_e]),
    {21}(Base:89; Count:4; Mnem:oc_MOV; Modes:[ee_r,ee_e]),
    {22}(Base:93; Count:4; Mnem:oc_MOV; Modes:[ee_r,ee_e]),
    {23}(Base:97; Count:4; Mnem:oc_MOV; Modes:[ee_r,ee_e]),
    {24}(Base:101; Count:2; Mnem:oc_MOV; Modes:[ee_r]),
    {25}(),
    {26}(Base:103; Count:2; Mnem:oc_MOV; Modes:[ee_r]),
    {27}(),
    {28}(Base:105; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {29}(Base:107; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {2A}(Base:109; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {2B}(Base:113; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {2C}(Base:115; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {2D}(Base:119; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {2E}(Base:123; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {2F}(Base:125; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {30}(Base:127; Count:1; Mnem:oc_WRMSR; Modes:[ee_r]),
    {31}(Base:128; Count:1; Mnem:oc_RDTSC; Modes:[ee_r]),
    {32}(Base:129; Count:1; Mnem:oc_RDMSR; Modes:[ee_r]),
    {33}(Base:130; Count:1; Mnem:oc_RDPMC; Modes:[ee_r]),
    {34}(Base:131; Count:2; Mnem:oc_SYSENTER; Modes:[ee_p,ee_e]),
    {35}(Base:133; Count:1; Mnem:oc_SYSEXIT; Modes:[ee_p]),
    {36}(),
    {37}(Base:134; Count:1; Mnem:oc_GETSEC; Modes:[ee_r]),
    {38}(Base:135; Count:69; Dep:[ed_Pref,ed_SecOpcd]; Modes:[ee_r,ee_p,ee_e]),
    {39}(),
    {3A}(Base:204; Count:23; Dep:[ed_Pref,ed_SecOpcd]; Modes:[ee_r]),
    {3B}(),
    {3C}(),
    {3D}(),
    {3E}(),
    {3F}(),
    {40}(Base:227; Count:1; Mnem:oc_CMOVO; Modes:[ee_r]),
    {41}(Base:228; Count:1; Mnem:oc_CMOVNO; Modes:[ee_r]),
    {42}(Base:229; Count:1; Modes:[ee_r]),
    {43}(Base:230; Count:1; Modes:[ee_r]),
    {44}(Base:231; Count:1; Modes:[ee_r]),
    {45}(Base:232; Count:1; Modes:[ee_r]),
    {46}(Base:233; Count:1; Modes:[ee_r]),
    {47}(Base:234; Count:1; Modes:[ee_r]),
    {48}(Base:235; Count:1; Mnem:oc_CMOVS; Modes:[ee_r]),
    {49}(Base:236; Count:1; Mnem:oc_CMOVNS; Modes:[ee_r]),
    {4A}(Base:237; Count:1; Modes:[ee_r]),
    {4B}(Base:238; Count:1; Modes:[ee_r]),
    {4C}(Base:239; Count:1; Modes:[ee_r]),
    {4D}(Base:240; Count:1; Modes:[ee_r]),
    {4E}(Base:241; Count:1; Modes:[ee_r]),
    {4F}(Base:242; Count:1; Modes:[ee_r]),
    {50}(Base:243; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {51}(Base:245; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {52}(Base:249; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {53}(Base:251; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {54}(Base:253; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {55}(Base:255; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {56}(Base:257; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {57}(Base:259; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {58}(Base:261; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {59}(Base:265; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {5A}(Base:269; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {5B}(Base:273; Count:3; Dep:[ed_Pref]; Modes:[ee_r]),
    {5C}(Base:276; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {5D}(Base:280; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {5E}(Base:284; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {5F}(Base:288; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {60}(Base:292; Count:2; Mnem:oc_PUNPCKLBW; Dep:[ed_Pref]; Modes:[ee_r]),
    {61}(Base:294; Count:2; Mnem:oc_PUNPCKLWD; Dep:[ed_Pref]; Modes:[ee_r]),
    {62}(Base:296; Count:2; Mnem:oc_PUNPCKLDQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {63}(Base:298; Count:2; Mnem:oc_PACKSSWB; Dep:[ed_Pref]; Modes:[ee_r]),
    {64}(Base:300; Count:2; Mnem:oc_PCMPGTB; Dep:[ed_Pref]; Modes:[ee_r]),
    {65}(Base:302; Count:2; Mnem:oc_PCMPGTW; Dep:[ed_Pref]; Modes:[ee_r]),
    {66}(Base:304; Count:2; Mnem:oc_PCMPGTD; Dep:[ed_Pref]; Modes:[ee_r]),
    {67}(Base:306; Count:2; Mnem:oc_PACKUSWB; Dep:[ed_Pref]; Modes:[ee_r]),
    {68}(Base:308; Count:2; Mnem:oc_PUNPCKHBW; Dep:[ed_Pref]; Modes:[ee_r]),
    {69}(Base:310; Count:2; Mnem:oc_PUNPCKHWD; Dep:[ed_Pref]; Modes:[ee_r]),
    {6A}(Base:312; Count:2; Mnem:oc_PUNPCKHDQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {6B}(Base:314; Count:2; Mnem:oc_PACKSSDW; Dep:[ed_Pref]; Modes:[ee_r]),
    {6C}(Base:316; Count:1; Mnem:oc_PUNPCKLQDQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {6D}(Base:317; Count:1; Mnem:oc_PUNPCKHQDQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {6E}(Base:318; Count:4; Mnem:oc_MOVD; Dep:[ed_Pref]; Modes:[ee_r,ee_e]),
    {6F}(Base:322; Count:3; Dep:[ed_Pref]; Modes:[ee_r]),
    {70}(Base:325; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {71}(Base:329; Count:6; Dep:[ed_Pref,ed_OpcdExt]; Modes:[ee_r]),
    {72}(Base:335; Count:6; Dep:[ed_Pref,ed_OpcdExt]; Modes:[ee_r]),
    {73}(Base:341; Count:6; Dep:[ed_Pref,ed_OpcdExt]; Modes:[ee_r]),
    {74}(Base:347; Count:2; Mnem:oc_PCMPEQB; Dep:[ed_Pref]; Modes:[ee_r]),
    {75}(Base:349; Count:2; Mnem:oc_PCMPEQW; Dep:[ed_Pref]; Modes:[ee_r]),
    {76}(Base:351; Count:2; Mnem:oc_PCMPEQD; Dep:[ed_Pref]; Modes:[ee_r]),
    {77}(Base:353; Count:1; Mnem:oc_EMMS; Modes:[ee_r]),
    {78}(Base:354; Count:2; Mnem:oc_VMREAD; Modes:[ee_p,ee_e]),
    {79}(Base:356; Count:2; Mnem:oc_VMWRITE; Modes:[ee_p,ee_e]),
    {7A}(),
    {7B}(),
    {7C}(Base:358; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {7D}(Base:360; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {7E}(Base:362; Count:5; Dep:[ed_Pref]; Modes:[ee_r,ee_e]),
    {7F}(Base:367; Count:3; Dep:[ed_Pref]; Modes:[ee_r]),
    {80}(Base:370; Count:1; Mnem:oc_JO; Modes:[ee_r]),
    {81}(Base:371; Count:1; Mnem:oc_JNO; Modes:[ee_r]),
    {82}(Base:372; Count:1; Modes:[ee_r]),
    {83}(Base:373; Count:1; Modes:[ee_r]),
    {84}(Base:374; Count:1; Modes:[ee_r]),
    {85}(Base:375; Count:1; Modes:[ee_r]),
    {86}(Base:376; Count:1; Modes:[ee_r]),
    {87}(Base:377; Count:1; Modes:[ee_r]),
    {88}(Base:378; Count:1; Mnem:oc_JS; Modes:[ee_r]),
    {89}(Base:379; Count:1; Mnem:oc_JNS; Modes:[ee_r]),
    {8A}(Base:380; Count:1; Modes:[ee_r]),
    {8B}(Base:381; Count:1; Modes:[ee_r]),
    {8C}(Base:382; Count:1; Modes:[ee_r]),
    {8D}(Base:383; Count:1; Modes:[ee_r]),
    {8E}(Base:384; Count:1; Modes:[ee_r]),
    {8F}(Base:385; Count:1; Modes:[ee_r]),
    {90}(Base:386; Count:1; Mnem:oc_SETO; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {91}(Base:387; Count:1; Mnem:oc_SETNO; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {92}(Base:388; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {93}(Base:389; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {94}(Base:390; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {95}(Base:391; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {96}(Base:392; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {97}(Base:393; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {98}(Base:394; Count:1; Mnem:oc_SETS; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {99}(Base:395; Count:1; Mnem:oc_SETNS; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {9A}(Base:396; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {9B}(Base:397; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {9C}(Base:398; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {9D}(Base:399; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {9E}(Base:400; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {9F}(Base:401; Count:1; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {A0}(Base:402; Count:1; Mnem:oc_PUSH; Modes:[ee_r]),
    {A1}(Base:403; Count:1; Mnem:oc_POP; Modes:[ee_r]),
    {A2}(Base:404; Count:1; Mnem:oc_CPUID; Modes:[ee_r]),
    {A3}(Base:405; Count:1; Mnem:oc_BT; Modes:[ee_r]),
    {A4}(Base:406; Count:1; Mnem:oc_SHLD; Modes:[ee_r]),
    {A5}(Base:407; Count:1; Mnem:oc_SHLD; Modes:[ee_r]),
    {A6}(),
    {A7}(),
    {A8}(Base:408; Count:1; Mnem:oc_PUSH; Modes:[ee_r]),
    {A9}(Base:409; Count:1; Mnem:oc_POP; Modes:[ee_r]),
    {AA}(Base:410; Count:1; Mnem:oc_RSM; Modes:[ee_s]),
    {AB}(Base:411; Count:1; Mnem:oc_BTS; Modes:[ee_r]),
    {AC}(Base:412; Count:1; Mnem:oc_SHRD; Modes:[ee_r]),
    {AD}(Base:413; Count:1; Mnem:oc_SHRD; Modes:[ee_r]),
    {AE}(Base:414; Count:14; Dep:[ed_OpcdExt]; Modes:[ee_r,ee_e]),
    {AF}(Base:428; Count:1; Mnem:oc_IMUL; Modes:[ee_r]),
    {B0}(Base:429; Count:1; Mnem:oc_CMPXCHG; Modes:[ee_r]),
    {B1}(Base:430; Count:1; Mnem:oc_CMPXCHG; Modes:[ee_r]),
    {B2}(Base:431; Count:1; Mnem:oc_LSS; Modes:[ee_r]),
    {B3}(Base:432; Count:1; Mnem:oc_BTR; Modes:[ee_r]),
    {B4}(Base:433; Count:1; Mnem:oc_LFS; Modes:[ee_r]),
    {B5}(Base:434; Count:1; Mnem:oc_LGS; Modes:[ee_r]),
    {B6}(Base:435; Count:1; Mnem:oc_MOVZX; Modes:[ee_r]),
    {B7}(Base:436; Count:1; Mnem:oc_MOVZX; Modes:[ee_r]),
    {B8}(Base:437; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {B9}(Base:439; Count:1; Mnem:oc_UD; Modes:[ee_r]),
    {BA}(Base:440; Count:4; Dep:[ed_OpcdExt]; Modes:[ee_r]),
    {BB}(Base:444; Count:1; Mnem:oc_BTC; Modes:[ee_r]),
    {BC}(Base:445; Count:1; Mnem:oc_BSF; Modes:[ee_r]),
    {BD}(Base:446; Count:1; Mnem:oc_BSR; Modes:[ee_r]),
    {BE}(Base:447; Count:1; Mnem:oc_MOVSX; Modes:[ee_r]),
    {BF}(Base:448; Count:1; Mnem:oc_MOVSX; Modes:[ee_r]),
    {C0}(Base:449; Count:1; Mnem:oc_XADD; Modes:[ee_r]),
    {C1}(Base:450; Count:1; Mnem:oc_XADD; Modes:[ee_r]),
    {C2}(Base:451; Count:4; Dep:[ed_Pref]; Modes:[ee_r]),
    {C3}(Base:455; Count:1; Mnem:oc_MOVNTI; Modes:[ee_r]),
    {C4}(Base:456; Count:2; Mnem:oc_PINSRW; Dep:[ed_Pref]; Modes:[ee_r]),
    {C5}(Base:458; Count:2; Mnem:oc_PEXTRW; Dep:[ed_Pref]; Modes:[ee_r]),
    {C6}(Base:460; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {C7}(Base:462; Count:6; Dep:[ed_Pref,ed_OpcdExt]; Modes:[ee_r,ee_p,ee_e]),
    {C8}(Base:468; Count:1; Mnem:oc_BSWAP; Dep:[ed_Z]; Modes:[ee_r]),
    {C9}(Dep:[ed_Z]),
    {CA}(Dep:[ed_Z]),
    {CB}(Dep:[ed_Z]),
    {CC}(Dep:[ed_Z]),
    {CD}(Dep:[ed_Z]),
    {CE}(Dep:[ed_Z]),
    {CF}(Dep:[ed_Z]),
    {D0}(Base:469; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {D1}(Base:471; Count:2; Mnem:oc_PSRLW; Dep:[ed_Pref]; Modes:[ee_r]),
    {D2}(Base:473; Count:2; Mnem:oc_PSRLD; Dep:[ed_Pref]; Modes:[ee_r]),
    {D3}(Base:475; Count:2; Mnem:oc_PSRLQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {D4}(Base:477; Count:2; Mnem:oc_PADDQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {D5}(Base:479; Count:2; Mnem:oc_PMULLW; Dep:[ed_Pref]; Modes:[ee_r]),
    {D6}(Base:481; Count:3; Dep:[ed_Pref]; Modes:[ee_r]),
    {D7}(Base:484; Count:2; Mnem:oc_PMOVMSKB; Dep:[ed_Pref]; Modes:[ee_r]),
    {D8}(Base:486; Count:2; Mnem:oc_PSUBUSB; Dep:[ed_Pref]; Modes:[ee_r]),
    {D9}(Base:488; Count:2; Mnem:oc_PSUBUSW; Dep:[ed_Pref]; Modes:[ee_r]),
    {DA}(Base:490; Count:2; Mnem:oc_PMINUB; Dep:[ed_Pref]; Modes:[ee_r]),
    {DB}(Base:492; Count:2; Mnem:oc_PAND; Dep:[ed_Pref]; Modes:[ee_r]),
    {DC}(Base:494; Count:2; Mnem:oc_PADDUSB; Dep:[ed_Pref]; Modes:[ee_r]),
    {DD}(Base:496; Count:2; Mnem:oc_PADDUSW; Dep:[ed_Pref]; Modes:[ee_r]),
    {DE}(Base:498; Count:2; Mnem:oc_PMAXUB; Dep:[ed_Pref]; Modes:[ee_r]),
    {DF}(Base:500; Count:2; Mnem:oc_PANDN; Dep:[ed_Pref]; Modes:[ee_r]),
    {E0}(Base:502; Count:2; Mnem:oc_PAVGB; Dep:[ed_Pref]; Modes:[ee_r]),
    {E1}(Base:504; Count:2; Mnem:oc_PSRAW; Dep:[ed_Pref]; Modes:[ee_r]),
    {E2}(Base:506; Count:2; Mnem:oc_PSRAD; Dep:[ed_Pref]; Modes:[ee_r]),
    {E3}(Base:508; Count:2; Mnem:oc_PAVGW; Dep:[ed_Pref]; Modes:[ee_r]),
    {E4}(Base:510; Count:2; Mnem:oc_PMULHUW; Dep:[ed_Pref]; Modes:[ee_r]),
    {E5}(Base:512; Count:2; Mnem:oc_PMULHW; Dep:[ed_Pref]; Modes:[ee_r]),
    {E6}(Base:514; Count:3; Dep:[ed_Pref]; Modes:[ee_r]),
    {E7}(Base:517; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {E8}(Base:519; Count:2; Mnem:oc_PSUBSB; Dep:[ed_Pref]; Modes:[ee_r]),
    {E9}(Base:521; Count:2; Mnem:oc_PSUBSW; Dep:[ed_Pref]; Modes:[ee_r]),
    {EA}(Base:523; Count:2; Mnem:oc_PMINSW; Dep:[ed_Pref]; Modes:[ee_r]),
    {EB}(Base:525; Count:2; Mnem:oc_POR; Dep:[ed_Pref]; Modes:[ee_r]),
    {EC}(Base:527; Count:2; Mnem:oc_PADDSB; Dep:[ed_Pref]; Modes:[ee_r]),
    {ED}(Base:529; Count:2; Mnem:oc_PADDSW; Dep:[ed_Pref]; Modes:[ee_r]),
    {EE}(Base:531; Count:2; Mnem:oc_PMAXSW; Dep:[ed_Pref]; Modes:[ee_r]),
    {EF}(Base:533; Count:2; Mnem:oc_PXOR; Dep:[ed_Pref]; Modes:[ee_r]),
    {F0}(Base:535; Count:1; Mnem:oc_LDDQU; Dep:[ed_Pref]; Modes:[ee_r]),
    {F1}(Base:536; Count:2; Mnem:oc_PSLLW; Dep:[ed_Pref]; Modes:[ee_r]),
    {F2}(Base:538; Count:2; Mnem:oc_PSLLD; Dep:[ed_Pref]; Modes:[ee_r]),
    {F3}(Base:540; Count:2; Mnem:oc_PSLLQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {F4}(Base:542; Count:2; Mnem:oc_PMULUDQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {F5}(Base:544; Count:2; Mnem:oc_PMADDWD; Dep:[ed_Pref]; Modes:[ee_r]),
    {F6}(Base:546; Count:2; Mnem:oc_PSADBW; Dep:[ed_Pref]; Modes:[ee_r]),
    {F7}(Base:548; Count:2; Dep:[ed_Pref]; Modes:[ee_r]),
    {F8}(Base:550; Count:2; Mnem:oc_PSUBB; Dep:[ed_Pref]; Modes:[ee_r]),
    {F9}(Base:552; Count:2; Mnem:oc_PSUBW; Dep:[ed_Pref]; Modes:[ee_r]),
    {FA}(Base:554; Count:2; Mnem:oc_PSUBD; Dep:[ed_Pref]; Modes:[ee_r]),
    {FB}(Base:556; Count:2; Mnem:oc_PSUBQ; Dep:[ed_Pref]; Modes:[ee_r]),
    {FC}(Base:558; Count:2; Mnem:oc_PADDB; Dep:[ed_Pref]; Modes:[ee_r]),
    {FD}(Base:560; Count:2; Mnem:oc_PADDW; Dep:[ed_Pref]; Modes:[ee_r]),
    {FE}(Base:562; Count:2; Mnem:oc_PADDD; Dep:[ed_Pref]; Modes:[ee_r]),
    {FF}()
  );

const
  TwoByteEntries: array[0..563]of TOpcodeEntry = (
{00}(Base:0; Count:2; Flags:[en_mode]; Mnem:oc_SLDT; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_system; Note:'Store Local Descriptor Table Register'),
    (Base:2; Count:2; Flags:[en_mode]; Mnem:oc_STR; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_system; Note:'Store Task Register'),
    (Base:4; Count:1; Flags:[en_attr,en_mode,en_ring]; Mnem:oc_LLDT; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_system; Note:'Load Local Descriptor Table Register'),
    (Base:5; Count:1; Flags:[en_attr,en_mode,en_ring]; Mnem:oc_LTR; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_system; Note:'Load Task Register'),
    (Base:6; Count:1; Flags:[en_mode]; Mnem:oc_VERR; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_system; DefF:fs_Z; ModifF:fs_Z; Note:'Verify a Segment for Reading'),
    (Base:7; Count:1; Flags:[en_mode]; Mnem:oc_VERW; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_system; DefF:fs_Z; ModifF:fs_Z; Note:'Verify a Segment for Writing'),
    (Base:8; Count:1; Flags:[]; Mnem:oc_JMPE; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_system; grp2:g2_branch; Note:'Jump to IA-64 Instruction Set'),
{01}(Base:9; Count:1; Flags:[]; Mnem:oc_SGDT; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_system; Note:'Store Global Descriptor Table Register'),
    (Base:10; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMCALL; mode:ee_p; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$0; SecOpcd:$C1; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Call to VM Monitor<det>Call to VM monitor by causing VM exit</det>'),
    (Base:11; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMLAUNCH; mode:ee_p; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$0; SecOpcd:$C2; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Launch Virtual Machine<det>Launch virtual machine managed by current VMCS</det>'),
    (Base:12; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMRESUME; mode:ee_p; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$0; SecOpcd:$C3; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Resume Virtual Machine<det>Resume virtual machine managed by current VMCS</det>'),
    (Base:13; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMXOFF; mode:ee_p; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$0; SecOpcd:$C4; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Leave VMX Operation<det>Leaves VMX operation</det>'),
    (Base:14; Count:1; Flags:[]; Mnem:oc_SIDT; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_system; Note:'Store Interrupt Descriptor Table Register'),
    (Base:15; Count:1; Flags:[en_ring]; Mnem:oc_MONITOR; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$1; SecOpcd:$C8; grp1:g1_sync; iExt:ie_sse3; Note:'Set Up Monitor Address'),
    (Base:16; Count:1; Flags:[en_ring]; Mnem:oc_MWAIT; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$1; SecOpcd:$C9; grp1:g1_sync; iExt:ie_sse3; Note:'Monitor Wait'),
    (Base:17; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_LGDT; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_system; Note:'Load Global Descriptor Table Register'),
    (Base:18; Count:1; Flags:[]; Mnem:oc_XGETBV; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$2; SecOpcd:$D0; grp1:g1_system; Note:'Get Value of Extended Control Register<det>Reads an XCR specified by ECX into EDX:EAX</det>'),
    (Base:19; Count:1; Flags:[en_ring]; Mnem:oc_XSETBV; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$2; SecOpcd:$D1; grp1:g1_system; Note:'Set Extended Control Register<det>Write the value in EDX:EAX to the XCR specified by ECX</det>'),
    (Base:20; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_LIDT; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_system; Note:'Load Interrupt Descriptor Table Register'),
    (Base:21; Count:2; Flags:[en_doc_ref]; Mnem:oc_SMSW; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_system; Note:'Store Machine Status Word'),
    (Base:23; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_LMSW; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_system; Note:'Load Machine Status Word'),
    (Base:24; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_INVLPG; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_system; Note:'Invalidate TLB Entry'),
    (Base:25; Count:1; Flags:[en_mode,en_ring]; Mnem:oc_SWAPGS; mode:ee_e; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$F8; grp1:g1_system; Note:'Swap GS Base Register'),
    (Base:26; Count:1; Flags:[en_attr,en_ring,en_ring_ref]; Mnem:oc_RDTSCP; FVals:[ba_ring]; Dep:[ed_OpcdExt,ed_SecOpcd]; OpcdExt:$7; SecOpcd:$F9; grp1:g1_system; Note:'Read Time-Stamp Counter and Processor ID<det>Read 64-bit time-stamp counter and 32-bit IA32_TSC_AUX value into EDX:EAX and ECX</det>'),
{02}(Base:27; Count:2; Flags:[en_mode,en_r]; Mnem:oc_LAR; mode:ee_p; FData:[od_ModR,od_ModM]; grp1:g1_system; DefF:fs_Z; ModifF:fs_Z; Note:'Load Access Rights Byte'),
{03}(Base:29; Count:2; Flags:[en_mode,en_r]; Mnem:oc_LSL; mode:ee_p; FData:[od_ModR,od_ModM]; grp1:g1_system; DefF:fs_Z; ModifF:fs_Z; Note:'Load Segment Limit'),
{05}(Base:31; Count:1; Flags:[en_doc,en_doc1632_ref,en_mode,en_particular]; Mnem:oc_LOADALL; FVals:[ba_doc]; mode:ee_p; grp1:g1_system; grp2:g2_branch; Note:'Load All of the CPU Registers'),
    (Base:32; Count:1; Flags:[en_doc64_ref,en_mode]; Mnem:oc_SYSCALL; mode:ee_e; grp1:g1_system; grp2:g2_branch; Note:'Fast System Call'),
{06}(Base:33; Count:1; Flags:[en_ring]; Mnem:oc_CLTS; grp1:g1_system; Note:'Clear Task-Switched Flag in CR0'),
{07}(Base:34; Count:1; Flags:[en_doc,en_doc1632_ref,en_mode,en_particular]; Mnem:oc_LOADALL; FVals:[ba_doc]; mode:ee_p; grp1:g1_system; grp2:g2_branch; Note:'Load All of the CPU Registers'),
    (Base:35; Count:1; Flags:[en_mode,en_ring]; Mnem:oc_SYSRET; mode:ee_e; grp1:g1_system; grp2:g2_branch; grp3:g3_trans; Note:'Return From Fast System Call'),
{08}(Base:36; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_INVD; grp1:g1_system; Note:'Invalidate Internal Caches'),
{09}(Base:37; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_WBINVD; grp1:g1_system; Note:'Write Back and Invalidate Cache'),
{0B}(Base:38; Count:1; Flags:[en_attr]; Mnem:oc_UD2; Attr:ea_invd; grp1:g1_gen; grp2:g2_control; Note:'Undefined Instruction'),
{0D}(Base:39; Count:1; Flags:[]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_control; Note:'No Operation'),
    (Base:40; Count:1; Flags:[]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_control; Note:'No Operation'),
{10}(Base:41; Count:1; Flags:[en_r]; Mnem:oc_MOVUPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Unaligned Packed Single-FP Values'),
    (Base:42; Count:1; Flags:[en_r]; Mnem:oc_MOVSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Scalar Single-FP Values'),
    (Base:43; Count:1; Flags:[en_r]; Mnem:oc_MOVUPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Unaligned Packed Double-FP Value'),
    (Base:44; Count:1; Flags:[en_r]; Mnem:oc_MOVSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Scalar Double-FP Value'),
{11}(Base:45; Count:1; Flags:[en_r]; Mnem:oc_MOVUPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Unaligned Packed Single-FP Values'),
    (Base:46; Count:1; Flags:[en_r]; Mnem:oc_MOVSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Scalar Single-FP Values'),
    (Base:47; Count:1; Flags:[en_r]; Mnem:oc_MOVUPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Unaligned Packed Double-FP Values'),
    (Base:48; Count:1; Flags:[en_r]; Mnem:oc_MOVSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Scalar Double-FP Value'),
{12}(Base:49; Count:1; Flags:[en_mod,en_r]; Mnem:oc_MOVHLPS; mod_:em_nomem; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Packed Single-FP Values High to Low'),
    (Base:50; Count:1; Flags:[en_mod,en_r]; Mnem:oc_MOVLPS; mod_:em_mem; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Low Packed Single-FP Values'),
    (Base:51; Count:1; Flags:[en_r]; Mnem:oc_MOVLPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Low Packed Double-FP Value'),
    (Base:52; Count:1; Flags:[en_r]; Mnem:oc_MOVDDUP; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse3; Note:'Move One Double-FP and Duplicate'),
    (Base:53; Count:1; Flags:[en_r]; Mnem:oc_MOVSLDUP; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse3; Note:'Move Packed Single-FP Low and Duplicate'),
{13}(Base:54; Count:1; Flags:[en_r]; Mnem:oc_MOVLPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Low Packed Single-FP Values'),
    (Base:55; Count:1; Flags:[en_r]; Mnem:oc_MOVLPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Low Packed Double-FP Value'),
{14}(Base:56; Count:1; Flags:[en_r]; Mnem:oc_UNPCKLPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_shunpck; iExt:ie_sse1; Note:'Unpack and Interleave Low Packed Single-FP Values'),
    (Base:57; Count:1; Flags:[en_r]; Mnem:oc_UNPCKLPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack and Interleave Low Packed Double-FP Values'),
{15}(Base:58; Count:1; Flags:[en_r]; Mnem:oc_UNPCKHPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_shunpck; iExt:ie_sse1; Note:'Unpack and Interleave High Packed Single-FP Values'),
    (Base:59; Count:1; Flags:[en_r]; Mnem:oc_UNPCKHPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack and Interleave High Packed Double-FP Values'),
{16}(Base:60; Count:1; Flags:[en_mod,en_r]; Mnem:oc_MOVLHPS; mod_:em_nomem; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Packed Single-FP Values Low to High'),
    (Base:61; Count:1; Flags:[en_mod,en_r]; Mnem:oc_MOVHPS; mod_:em_mem; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move High Packed Single-FP Values'),
    (Base:62; Count:1; Flags:[en_r]; Mnem:oc_MOVHPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move High Packed Double-FP Value'),
    (Base:63; Count:1; Flags:[en_r]; Mnem:oc_MOVSHDUP; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse3; Note:'Move Packed Single-FP High and Duplicate'),
{17}(Base:64; Count:1; Flags:[en_r]; Mnem:oc_MOVHPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move High Packed Single-FP Values'),
    (Base:65; Count:1; Flags:[en_r]; Mnem:oc_MOVHPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move High Packed Double-FP Value'),
{18}(Base:66; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:67; Count:1; Flags:[]; Mnem:oc_PREFETCHNTA; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_fetch; iExt:ie_sse1; Note:'Prefetch Data Into Caches'),
    (Base:68; Count:1; Flags:[]; Mnem:oc_PREFETCHT0; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_fetch; iExt:ie_sse1; Note:'Prefetch Data Into Caches'),
    (Base:69; Count:1; Flags:[]; Mnem:oc_PREFETCHT1; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_fetch; iExt:ie_sse1; Note:'Prefetch Data Into Caches'),
    (Base:70; Count:1; Flags:[]; Mnem:oc_PREFETCHT2; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_fetch; iExt:ie_sse1; Note:'Prefetch Data Into Caches'),
    (Base:71; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:72; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:73; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:74; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{19}(Base:75; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{1A}(Base:76; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{1B}(Base:77; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{1C}(Base:78; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{1D}(Base:79; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{1E}(Base:80; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{1F}(Base:81; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:82; Count:1; Flags:[]; Mnem:oc_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_control; Note:'No Operation'),
    (Base:83; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:84; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:85; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:86; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:87; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:88; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
    (Base:89; Count:1; Flags:[en_doc,en_doc_ref]; Mnem:oc_HINT_NOP; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_control; Note:'Hintable NOP'),
{20}(Base:90; Count:1; Flags:[en_doc64_ref,en_is_undoc,en_r,en_ring]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
    (Base:91; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
    (Base:92; Count:1; Flags:[en_is_undoc,en_mode,en_r,en_ring]; Mnem:oc_MOV; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
    (Base:93; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_mode,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
{21}(Base:94; Count:1; Flags:[en_is_undoc,en_r,en_ring]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
    (Base:95; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
    (Base:96; Count:1; Flags:[en_is_undoc,en_mode,en_r,en_ring]; Mnem:oc_MOV; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
    (Base:97; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_mode,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
{22}(Base:98; Count:1; Flags:[en_attr,en_doc64_ref,en_is_undoc,en_r,en_ring]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
    (Base:99; Count:1; Flags:[en_attr,en_doc,en_doc_ref,en_is_doc,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
    (Base:100; Count:1; Flags:[en_is_undoc,en_mode,en_r,en_ring]; Mnem:oc_MOV; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
    (Base:101; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_mode,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Control Registers'),
{23}(Base:102; Count:1; Flags:[en_attr,en_is_undoc,en_r,en_ring]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
    (Base:103; Count:1; Flags:[en_attr,en_doc,en_doc_ref,en_is_doc,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
    (Base:104; Count:1; Flags:[en_attr,en_is_undoc,en_mode,en_r,en_ring]; Mnem:oc_MOV; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
    (Base:105; Count:1; Flags:[en_attr,en_doc,en_doc_ref,en_is_doc,en_mode,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Debug Registers'),
{24}(Base:106; Count:1; Flags:[en_is_undoc,en_r,en_ring]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Test Registers'),
    (Base:107; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Test Registers'),
{26}(Base:108; Count:1; Flags:[en_is_undoc,en_r,en_ring]; Mnem:oc_MOV; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Test Registers'),
    (Base:109; Count:1; Flags:[en_doc,en_doc_ref,en_is_doc,en_particular,en_r,en_ring]; Mnem:oc_MOV; FVals:[ba_doc]; FData:[od_ModR,od_ModM]; grp1:g1_system; ModifF:fs_OSZAPC; UndefF:fs_OSZAPC; Note:'Move to/from Test Registers'),
{28}(Base:110; Count:1; Flags:[en_r]; Mnem:oc_MOVAPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Aligned Packed Single-FP Values'),
    (Base:111; Count:1; Flags:[en_r]; Mnem:oc_MOVAPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Aligned Packed Double-FP Values'),
{29}(Base:112; Count:1; Flags:[en_r]; Mnem:oc_MOVAPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Move Aligned Packed Single-FP Values'),
    (Base:113; Count:1; Flags:[en_r]; Mnem:oc_MOVAPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Aligned Packed Double-FP Values'),
{2A}(Base:114; Count:1; Flags:[en_r]; Mnem:oc_CVTPI2PS; FData:[od_ModR,od_ModM]; grp1:g1_conver; iExt:ie_sse1; Note:'Convert Packed DW Integers to Single-FP Values'),
    (Base:115; Count:1; Flags:[en_r]; Mnem:oc_CVTSI2SS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_conver; iExt:ie_sse1; Note:'Convert DW Integer to Scalar Single-FP Value'),
    (Base:116; Count:1; Flags:[en_r]; Mnem:oc_CVTPI2PD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Packed DW Integers to Double-FP Values'),
    (Base:117; Count:1; Flags:[en_r]; Mnem:oc_CVTSI2SD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert DW Integer to Scalar Double-FP Value'),
{2B}(Base:118; Count:1; Flags:[en_r]; Mnem:oc_MOVNTPS; FData:[od_ModR,od_ModM]; grp1:g1_cachect; iExt:ie_sse1; Note:'Store Packed Single-FP Values Using Non-Temporal Hint'),
    (Base:119; Count:1; Flags:[en_r]; Mnem:oc_MOVNTPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_cachect; iExt:ie_sse2; Note:'Store Packed Double-FP Values Using Non-Temporal Hint'),
{2C}(Base:120; Count:1; Flags:[en_r]; Mnem:oc_CVTTPS2PI; FData:[od_ModR,od_ModM]; grp1:g1_conver; iExt:ie_sse1; Note:'Convert with Trunc. Packed Single-FP Values to DW Integers'),
    (Base:121; Count:1; Flags:[en_r]; Mnem:oc_CVTTSS2SI; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_conver; iExt:ie_sse1; Note:'Convert with Trunc. Scalar Single-FP Value to DW Integer'),
    (Base:122; Count:1; Flags:[en_r]; Mnem:oc_CVTTPD2PI; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert with Trunc. Packed Double-FP Values to DW Integers'),
    (Base:123; Count:1; Flags:[en_r]; Mnem:oc_CVTTSD2SI; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Conv. with Trunc. Scalar Double-FP Value to Signed DW Int'),
{2D}(Base:124; Count:1; Flags:[en_r]; Mnem:oc_CVTPS2PI; FData:[od_ModR,od_ModM]; grp1:g1_conver; iExt:ie_sse1; Note:'Convert Packed Single-FP Values to DW Integers'),
    (Base:125; Count:1; Flags:[en_r]; Mnem:oc_CVTSS2SI; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_conver; iExt:ie_sse1; Note:'Convert Scalar Single-FP Value to DW Integer'),
    (Base:126; Count:1; Flags:[en_r]; Mnem:oc_CVTPD2PI; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Packed Double-FP Values to DW Integers'),
    (Base:127; Count:1; Flags:[en_r]; Mnem:oc_CVTSD2SI; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Scalar Double-FP Value to DW Integer'),
{2E}(Base:128; Count:1; Flags:[en_r]; Mnem:oc_UCOMISS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_compar; iExt:ie_sse1; DefF:fs_ZPC; ModifF:fs_ZPC; Note:'Unordered Compare Scalar Single-FP Values and Set EFLAGS'),
    (Base:129; Count:1; Flags:[en_r]; Mnem:oc_UCOMISD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_compar; iExt:ie_sse2; DefF:fs_ZPC; ModifF:fs_ZPC; Note:'Unordered Compare Scalar Double-FP Values and Set EFLAGS'),
{2F}(Base:130; Count:1; Flags:[en_r]; Mnem:oc_COMISS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_compar; iExt:ie_sse1; DefF:fs_ZPC; ModifF:fs_ZPC; Note:'Compare Scalar Ordered Single-FP Values and Set EFLAGS'),
    (Base:131; Count:1; Flags:[en_r]; Mnem:oc_COMISD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_compar; iExt:ie_sse2; DefF:fs_ZPC; ModifF:fs_ZPC; Note:'Compare Scalar Ordered Double-FP Values and Set EFLAGS'),
{30}(Base:132; Count:1; Flags:[en_attr,en_ring]; Mnem:oc_WRMSR; grp1:g1_system; Note:'Write to Model Specific Register'),
{31}(Base:133; Count:1; Flags:[en_ring,en_ring_ref]; Mnem:oc_RDTSC; FVals:[ba_ring]; grp1:g1_system; Note:'Read Time-Stamp Counter'),
{32}(Base:134; Count:1; Flags:[en_ring]; Mnem:oc_RDMSR; grp1:g1_system; Note:'Read from Model Specific Register'),
{33}(Base:135; Count:1; Flags:[en_ring,en_ring_ref]; Mnem:oc_RDPMC; FVals:[ba_ring]; grp1:g1_system; Note:'Read Performance-Monitoring Counters'),
{34}(Base:136; Count:1; Flags:[en_mode]; Mnem:oc_SYSENTER; mode:ee_p; grp1:g1_system; grp2:g2_branch; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Fast System Call'),
    (Base:137; Count:1; Flags:[en_doc_ref,en_mode]; Mnem:oc_SYSENTER; mode:ee_e; grp1:g1_system; grp2:g2_branch; DefF:fs_I; ModifF:fs_I; Vals0F:fs_I; Note:'Fast System Call'),
{35}(Base:138; Count:1; Flags:[en_doc64_ref,en_mode,en_ring]; Mnem:oc_SYSEXIT; mode:ee_p; grp1:g1_system; grp2:g2_branch; grp3:g3_trans; Note:'Fast Return from Fast System Call'),
{37}(Base:139; Count:1; Flags:[en_doc_ref]; Mnem:oc_GETSEC; iExt:ie_smx; Note:'GETSEC Leaf Functions'),
{38}(Base:140; Count:1; Flags:[en_r]; Mnem:oc_PSHUFB; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$0; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Shuffle Bytes'),
    (Base:141; Count:1; Flags:[en_r]; Mnem:oc_PSHUFB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$0; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Shuffle Bytes'),
    (Base:142; Count:1; Flags:[en_r]; Mnem:oc_PHADDW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$1; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Add'),
    (Base:143; Count:1; Flags:[en_r]; Mnem:oc_PHADDW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$1; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Add'),
    (Base:144; Count:1; Flags:[en_r]; Mnem:oc_PHADDD; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$2; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Add'),
    (Base:145; Count:1; Flags:[en_r]; Mnem:oc_PHADDD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$2; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Add'),
    (Base:146; Count:1; Flags:[en_r]; Mnem:oc_PHADDSW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$3; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Add and Saturate'),
    (Base:147; Count:1; Flags:[en_r]; Mnem:oc_PHADDSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Add and Saturate'),
    (Base:148; Count:1; Flags:[en_r]; Mnem:oc_PMADDUBSW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$4; grp1:g1_simdint; iExt:ie_ssse3; Note:'Multiply and Add Packed Signed and Unsigned Bytes'),
    (Base:149; Count:1; Flags:[en_r]; Mnem:oc_PMADDUBSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$4; grp1:g1_simdint; iExt:ie_ssse3; Note:'Multiply and Add Packed Signed and Unsigned Bytes'),
    (Base:150; Count:1; Flags:[en_r]; Mnem:oc_PHSUBW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$5; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Subtract'),
    (Base:151; Count:1; Flags:[en_r]; Mnem:oc_PHSUBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$5; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Subtract'),
    (Base:152; Count:1; Flags:[en_r]; Mnem:oc_PHSUBD; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$6; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Subtract'),
    (Base:153; Count:1; Flags:[en_r]; Mnem:oc_PHSUBD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$6; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Subtract'),
    (Base:154; Count:1; Flags:[en_r]; Mnem:oc_PHSUBSW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$7; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Subtract and Saturate'),
    (Base:155; Count:1; Flags:[en_r]; Mnem:oc_PHSUBSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$7; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Horizontal Subtract and Saturate'),
    (Base:156; Count:1; Flags:[en_r]; Mnem:oc_PSIGNB; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$8; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed SIGN'),
    (Base:157; Count:1; Flags:[en_r]; Mnem:oc_PSIGNB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$8; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed SIGN'),
    (Base:158; Count:1; Flags:[en_r]; Mnem:oc_PSIGNW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$9; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed SIGN'),
    (Base:159; Count:1; Flags:[en_r]; Mnem:oc_PSIGNW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$9; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed SIGN'),
    (Base:160; Count:1; Flags:[en_r]; Mnem:oc_PSIGND; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$A; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed SIGN'),
    (Base:161; Count:1; Flags:[en_r]; Mnem:oc_PSIGND; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$A; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed SIGN'),
    (Base:162; Count:1; Flags:[en_r]; Mnem:oc_PMULHRSW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$B; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Multiply High with Round and Scale'),
    (Base:163; Count:1; Flags:[en_r]; Mnem:oc_PMULHRSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$B; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Multiply High with Round and Scale'),
    (Base:164; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PBLENDVB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$10; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Variable Blend Packed Bytes'),
    (Base:165; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_BLENDVPS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$14; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Variable Blend Packed Single-FP Values'),
    (Base:166; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_BLENDVPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$15; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Variable Blend Packed Double-FP Values'),
    (Base:167; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PTEST; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$17; iExt:ie_sse41; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Vals0F:fs_OSAP; Note:'Logical Compare'),
    (Base:168; Count:1; Flags:[en_r]; Mnem:oc_PABSB; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$1C; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Absolute Value'),
    (Base:169; Count:1; Flags:[en_r]; Mnem:oc_PABSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$1C; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Absolute Value'),
    (Base:170; Count:1; Flags:[en_r]; Mnem:oc_PABSW; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$1D; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Absolute Value'),
    (Base:171; Count:1; Flags:[en_r]; Mnem:oc_PABSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$1D; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Absolute Value'),
    (Base:172; Count:1; Flags:[en_r]; Mnem:oc_PABSD; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$1E; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Absolute Value'),
    (Base:173; Count:1; Flags:[en_r]; Mnem:oc_PABSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$1E; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Absolute Value'),
    (Base:174; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVSXBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$20; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Sign Extend'),
    (Base:176; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVSXBD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$21; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Sign Extend'),
    (Base:178; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVSXBQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$22; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Sign Extend'),
    (Base:180; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVSXWD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$23; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Sign Extend'),
    (Base:182; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVSXWQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$24; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Sign Extend'),
    (Base:184; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVSXDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$25; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Sign Extend'),
    (Base:186; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMULDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$28; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse41; Note:'Multiply Packed Signed Dword Integers'),
    (Base:187; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PCMPEQQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$29; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Compare Packed Qword Data for Equal'),
    (Base:188; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_MOVNTDQA; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$2A; grp1:g1_cachect; iExt:ie_sse41; Note:'Load Double Quadword Non-Temporal Aligned Hint'),
    (Base:189; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PACKUSDW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$2B; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Pack with Unsigned Saturation'),
    (Base:190; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVZXBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$30; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Zero Extend'),
    (Base:192; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVZXBD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$31; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Zero Extend'),
    (Base:194; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVZXBQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$32; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Zero Extend'),
    (Base:196; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVZXWD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$33; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Zero Extend'),
    (Base:198; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVZXWQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$34; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Zero Extend'),
    (Base:200; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PMOVZXDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$35; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse41; Note:'Packed Move with Zero Extend'),
    (Base:202; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PCMPGTQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$37; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse42; Note:'Compare Packed Qword Data for Greater Than<det>Compare packed qwords in xmm2/m128 and xmm1 for greater than</det>'),
    (Base:203; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMINSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$38; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Minimum of Packed Signed Byte Integers'),
    (Base:204; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMINSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$39; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Minimum of Packed Signed Dword Integers'),
    (Base:205; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMINUW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3A; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Minimum of Packed Unsigned Word Integers'),
    (Base:206; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMINUD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3B; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Minimum of Packed Unsigned Dword Integers'),
    (Base:207; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMAXSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3C; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Maximum of Packed Signed Byte Integers'),
    (Base:208; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMAXSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3D; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Maximum of Packed Signed Dword Integers'),
    (Base:209; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMAXUW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3E; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Maximum of Packed Unsigned Word Integers'),
    (Base:210; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMAXUD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$3F; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Maximum of Packed Unsigned Dword Integers'),
    (Base:211; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PMULLD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$40; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse41; Note:'Multiply Packed Signed Dword Integers and Store Low Result'),
    (Base:212; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PHMINPOSUW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$41; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse41; Note:'Packed Horizontal Word Minimum'),
    (Base:213; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_INVEPT; mode:ee_p; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$80; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Invalidate Translations Derived from EPT<det>Invalidates EPT-derived entries in the TLBs and paging-structure caches</det>'),
    (Base:214; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_INVEPT; mode:ee_e; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$80; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Invalidate Translations Derived from EPT<det>Invalidates EPT-derived entries in the TLBs and paging-structure caches</det>'),
    (Base:215; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_INVVPID; mode:ee_p; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$81; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Invalidate Translations Based on VPID<det>Invalidates entries in the TLBs and paging-structure caches based on VPID</det>'),
    (Base:216; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_INVVPID; mode:ee_e; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$81; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Invalidate Translations Based on VPID<det>Invalidates entries in the TLBs and paging-structure caches based on VPID</det>'),
    (Base:217; Count:1; Flags:[en_r]; Mnem:oc_MOVBE; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$F0; grp1:g1_gen; grp2:g2_datamov; Note:'Move Data After Swapping Bytes<det>Reverse byte order in op2 and move to op1</det>'),
    (Base:218; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_CRC32; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$F2; SecOpcd:$F0; iExt:ie_sse42; Note:'Accumulate CRC32 Value<det>Accumulate CRC32 on r/m8</det>'),
    (Base:219; Count:1; Flags:[en_r]; Mnem:oc_MOVBE; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$F1; grp1:g1_gen; grp2:g2_datamov; Note:'Move Data After Swapping Bytes<det>Reverse byte order in op2 and move to op1</det>'),
    (Base:220; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_CRC32; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$F2; SecOpcd:$F1; iExt:ie_sse42; Note:'Accumulate CRC32 Value<det>Accumulate CRC32 on r/m8</det>'),
{3A}(Base:221; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_ROUNDPS; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$8; grp1:g1_simdfp; grp2:g2_conver; iExt:ie_sse41; Note:'Round Packed Single-FP Values'),
    (Base:222; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_ROUNDPD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$9; grp1:g1_simdfp; grp2:g2_conver; iExt:ie_sse41; Note:'Round Packed Double-FP Values'),
    (Base:223; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_ROUNDSS; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$A; grp1:g1_simdfp; grp2:g2_conver; iExt:ie_sse41; Note:'Round Scalar Single-FP Values'),
    (Base:224; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_ROUNDSD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$B; grp1:g1_simdfp; grp2:g2_conver; iExt:ie_sse41; Note:'Round Scalar Double-FP Values'),
    (Base:225; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_BLENDPS; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$C; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse41; Note:'Blend Packed Single-FP Values'),
    (Base:226; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_BLENDPD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$D; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse41; Note:'Blend Packed Double-FP Values'),
    (Base:227; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PBLENDW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$E; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Blend Packed Words'),
    (Base:228; Count:1; Flags:[en_r]; Mnem:oc_PALIGNR; FData:[od_ModR,od_ModM]; Dep:[ed_SecOpcd]; SecOpcd:$F; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Align Right'),
    (Base:229; Count:1; Flags:[en_r]; Mnem:oc_PALIGNR; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$F; grp1:g1_simdint; iExt:ie_ssse3; Note:'Packed Align Right'),
    (Base:230; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PEXTRB; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$14; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Extract Byte'),
    (Base:232; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PEXTRW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$15; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Extract Word'),
    (Base:234; Count:2; Flags:[en_doc_ref,en_r]; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$16; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Extract Dword/Qword'),
    (Base:236; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_EXTRACTPS; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$17; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse41; Note:'Extract Packed Single-FP Value'),
    (Base:237; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_PINSRB; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$20; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Insert Byte'),
    (Base:239; Count:2; Flags:[en_doc_ref,en_r]; Mnem:oc_INSERTPS; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$21; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse41; Note:'Insert Packed Single-FP Value'),
    (Base:241; Count:2; Flags:[en_doc_ref,en_r]; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$22; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse41; Note:'Insert Dword/Qword'),
    (Base:243; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_DPPS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$40; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse41; Note:'Dot Product of Packed Single-FP Values'),
    (Base:244; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_DPPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$41; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse41; Note:'Dot Product of Packed Double-FP Values'),
    (Base:245; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_MPSADBW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$42; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse41; Note:'Compute Multiple Packed Sums of Absolute Difference'),
    (Base:246; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PCMPESTRM; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$60; grp1:g1_strtxt; iExt:ie_sse42; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Vals0F:fs_AP; Note:'Packed Compare Explicit Length Strings, Return Mask<det>Perform a packed comparison of string data with'#13#10+
'	  explicit lengths, generating a mask, and storing the result'#13#10+
'	  in XMM0</det>'),
    (Base:247; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PCMPESTRI; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$61; grp1:g1_strtxt; iExt:ie_sse42; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Vals0F:fs_AP; Note:'Packed Compare Explicit Length Strings, Return Index<det>Perform a packed comparison of string data with'#13#10+
'	  explicit lengths, generating an index, and storing the'#13#10+
'	  result in rCX</det>'),
    (Base:248; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PCMPISTRM; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$62; grp1:g1_strtxt; iExt:ie_sse42; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Vals0F:fs_AP; Note:'Packed Compare Implicit Length Strings, Return Mask<det>Perform a packed comparison of string data with'#13#10+
'	  implicit lengths, generating a mask, and storing the result'#13#10+
'	  in XMM0</det>'),
    (Base:249; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_PCMPISTRI; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref,ed_SecOpcd]; Pref:$66; SecOpcd:$63; grp1:g1_strtxt; iExt:ie_sse42; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Vals0F:fs_AP; Note:'Packed Compare Implicit Length Strings, Return Index<det>Perform a packed comparison of string data with'#13#10+
'	  implicit lengths, generating an index, and storing the'#13#10+
'	  result in rCX</det>'),
{40}(Base:250; Count:1; Flags:[en_doc64_ref,en_r,en_tttn]; Mnem:oc_CMOVO; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_O; Note:'Conditional Move - overflow (OF=1)'),
{41}(Base:251; Count:1; Flags:[en_doc64_ref,en_r,en_tttn]; Mnem:oc_CMOVNO; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_O; Note:'Conditional Move - not overflow (OF=0)'),
{42}(Base:252; Count:3; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_C; Note:'Conditional Move - below/not above or equal/carry (CF=1)'),
{43}(Base:255; Count:3; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_C; Note:'Conditional Move - not below/above or equal/not carry (CF=0)'),
{44}(Base:258; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_Z; Note:'Conditional Move - zero/equal (ZF=0)'),
{45}(Base:260; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_Z; Note:'Conditional Move - not zero/not equal (ZF=1)'),
{46}(Base:262; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_ZC; Note:'Conditional Move - below or equal/not above (CF=1 AND ZF=1)'),
{47}(Base:264; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_ZC; Note:'Conditional Move - not below or equal/above (CF=0 AND ZF=0)'),
{48}(Base:266; Count:1; Flags:[en_doc64_ref,en_r,en_tttn]; Mnem:oc_CMOVS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_S; Note:'Conditional Move - sign (SF=1)'),
{49}(Base:267; Count:1; Flags:[en_doc64_ref,en_r,en_tttn]; Mnem:oc_CMOVNS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_S; Note:'Conditional Move - not sign (SF=0)'),
{4A}(Base:268; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_P; Note:'Conditional Move - parity/parity even (PF=1)'),
{4B}(Base:270; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_P; Note:'Conditional Move - not parity/parity odd'),
{4C}(Base:272; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OS; Note:'Conditional Move - less/not greater (SF!=OF)'),
{4D}(Base:274; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OS; Note:'Conditional Move - not less/greater or equal (SF=OF)'),
{4E}(Base:276; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OSZ; Note:'Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))'),
{4F}(Base:278; Count:2; Flags:[en_doc64_ref,en_r,en_tttn]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OSZ; Note:'Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))'),
{50}(Base:280; Count:1; Flags:[en_r]; Mnem:oc_MOVMSKPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_datamov; iExt:ie_sse1; Note:'Extract Packed Single-FP Sign Mask'),
    (Base:281; Count:1; Flags:[en_r]; Mnem:oc_MOVMSKPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_datamov; iExt:ie_sse2; Note:'Extract Packed Double-FP Sign Mask'),
{51}(Base:282; Count:1; Flags:[en_r]; Mnem:oc_SQRTPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Compute Square Roots of Packed Single-FP Values'),
    (Base:283; Count:1; Flags:[en_r]; Mnem:oc_SQRTSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Compute Square Root of Scalar Single-FP Value'),
    (Base:284; Count:1; Flags:[en_r]; Mnem:oc_SQRTPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Compute Square Roots of Packed Double-FP Values'),
    (Base:285; Count:1; Flags:[en_r]; Mnem:oc_SQRTSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Compute Square Root of Scalar Double-FP Value'),
{52}(Base:286; Count:1; Flags:[en_r]; Mnem:oc_RSQRTPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Compute Recipr. of Square Roots of Packed Single-FP Values'),
    (Base:287; Count:1; Flags:[en_r]; Mnem:oc_RSQRTSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Compute Recipr. of Square Root of Scalar Single-FP Value'),
{53}(Base:288; Count:1; Flags:[en_r]; Mnem:oc_RCPPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Compute Reciprocals of Packed Single-FP Values'),
    (Base:289; Count:1; Flags:[en_r]; Mnem:oc_RCPSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Compute Reciprocal of Scalar Single-FP Values'),
{54}(Base:290; Count:1; Flags:[en_r]; Mnem:oc_ANDPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_logical; iExt:ie_sse1; Note:'Bitwise Logical AND of Packed Single-FP Values'),
    (Base:291; Count:1; Flags:[en_r]; Mnem:oc_ANDPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_logical; iExt:ie_sse2; Note:'Bitwise Logical AND of Packed Double-FP Values'),
{55}(Base:292; Count:1; Flags:[en_r]; Mnem:oc_ANDNPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_logical; iExt:ie_sse1; Note:'Bitwise Logical AND NOT of Packed Single-FP Values'),
    (Base:293; Count:1; Flags:[en_r]; Mnem:oc_ANDNPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_logical; iExt:ie_sse2; Note:'Bitwise Logical AND NOT of Packed Double-FP Values'),
{56}(Base:294; Count:1; Flags:[en_r]; Mnem:oc_ORPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_logical; iExt:ie_sse1; Note:'Bitwise Logical OR of Single-FP Values'),
    (Base:295; Count:1; Flags:[en_r]; Mnem:oc_ORPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_logical; iExt:ie_sse2; Note:'Bitwise Logical OR of Double-FP Values'),
{57}(Base:296; Count:1; Flags:[en_r]; Mnem:oc_XORPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_logical; iExt:ie_sse1; Note:'Bitwise Logical XOR for Single-FP Values'),
    (Base:297; Count:1; Flags:[en_r]; Mnem:oc_XORPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_logical; iExt:ie_sse2; Note:'Bitwise Logical XOR for Double-FP Values'),
{58}(Base:298; Count:1; Flags:[en_r]; Mnem:oc_ADDPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Add Packed Single-FP Values'),
    (Base:299; Count:1; Flags:[en_r]; Mnem:oc_ADDSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Add Scalar Single-FP Values'),
    (Base:300; Count:1; Flags:[en_r]; Mnem:oc_ADDPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Double-FP Values'),
    (Base:301; Count:1; Flags:[en_r]; Mnem:oc_ADDSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Add Scalar Double-FP Values'),
{59}(Base:302; Count:1; Flags:[en_r]; Mnem:oc_MULPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Multiply Packed Single-FP Values'),
    (Base:303; Count:1; Flags:[en_r]; Mnem:oc_MULSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Multiply Scalar Single-FP Value'),
    (Base:304; Count:1; Flags:[en_r]; Mnem:oc_MULPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply Packed Double-FP Values'),
    (Base:305; Count:1; Flags:[en_r]; Mnem:oc_MULSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply Scalar Double-FP Values'),
{5A}(Base:306; Count:1; Flags:[en_r]; Mnem:oc_CVTPS2PD; FData:[od_ModR,od_ModM]; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Packed Single-FP Values to Double-FP Values'),
    (Base:307; Count:1; Flags:[en_r]; Mnem:oc_CVTPD2PS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Packed Double-FP Values to Single-FP Values'),
    (Base:308; Count:1; Flags:[en_r]; Mnem:oc_CVTSS2SD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Scalar Single-FP Value to Scalar Double-FP Value '),
    (Base:309; Count:1; Flags:[en_r]; Mnem:oc_CVTSD2SS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Scalar Double-FP Value to Scalar Single-FP Value'),
{5B}(Base:310; Count:1; Flags:[en_r]; Mnem:oc_CVTDQ2PS; FData:[od_ModR,od_ModM]; grp1:g1_pcksp; iExt:ie_sse2; Note:'Convert Packed DW Integers to Single-FP Values'),
    (Base:311; Count:1; Flags:[en_r]; Mnem:oc_CVTPS2DQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksp; iExt:ie_sse2; Note:'Convert Packed Single-FP Values to DW Integers'),
    (Base:312; Count:1; Flags:[en_r]; Mnem:oc_CVTTPS2DQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_pcksp; iExt:ie_sse2; Note:'Convert with Trunc. Packed Single-FP Values to DW Integers'),
{5C}(Base:313; Count:1; Flags:[en_r]; Mnem:oc_SUBPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Subtract Packed Single-FP Values'),
    (Base:314; Count:1; Flags:[en_r]; Mnem:oc_SUBSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Subtract Scalar Single-FP Values'),
    (Base:315; Count:1; Flags:[en_r]; Mnem:oc_SUBPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Double-FP Values'),
    (Base:316; Count:1; Flags:[en_r]; Mnem:oc_SUBSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Scalar Double-FP Values'),
{5D}(Base:317; Count:1; Flags:[en_r]; Mnem:oc_MINPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Return Minimum Packed Single-FP Values'),
    (Base:318; Count:1; Flags:[en_r]; Mnem:oc_MINSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Return Minimum Scalar Single-FP Value'),
    (Base:319; Count:1; Flags:[en_r]; Mnem:oc_MINPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Return Minimum Packed Double-FP Values'),
    (Base:320; Count:1; Flags:[en_r]; Mnem:oc_MINSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Return Minimum Scalar Double-FP Value'),
{5E}(Base:321; Count:1; Flags:[en_r]; Mnem:oc_DIVPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Divide Packed Single-FP Values'),
    (Base:322; Count:1; Flags:[en_r]; Mnem:oc_DIVSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Divide Scalar Single-FP Values'),
    (Base:323; Count:1; Flags:[en_r]; Mnem:oc_DIVPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Divide Packed Double-FP Values'),
    (Base:324; Count:1; Flags:[en_r]; Mnem:oc_DIVSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Divide Scalar Double-FP Values'),
{5F}(Base:325; Count:1; Flags:[en_r]; Mnem:oc_MAXPS; FData:[od_ModR,od_ModM]; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Return Maximum Packed Single-FP Values'),
    (Base:326; Count:1; Flags:[en_r]; Mnem:oc_MAXSS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse1; Note:'Return Maximum Scalar Single-FP Value'),
    (Base:327; Count:1; Flags:[en_r]; Mnem:oc_MAXPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Return Maximum Packed Double-FP Values'),
    (Base:328; Count:1; Flags:[en_r]; Mnem:oc_MAXSD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_arith; iExt:ie_sse2; Note:'Return Maximum Scalar Double-FP Value'),
{60}(Base:329; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLBW; FData:[od_ModR,od_ModM]; grp1:g1_unpack; iExt:ie_mmx; Note:'Unpack Low Data'),
    (Base:330; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack Low Data'),
{61}(Base:331; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLWD; FData:[od_ModR,od_ModM]; grp1:g1_unpack; iExt:ie_mmx; Note:'Unpack Low Data'),
    (Base:332; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLWD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack Low Data'),
{62}(Base:333; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLDQ; FData:[od_ModR,od_ModM]; grp1:g1_unpack; iExt:ie_mmx; Note:'Unpack Low Data'),
    (Base:334; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack Low Data'),
{63}(Base:335; Count:1; Flags:[en_r]; Mnem:oc_PACKSSWB; FData:[od_ModR,od_ModM]; grp1:g1_conver; iExt:ie_mmx; Note:'Pack with Signed Saturation'),
    (Base:336; Count:1; Flags:[en_r]; Mnem:oc_PACKSSWB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse2; Note:'Pack with Signed Saturation'),
{64}(Base:337; Count:1; Flags:[en_r]; Mnem:oc_PCMPGTB; FData:[od_ModR,od_ModM]; grp1:g1_compar; iExt:ie_mmx; Note:'Compare Packed Signed Integers for Greater Than'),
    (Base:338; Count:1; Flags:[en_r]; Mnem:oc_PCMPGTB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Signed Integers for Greater Than'),
{65}(Base:339; Count:1; Flags:[en_r]; Mnem:oc_PCMPGTW; FData:[od_ModR,od_ModM]; grp1:g1_compar; iExt:ie_mmx; Note:'Compare Packed Signed Integers for Greater Than'),
    (Base:340; Count:1; Flags:[en_r]; Mnem:oc_PCMPGTW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Signed Integers for Greater Than'),
{66}(Base:341; Count:1; Flags:[en_r]; Mnem:oc_PCMPGTD; FData:[od_ModR,od_ModM]; grp1:g1_compar; iExt:ie_mmx; Note:'Compare Packed Signed Integers for Greater Than'),
    (Base:342; Count:1; Flags:[en_r]; Mnem:oc_PCMPGTD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Signed Integers for Greater Than'),
{67}(Base:343; Count:1; Flags:[en_r]; Mnem:oc_PACKUSWB; FData:[od_ModR,od_ModM]; grp1:g1_conver; iExt:ie_mmx; Note:'Pack with Unsigned Saturation'),
    (Base:344; Count:1; Flags:[en_r]; Mnem:oc_PACKUSWB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse2; Note:'Pack with Unsigned Saturation'),
{68}(Base:345; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHBW; FData:[od_ModR,od_ModM]; grp1:g1_unpack; iExt:ie_mmx; Note:'Unpack High Data'),
    (Base:346; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack High Data'),
{69}(Base:347; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHWD; FData:[od_ModR,od_ModM]; grp1:g1_unpack; iExt:ie_mmx; Note:'Unpack High Data'),
    (Base:348; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHWD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack High Data'),
{6A}(Base:349; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHDQ; FData:[od_ModR,od_ModM]; grp1:g1_unpack; iExt:ie_mmx; Note:'Unpack High Data'),
    (Base:350; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack High Data'),
{6B}(Base:351; Count:1; Flags:[en_r]; Mnem:oc_PACKSSDW; FData:[od_ModR,od_ModM]; grp1:g1_conver; iExt:ie_mmx; Note:'Pack with Signed Saturation'),
    (Base:352; Count:1; Flags:[en_r]; Mnem:oc_PACKSSDW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_conver; iExt:ie_sse2; Note:'Pack with Signed Saturation'),
{6C}(Base:353; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKLQDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack Low Data'),
{6D}(Base:354; Count:1; Flags:[en_r]; Mnem:oc_PUNPCKHQDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Unpack High Data'),
{6E}(Base:355; Count:1; Flags:[en_r]; Mnem:oc_MOVD; FData:[od_ModR,od_ModM]; grp1:g1_datamov; iExt:ie_mmx; Note:'Move Doubleword'),
    (Base:356; Count:2; Flags:[en_doc64_ref,en_mode,en_r]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_datamov; iExt:ie_mmx; Note:'Move Doubleword/Quadword'),
    (Base:358; Count:1; Flags:[en_r]; Mnem:oc_MOVD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Doubleword'),
    (Base:359; Count:2; Flags:[en_doc64_ref,en_mode,en_r]; mode:ee_e; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Doubleword/Quadword'),
{6F}(Base:361; Count:1; Flags:[en_r]; Mnem:oc_MOVQ; FData:[od_ModR,od_ModM]; grp1:g1_datamov; iExt:ie_mmx; Note:'Move Quadword'),
    (Base:362; Count:1; Flags:[en_r]; Mnem:oc_MOVDQA; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Aligned Double Quadword'),
    (Base:363; Count:1; Flags:[en_r]; Mnem:oc_MOVDQU; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Unaligned Double Quadword'),
{70}(Base:364; Count:1; Flags:[en_r]; Mnem:oc_PSHUFW; FData:[od_ModR,od_ModM,od_I]; grp1:g1_simdint; iExt:ie_sse1; Note:'Shuffle Packed Words'),
    (Base:365; Count:1; Flags:[en_r]; Mnem:oc_PSHUFLW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Shuffle Packed Low Words'),
    (Base:366; Count:1; Flags:[en_r]; Mnem:oc_PSHUFHW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Shuffle Packed High Words'),
    (Base:367; Count:1; Flags:[en_r]; Mnem:oc_PSHUFD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shunpck; iExt:ie_sse2; Note:'Shuffle Packed Doublewords'),
{71}(Base:368; Count:1; Flags:[]; Mnem:oc_PSRLW; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Logical'),
    (Base:369; Count:1; Flags:[]; Mnem:oc_PSRLW; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$2; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Logical'),
    (Base:370; Count:1; Flags:[]; Mnem:oc_PSRAW; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Arithmetic'),
    (Base:371; Count:1; Flags:[]; Mnem:oc_PSRAW; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$4; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Arithmetic'),
    (Base:372; Count:1; Flags:[]; Mnem:oc_PSLLW; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Left Logical'),
    (Base:373; Count:1; Flags:[]; Mnem:oc_PSLLW; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$6; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Left Logical'),
{72}(Base:374; Count:1; Flags:[]; Mnem:oc_PSRLD; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Double Quadword Right Logical'),
    (Base:375; Count:1; Flags:[]; Mnem:oc_PSRLD; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$2; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Double Quadword Right Logical'),
    (Base:376; Count:1; Flags:[]; Mnem:oc_PSRAD; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Arithmetic'),
    (Base:377; Count:1; Flags:[]; Mnem:oc_PSRAD; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$4; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Arithmetic'),
    (Base:378; Count:1; Flags:[]; Mnem:oc_PSLLD; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Left Logical'),
    (Base:379; Count:1; Flags:[]; Mnem:oc_PSLLD; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$6; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Left Logical'),
{73}(Base:380; Count:1; Flags:[]; Mnem:oc_PSRLQ; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Logical'),
    (Base:381; Count:1; Flags:[]; Mnem:oc_PSRLQ; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$2; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Logical'),
    (Base:382; Count:1; Flags:[]; Mnem:oc_PSRLDQ; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$3; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Double Quadword Right Logical'),
    (Base:383; Count:1; Flags:[]; Mnem:oc_PSLLQ; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Left Logical'),
    (Base:384; Count:1; Flags:[]; Mnem:oc_PSLLQ; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$6; grp1:g1_shift; iExt:ie_sse2; Note:'Shift Packed Data Left Logical'),
    (Base:385; Count:1; Flags:[]; Mnem:oc_PSLLDQ; FData:[od_ModM,od_I]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$7; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Double Quadword Left Logical'),
{74}(Base:386; Count:1; Flags:[en_r]; Mnem:oc_PCMPEQB; FData:[od_ModR,od_ModM]; grp1:g1_compar; iExt:ie_mmx; Note:'Compare Packed Data for Equal'),
    (Base:387; Count:1; Flags:[en_r]; Mnem:oc_PCMPEQB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Data for Equal'),
{75}(Base:388; Count:1; Flags:[en_r]; Mnem:oc_PCMPEQW; FData:[od_ModR,od_ModM]; grp1:g1_compar; iExt:ie_mmx; Note:'Compare Packed Data for Equal'),
    (Base:389; Count:1; Flags:[en_r]; Mnem:oc_PCMPEQW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Data for Equal'),
{76}(Base:390; Count:1; Flags:[en_r]; Mnem:oc_PCMPEQD; FData:[od_ModR,od_ModM]; grp1:g1_compar; iExt:ie_mmx; Note:'Compare Packed Data for Equal'),
    (Base:391; Count:1; Flags:[en_r]; Mnem:oc_PCMPEQD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Data for Equal'),
{77}(Base:392; Count:1; Flags:[]; Mnem:oc_EMMS; grp1:g1_x87fpu; grp2:g2_control; iExt:ie_mmx; Note:'Empty MMX Technology State'),
{78}(Base:393; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_VMREAD; mode:ee_p; FData:[od_ModR,od_ModM]; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Read Field from Virtual-Machine Control Structure<det>Reads a specified VMCS field</det>'),
    (Base:394; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_VMREAD; mode:ee_e; FData:[od_ModR,od_ModM]; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Read Field from Virtual-Machine Control Structure<det>Reads a specified VMCS field</det>'),
{79}(Base:395; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_VMWRITE; mode:ee_p; FData:[od_ModR,od_ModM]; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Write Field to Virtual-Machine Control Structure<det>Writes a specified VMCS field</det>'),
    (Base:396; Count:1; Flags:[en_doc_ref,en_mode,en_r,en_ring]; Mnem:oc_VMWRITE; mode:ee_e; FData:[od_ModR,od_ModM]; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Write Field to Virtual-Machine Control Structure<det>Writes a specified VMCS field</det>'),
{7C}(Base:397; Count:1; Flags:[en_r]; Mnem:oc_HADDPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse3; Note:'Packed Double-FP Horizontal Add'),
    (Base:398; Count:1; Flags:[en_r]; Mnem:oc_HADDPS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse3; Note:'Packed Single-FP Horizontal Add'),
{7D}(Base:399; Count:1; Flags:[en_r]; Mnem:oc_HSUBPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse3; Note:'Packed Double-FP Horizontal Subtract'),
    (Base:400; Count:1; Flags:[en_r]; Mnem:oc_HSUBPS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse3; Note:'Packed Single-FP Horizontal Subtract'),
{7E}(Base:401; Count:1; Flags:[en_r]; Mnem:oc_MOVD; FData:[od_ModR,od_ModM]; grp1:g1_datamov; iExt:ie_mmx; Note:'Move Doubleword'),
    (Base:402; Count:2; Flags:[en_doc64_ref,en_mode,en_r]; mode:ee_e; FData:[od_ModR,od_ModM]; grp1:g1_datamov; iExt:ie_mmx; Note:'Move Doubleword/Quadword'),
    (Base:404; Count:1; Flags:[en_r]; Mnem:oc_MOVD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Doubleword'),
    (Base:405; Count:2; Flags:[en_doc64_ref,en_mode,en_r]; mode:ee_e; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Doubleword/Quadword'),
    (Base:407; Count:1; Flags:[en_r]; Mnem:oc_MOVQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Quadword'),
{7F}(Base:408; Count:1; Flags:[en_r]; Mnem:oc_MOVQ; FData:[od_ModR,od_ModM]; grp1:g1_datamov; iExt:ie_mmx; Note:'Move Quadword'),
    (Base:409; Count:1; Flags:[en_r]; Mnem:oc_MOVDQA; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Aligned Double Quadword'),
    (Base:410; Count:1; Flags:[en_r]; Mnem:oc_MOVDQU; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Unaligned Double Quadword'),
{80}(Base:411; Count:1; Flags:[en_doc64_ref,en_tttn]; Mnem:oc_JO; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_O; Note:'Jump short if overflow (OF=1)'),
{81}(Base:412; Count:1; Flags:[en_doc64_ref,en_tttn]; Mnem:oc_JNO; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_O; Note:'Jump short if not overflow (OF=0)'),
{82}(Base:413; Count:3; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_C; Note:'Jump short if below/not above or equal/carry (CF=1)'),
{83}(Base:416; Count:3; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_C; Note:'Jump short if not below/above or equal/not carry (CF=0)'),
{84}(Base:419; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Jump short if zero/equal (ZF=0)'),
{85}(Base:421; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_Z; Note:'Jump short if not zero/not equal (ZF=1)'),
{86}(Base:423; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_ZC; Note:'Jump short if below or equal/not above (CF=1 AND ZF=1)'),
{87}(Base:425; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_ZC; Note:'Jump short if not below or equal/above (CF=0 AND ZF=0)'),
{88}(Base:427; Count:1; Flags:[en_doc64_ref,en_tttn]; Mnem:oc_JS; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_S; Note:'Jump short if sign (SF=1)'),
{89}(Base:428; Count:1; Flags:[en_doc64_ref,en_tttn]; Mnem:oc_JNS; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_S; Note:'Jump short if not sign (SF=0)'),
{8A}(Base:429; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_P; Note:'Jump short if parity/parity even (PF=1)'),
{8B}(Base:431; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_P; Note:'Jump short if not parity/parity odd'),
{8C}(Base:433; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OS; Note:'Jump short if less/not greater (SF!=OF)'),
{8D}(Base:435; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OS; Note:'Jump short if not less/greater or equal (SF=OF)'),
{8E}(Base:437; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OSZ; Note:'Jump short if less or equal/not greater ((ZF=1) OR (SF!=OF))'),
{8F}(Base:439; Count:2; Flags:[en_doc64_ref,en_tttn]; FData:[od_J]; grp1:g1_gen; grp2:g2_branch; grp3:g3_cond; TestF:fs_OSZ; Note:'Jump short if not less nor equal/greater ((ZF=0) AND (SF=OF))'),
{90}(Base:441; Count:1; Flags:[en_doc_ref,en_tttn]; Mnem:oc_SETO; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_O; Note:'Set Byte on Condition - overflow (OF=1)'),
{91}(Base:442; Count:1; Flags:[en_doc_ref,en_tttn]; Mnem:oc_SETNO; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_O; Note:'Set Byte on Condition - not overflow (OF=0)'),
{92}(Base:443; Count:3; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_C; Note:'Set Byte on Condition - below/not above or equal/carry (CF=1)'),
{93}(Base:446; Count:3; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_C; Note:'Set Byte on Condition - not below/above or equal/not carry (CF=0)'),
{94}(Base:449; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_Z; Note:'Set Byte on Condition - zero/equal (ZF=0)'),
{95}(Base:451; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_Z; Note:'Set Byte on Condition - not zero/not equal (ZF=1)'),
{96}(Base:453; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_ZC; Note:'Set Byte on Condition - below or equal/not above (CF=1 AND ZF=1)'),
{97}(Base:455; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_ZC; Note:'Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)'),
{98}(Base:457; Count:1; Flags:[en_doc_ref,en_tttn]; Mnem:oc_SETS; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_S; Note:'Set Byte on Condition - sign (SF=1)'),
{99}(Base:458; Count:1; Flags:[en_doc_ref,en_tttn]; Mnem:oc_SETNS; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_S; Note:'Set Byte on Condition - not sign (SF=0)'),
{9A}(Base:459; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_P; Note:'Set Byte on Condition - parity/parity even (PF=1)'),
{9B}(Base:461; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_P; Note:'Set Byte on Condition - not parity/parity odd'),
{9C}(Base:463; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OS; Note:'Set Byte on Condition - less/not greater (SF!=OF)'),
{9D}(Base:465; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OS; Note:'Set Byte on Condition - not less/greater or equal (SF=OF)'),
{9E}(Base:467; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OSZ; Note:'Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))'),
{9F}(Base:469; Count:2; Flags:[en_doc_ref,en_tttn]; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_gen; grp2:g2_datamov; TestF:fs_OSZ; Note:'Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))'),
{A0}(Base:471; Count:1; Flags:[]; Mnem:oc_PUSH; grp1:g1_gen; grp2:g2_segreg; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
{A1}(Base:472; Count:1; Flags:[]; Mnem:oc_POP; grp1:g1_gen; grp2:g2_segreg; Note:'Pop a Value from the Stack'),
{A2}(Base:473; Count:1; Flags:[en_attr]; Mnem:oc_CPUID; grp1:g1_gen; grp2:g2_control; Note:'CPU Identification'),
{A3}(Base:474; Count:1; Flags:[en_r]; Mnem:oc_BT; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test'),
{A4}(Base:475; Count:1; Flags:[en_direction,en_r]; Mnem:oc_SHLD; FData:[od_ModR,od_ModM,od_I]; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Double Precision Shift Left'),
{A5}(Base:476; Count:1; Flags:[en_direction,en_r]; Mnem:oc_SHLD; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Double Precision Shift Left'),
{A8}(Base:477; Count:1; Flags:[]; Mnem:oc_PUSH; grp1:g1_gen; grp2:g2_segreg; Note:'Push Word, Doubleword or Quadword Onto the Stack'),
{A9}(Base:478; Count:1; Flags:[]; Mnem:oc_POP; grp1:g1_gen; grp2:g2_segreg; Note:'Pop a Value from the Stack'),
{AA}(Base:479; Count:1; Flags:[en_mode,en_particular]; Mnem:oc_RSM; mode:ee_s; grp1:g1_system; grp2:g2_branch; Note:'Resume from System Management Mode'),
{AB}(Base:480; Count:1; Flags:[en_lock,en_r]; Mnem:oc_BTS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test and Set'),
{AC}(Base:481; Count:1; Flags:[en_direction,en_r]; Mnem:oc_SHRD; FData:[od_ModR,od_ModM,od_I]; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Double Precision Shift Right'),
{AD}(Base:482; Count:1; Flags:[en_direction,en_r]; Mnem:oc_SHRD; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_shftrot; DefF:fs_OSZPC; ModifF:fs_OSZAPC; UndefF:fs_OAC; Note:'Double Precision Shift Right'),
{AE}(Base:483; Count:1; Flags:[]; Mnem:oc_FXSAVE; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_sm; Note:'Save x87 FPU, MMX, XMM, and MXCSR State'),
    (Base:484; Count:1; Flags:[en_mode]; Mnem:oc_FXSAVE; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$0; grp1:g1_sm; Note:'Save x87 FPU, MMX, XMM, and MXCSR State'),
    (Base:485; Count:1; Flags:[]; Mnem:oc_FXRSTOR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_sm; Note:'Restore x87 FPU, MMX, XMM, and MXCSR State'),
    (Base:486; Count:1; Flags:[en_mode]; Mnem:oc_FXRSTOR; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_sm; Note:'Restore x87 FPU, MMX, XMM, and MXCSR State'),
    (Base:487; Count:1; Flags:[]; Mnem:oc_LDMXCSR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$2; grp1:g1_mxcsrsm; iExt:ie_sse1; Note:'Load MXCSR Register'),
    (Base:488; Count:1; Flags:[]; Mnem:oc_STMXCSR; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$3; grp1:g1_mxcsrsm; iExt:ie_sse1; Note:'Store MXCSR Register State'),
    (Base:489; Count:1; Flags:[]; Mnem:oc_XSAVE; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_system; Note:'Save Processor Extended States<det>Save processor extended states to memory. The states are specified by EDX:EAX</det>'),
    (Base:490; Count:1; Flags:[en_mode]; Mnem:oc_XSAVE; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_system; Note:'Save Processor Extended States<det>Save processor extended states to memory. The states are specified by EDX:EAX</det>'),
    (Base:491; Count:1; Flags:[en_mod]; Mnem:oc_LFENCE; mod_:em_nomem; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_order; iExt:ie_sse2; Note:'Load Fence'),
    (Base:492; Count:1; Flags:[en_mod]; Mnem:oc_XRSTOR; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_system; Note:'Restore Processor Extended States<det>Restore processor extended states from memory. The states are specified by EDX:EAX</det>'),
    (Base:493; Count:1; Flags:[en_mod,en_mode]; Mnem:oc_XRSTOR; mod_:em_mem; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_system; Note:'Restore Processor Extended States<det>Restore processor extended states from memory. The states are specified by EDX:EAX</det>'),
    (Base:494; Count:1; Flags:[]; Mnem:oc_MFENCE; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_order; iExt:ie_sse2; Note:'Memory Fence'),
    (Base:495; Count:1; Flags:[en_mod]; Mnem:oc_SFENCE; mod_:em_nomem; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_order; iExt:ie_sse1; Note:'Store Fence'),
    (Base:496; Count:1; Flags:[en_mod]; Mnem:oc_CLFLUSH; mod_:em_mem; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_cachect; iExt:ie_sse2; Note:'Flush Cache Line'),
{AF}(Base:497; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_IMUL; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OC; ModifF:fs_OSZAPC; UndefF:fs_SZAP; Note:'Signed Multiply'),
{B0}(Base:498; Count:1; Flags:[en_direction,en_doc_ref,en_lock,en_op_size,en_r]; Mnem:oc_CMPXCHG; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare and Exchange'),
{B1}(Base:499; Count:1; Flags:[en_direction,en_doc_ref,en_lock,en_op_size,en_r]; Mnem:oc_CMPXCHG; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Compare and Exchange'),
{B2}(Base:500; Count:1; Flags:[en_doc64_ref,en_r]; Mnem:oc_LSS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_segreg; Note:'Load Far Pointer'),
{B3}(Base:501; Count:1; Flags:[en_lock,en_r]; Mnem:oc_BTR; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test and Reset'),
{B4}(Base:502; Count:1; Flags:[en_doc64_ref,en_r]; Mnem:oc_LFS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_segreg; Note:'Load Far Pointer'),
{B5}(Base:503; Count:1; Flags:[en_doc64_ref,en_r]; Mnem:oc_LGS; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_segreg; Note:'Load Far Pointer'),
{B6}(Base:504; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOVZX; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_conver; Note:'Move with Zero-Extend'),
{B7}(Base:505; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOVZX; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_conver; Note:'Move with Zero-Extend'),
{B8}(Base:506; Count:1; Flags:[]; Mnem:oc_JMPE; grp1:g1_system; grp2:g2_branch; Note:'Jump to IA-64 Instruction Set'),
    (Base:507; Count:1; Flags:[en_r]; Mnem:oc_POPCNT; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_gen; grp2:g2_bit; ModifF:fs_OSZAPC; Vals0F:fs_OSAPC; Note:'Bit Population Count<det>Count the 1s in op2</det>'),
{B9}(Base:508; Count:1; Flags:[en_attr,en_doc,en_doc_ref,en_r]; Mnem:oc_UD; Attr:ea_invd; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_control; Note:'Undefined Instruction'),
{BA}(Base:509; Count:1; Flags:[]; Mnem:oc_BT; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$4; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test'),
    (Base:510; Count:1; Flags:[en_lock]; Mnem:oc_BTS; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$5; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test and Set'),
    (Base:511; Count:1; Flags:[en_lock]; Mnem:oc_BTR; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$6; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test and Reset'),
    (Base:512; Count:1; Flags:[en_lock]; Mnem:oc_BTC; FData:[od_ModM,od_I]; Dep:[ed_OpcdExt]; OpcdExt:$7; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test and Complement'),
{BB}(Base:513; Count:1; Flags:[en_lock,en_r]; Mnem:oc_BTC; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_bit; DefF:fs_C; ModifF:fs_OSZAPC; UndefF:fs_OSZAP; Note:'Bit Test and Complement'),
{BC}(Base:514; Count:1; Flags:[en_doc64_ref,en_r]; Mnem:oc_BSF; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_bit; DefF:fs_Z; ModifF:fs_OSZAPC; UndefF:fs_OSAPC; Note:'Bit Scan Forward'),
{BD}(Base:515; Count:1; Flags:[en_doc64_ref,en_r]; Mnem:oc_BSR; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_bit; DefF:fs_Z; ModifF:fs_OSZAPC; UndefF:fs_OSAPC; Note:'Bit Scan Reverse'),
{BE}(Base:516; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOVSX; FVals:[ba_direction]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_conver; Note:'Move with Sign-Extension'),
{BF}(Base:517; Count:1; Flags:[en_direction,en_op_size,en_r]; Mnem:oc_MOVSX; FVals:[ba_direction,ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_conver; Note:'Move with Sign-Extension'),
{C0}(Base:518; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_XADD; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Exchange and Add'),
{C1}(Base:519; Count:1; Flags:[en_direction,en_lock,en_op_size,en_r]; Mnem:oc_XADD; FVals:[ba_op_size]; FData:[od_ModR,od_ModM]; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Exchange and Add'),
{C2}(Base:520; Count:1; Flags:[en_r]; Mnem:oc_CMPPS; FData:[od_ModR,od_ModM,od_I]; grp1:g1_simdfp; grp2:g2_compar; iExt:ie_sse1; Note:'Compare Packed Single-FP Values'),
    (Base:521; Count:1; Flags:[en_r]; Mnem:oc_CMPSS; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdfp; grp2:g2_compar; iExt:ie_sse1; Note:'Compare Scalar Single-FP Values'),
    (Base:522; Count:1; Flags:[en_r]; Mnem:oc_CMPPD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Packed Double-FP Values'),
    (Base:523; Count:1; Flags:[en_r]; Mnem:oc_CMPSD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_compar; iExt:ie_sse2; Note:'Compare Scalar Double-FP Values'),
{C3}(Base:524; Count:1; Flags:[en_r]; Mnem:oc_MOVNTI; FData:[od_ModR,od_ModM]; grp1:g1_cachect; iExt:ie_sse2; Note:'Store Doubleword Using Non-Temporal Hint'),
{C4}(Base:525; Count:2; Flags:[en_r]; Mnem:oc_PINSRW; FData:[od_ModR,od_ModM,od_I]; grp1:g1_simdint; iExt:ie_sse1; Note:'Insert Word'),
    (Base:527; Count:2; Flags:[en_r]; Mnem:oc_PINSRW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Insert Word'),
{C5}(Base:529; Count:1; Flags:[en_r]; Mnem:oc_PEXTRW; FData:[od_ModR,od_ModM,od_I]; grp1:g1_simdint; iExt:ie_sse1; Note:'Extract Word'),
    (Base:530; Count:1; Flags:[en_r]; Mnem:oc_PEXTRW; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Extract Word'),
{C6}(Base:531; Count:1; Flags:[en_r]; Mnem:oc_SHUFPS; FData:[od_ModR,od_ModM,od_I]; grp1:g1_simdfp; grp2:g2_shunpck; iExt:ie_sse1; Note:'Shuffle Packed Single-FP Values'),
    (Base:532; Count:1; Flags:[en_r]; Mnem:oc_SHUFPD; FData:[od_ModR,od_ModM,od_I]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_shunpck; iExt:ie_sse2; Note:'Shuffle Packed Double-FP Values'),
{C7}(Base:533; Count:1; Flags:[en_doc_ref,en_lock]; Mnem:oc_CMPXCHG8B; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_Z; ModifF:fs_Z; Note:'Compare and Exchange Bytes'),
    (Base:534; Count:2; Flags:[en_doc64_ref,en_lock,en_mode]; mode:ee_e; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$1; grp1:g1_gen; grp2:g2_arith; grp3:g3_binary; DefF:fs_Z; ModifF:fs_Z; Note:'Compare and Exchange Bytes'),
    (Base:536; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMPTRLD; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$6; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Load Pointer to Virtual-Machine Control Structure<det>Loads the current VMCS pointer from memory</det>'),
    (Base:537; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMCLEAR; mode:ee_p; FData:[od_ModM]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$66; OpcdExt:$6; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Clear Virtual-Machine Control Structure<det>Copy VMCS data to VMCS region in memory</det>'),
    (Base:538; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMXON; mode:ee_p; FData:[od_ModM]; Dep:[ed_Pref,ed_OpcdExt]; Pref:$F3; OpcdExt:$6; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Enter VMX Operation<det>Enter VMX root operation</det>'),
    (Base:539; Count:1; Flags:[en_doc_ref,en_mode,en_ring]; Mnem:oc_VMPTRST; mode:ee_p; FData:[od_ModM]; Dep:[ed_OpcdExt]; OpcdExt:$7; iExt:ie_vmx; DefF:fs_OSZAPC; ModifF:fs_OSZAPC; Note:'Store Pointer to Virtual-Machine Control Structure<det>Stores the current VMCS pointer into memory</det>'),
{C8}(Base:540; Count:1; Flags:[en_doc_ref]; Mnem:oc_BSWAP; FData:[od_Z]; grp1:g1_gen; grp2:g2_datamov; Note:'Byte Swap'),
{D0}(Base:541; Count:1; Flags:[en_r]; Mnem:oc_ADDSUBPD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse3; Note:'Packed Double-FP Add/Subtract'),
    (Base:542; Count:1; Flags:[en_r]; Mnem:oc_ADDSUBPS; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_simdfp; grp2:g2_arith; iExt:ie_sse3; Note:'Packed Single-FP Add/Subtract'),
{D1}(Base:543; Count:1; Flags:[en_r]; Mnem:oc_PSRLW; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Logical'),
    (Base:544; Count:1; Flags:[en_r]; Mnem:oc_PSRLW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Logical'),
{D2}(Base:545; Count:1; Flags:[en_r]; Mnem:oc_PSRLD; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Logical'),
    (Base:546; Count:1; Flags:[en_r]; Mnem:oc_PSRLD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Logical'),
{D3}(Base:547; Count:1; Flags:[en_r]; Mnem:oc_PSRLQ; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Logical'),
    (Base:548; Count:1; Flags:[en_r]; Mnem:oc_PSRLQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Logical'),
{D4}(Base:549; Count:1; Flags:[en_r]; Mnem:oc_PADDQ; FData:[od_ModR,od_ModM]; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Quadword Integers'),
    (Base:550; Count:1; Flags:[en_r]; Mnem:oc_PADDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Quadword Integers'),
{D5}(Base:551; Count:1; Flags:[en_r]; Mnem:oc_PMULLW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Multiply Packed Signed Integers and Store Low Result'),
    (Base:552; Count:1; Flags:[en_r]; Mnem:oc_PMULLW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply Packed Signed Integers and Store Low Result'),
{D6}(Base:553; Count:1; Flags:[en_r]; Mnem:oc_MOVQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Quadword'),
    (Base:554; Count:1; Flags:[en_r]; Mnem:oc_MOVQ2DQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Quadword from MMX Technology to XMM Register'),
    (Base:555; Count:1; Flags:[en_r]; Mnem:oc_MOVDQ2Q; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_simdint; grp2:g2_datamov; iExt:ie_sse2; Note:'Move Quadword from XMM to MMX Technology Register'),
{D7}(Base:556; Count:1; Flags:[en_r]; Mnem:oc_PMOVMSKB; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Move Byte Mask'),
    (Base:557; Count:1; Flags:[en_r]; Mnem:oc_PMOVMSKB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Move Byte Mask'),
{D8}(Base:558; Count:1; Flags:[en_r]; Mnem:oc_PSUBUSB; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Unsigned Integers with Unsigned Saturation'),
    (Base:559; Count:1; Flags:[en_r]; Mnem:oc_PSUBUSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Unsigned Integers with Unsigned Saturation'),
{D9}(Base:560; Count:1; Flags:[en_r]; Mnem:oc_PSUBUSW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Unsigned Integers with Unsigned Saturation'),
    (Base:561; Count:1; Flags:[en_r]; Mnem:oc_PSUBUSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Unsigned Integers with Unsigned Saturation'),
{DA}(Base:562; Count:1; Flags:[en_r]; Mnem:oc_PMINUB; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Minimum of Packed Unsigned Byte Integers'),
    (Base:563; Count:1; Flags:[en_r]; Mnem:oc_PMINUB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Minimum of Packed Unsigned Byte Integers'),
{DB}(Base:564; Count:1; Flags:[en_r]; Mnem:oc_PAND; FData:[od_ModR,od_ModM]; grp1:g1_logical; iExt:ie_mmx; Note:'Logical AND'),
    (Base:565; Count:1; Flags:[en_r]; Mnem:oc_PAND; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_logical; iExt:ie_sse2; Note:'Logical AND'),
{DC}(Base:566; Count:1; Flags:[en_r]; Mnem:oc_PADDUSB; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Unsigned Integers with Unsigned Saturation'),
    (Base:567; Count:1; Flags:[en_r]; Mnem:oc_PADDUSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Unsigned Integers with Unsigned Saturation'),
{DD}(Base:568; Count:1; Flags:[en_r]; Mnem:oc_PADDUSW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Unsigned Integers with Unsigned Saturation'),
    (Base:569; Count:1; Flags:[en_r]; Mnem:oc_PADDUSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Unsigned Integers with Unsigned Saturation'),
{DE}(Base:570; Count:1; Flags:[en_r]; Mnem:oc_PMAXUB; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Maximum of Packed Unsigned Byte Integers'),
    (Base:571; Count:1; Flags:[en_r]; Mnem:oc_PMAXUB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Maximum of Packed Unsigned Byte Integers'),
{DF}(Base:572; Count:1; Flags:[en_r]; Mnem:oc_PANDN; FData:[od_ModR,od_ModM]; grp1:g1_logical; iExt:ie_mmx; Note:'Logical AND NOT'),
    (Base:573; Count:1; Flags:[en_r]; Mnem:oc_PANDN; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_logical; iExt:ie_sse2; Note:'Logical AND NOT'),
{E0}(Base:574; Count:1; Flags:[en_r]; Mnem:oc_PAVGB; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Average Packed Integers'),
    (Base:575; Count:1; Flags:[en_r]; Mnem:oc_PAVGB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Average Packed Integers'),
{E1}(Base:576; Count:1; Flags:[en_r]; Mnem:oc_PSRAW; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Arithmetic'),
    (Base:577; Count:1; Flags:[en_r]; Mnem:oc_PSRAW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Arithmetic'),
{E2}(Base:578; Count:1; Flags:[en_r]; Mnem:oc_PSRAD; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Right Arithmetic'),
    (Base:579; Count:1; Flags:[en_r]; Mnem:oc_PSRAD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Right Arithmetic'),
{E3}(Base:580; Count:1; Flags:[en_r]; Mnem:oc_PAVGW; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Average Packed Integers'),
    (Base:581; Count:1; Flags:[en_r]; Mnem:oc_PAVGW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Average Packed Integers'),
{E4}(Base:582; Count:1; Flags:[en_r]; Mnem:oc_PMULHUW; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Multiply Packed Unsigned Integers and Store High Result'),
    (Base:583; Count:1; Flags:[en_r]; Mnem:oc_PMULHUW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Multiply Packed Unsigned Integers and Store High Result'),
{E5}(Base:584; Count:1; Flags:[en_r]; Mnem:oc_PMULHW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Multiply Packed Signed Integers and Store High Result'),
    (Base:585; Count:1; Flags:[en_r]; Mnem:oc_PMULHW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply Packed Signed Integers and Store High Result'),
{E6}(Base:586; Count:1; Flags:[en_r]; Mnem:oc_CVTPD2DQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Packed Double-FP Values to DW Integers'),
    (Base:587; Count:1; Flags:[en_r]; Mnem:oc_CVTTPD2DQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert with Trunc. Packed Double-FP Values to DW Integers'),
    (Base:588; Count:1; Flags:[en_r]; Mnem:oc_CVTDQ2PD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F3; grp1:g1_pcksclr; grp2:g2_conver; iExt:ie_sse2; Note:'Convert Packed DW Integers to Double-FP Values'),
{E7}(Base:589; Count:1; Flags:[en_r]; Mnem:oc_MOVNTQ; FData:[od_ModR,od_ModM]; grp1:g1_cachect; iExt:ie_sse1; Note:'Store of Quadword Using Non-Temporal Hint'),
    (Base:590; Count:1; Flags:[en_r]; Mnem:oc_MOVNTDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_cachect; iExt:ie_sse2; Note:'Store Double Quadword Using Non-Temporal Hint'),
{E8}(Base:591; Count:1; Flags:[en_r]; Mnem:oc_PSUBSB; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Signed Integers with Signed Saturation'),
    (Base:592; Count:1; Flags:[en_r]; Mnem:oc_PSUBSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Signed Integers with Signed Saturation'),
{E9}(Base:593; Count:1; Flags:[en_r]; Mnem:oc_PSUBSW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Signed Integers with Signed Saturation'),
    (Base:594; Count:1; Flags:[en_r]; Mnem:oc_PSUBSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Signed Integers with Signed Saturation'),
{EA}(Base:595; Count:1; Flags:[en_r]; Mnem:oc_PMINSW; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Minimum of Packed Signed Word Integers'),
    (Base:596; Count:1; Flags:[en_r]; Mnem:oc_PMINSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Minimum of Packed Signed Word Integers'),
{EB}(Base:597; Count:1; Flags:[en_r]; Mnem:oc_POR; FData:[od_ModR,od_ModM]; grp1:g1_logical; iExt:ie_mmx; Note:'Bitwise Logical OR'),
    (Base:598; Count:1; Flags:[en_r]; Mnem:oc_POR; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_logical; iExt:ie_sse2; Note:'Bitwise Logical OR'),
{EC}(Base:599; Count:1; Flags:[en_r]; Mnem:oc_PADDSB; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Signed Integers with Signed Saturation'),
    (Base:600; Count:1; Flags:[en_r]; Mnem:oc_PADDSB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Signed Integers with Signed Saturation'),
{ED}(Base:601; Count:1; Flags:[en_r]; Mnem:oc_PADDSW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Signed Integers with Signed Saturation'),
    (Base:602; Count:1; Flags:[en_r]; Mnem:oc_PADDSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Signed Integers with Signed Saturation'),
{EE}(Base:603; Count:1; Flags:[en_r]; Mnem:oc_PMAXSW; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Maximum of Packed Signed Word Integers'),
    (Base:604; Count:1; Flags:[en_r]; Mnem:oc_PMAXSW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Maximum of Packed Signed Word Integers'),
{EF}(Base:605; Count:1; Flags:[en_r]; Mnem:oc_PXOR; FData:[od_ModR,od_ModM]; grp1:g1_logical; iExt:ie_mmx; Note:'Logical Exclusive OR'),
    (Base:606; Count:1; Flags:[en_r]; Mnem:oc_PXOR; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_logical; iExt:ie_sse2; Note:'Logical Exclusive OR'),
{F0}(Base:607; Count:1; Flags:[en_r]; Mnem:oc_LDDQU; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$F2; grp1:g1_cachect; iExt:ie_sse3; Note:'Load Unaligned Integer 128 Bits'),
{F1}(Base:608; Count:1; Flags:[en_r]; Mnem:oc_PSLLW; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Left Logical'),
    (Base:609; Count:1; Flags:[en_r]; Mnem:oc_PSLLW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Left Logical'),
{F2}(Base:610; Count:1; Flags:[en_r]; Mnem:oc_PSLLD; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Left Logical'),
    (Base:611; Count:1; Flags:[en_r]; Mnem:oc_PSLLD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Left Logical'),
{F3}(Base:612; Count:1; Flags:[en_r]; Mnem:oc_PSLLQ; FData:[od_ModR,od_ModM]; grp1:g1_shift; iExt:ie_mmx; Note:'Shift Packed Data Left Logical'),
    (Base:613; Count:1; Flags:[en_r]; Mnem:oc_PSLLQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_shift; iExt:ie_sse2; Note:'Shift Packed Data Left Logical'),
{F4}(Base:614; Count:1; Flags:[en_r]; Mnem:oc_PMULUDQ; FData:[od_ModR,od_ModM]; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply Packed Unsigned DW Integers'),
    (Base:615; Count:1; Flags:[en_r]; Mnem:oc_PMULUDQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply Packed Unsigned DW Integers'),
{F5}(Base:616; Count:1; Flags:[en_r]; Mnem:oc_PMADDWD; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Multiply and Add Packed Integers'),
    (Base:617; Count:1; Flags:[en_r]; Mnem:oc_PMADDWD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Multiply and Add Packed Integers'),
{F6}(Base:618; Count:1; Flags:[en_r]; Mnem:oc_PSADBW; FData:[od_ModR,od_ModM]; grp1:g1_simdint; iExt:ie_sse1; Note:'Compute Sum of Absolute Differences'),
    (Base:619; Count:1; Flags:[en_r]; Mnem:oc_PSADBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; iExt:ie_sse1; Note:'Compute Sum of Absolute Differences'),
{F7}(Base:620; Count:1; Flags:[en_doc_ref,en_r]; Mnem:oc_MASKMOVQ; FData:[od_ModR,od_ModM]; grp1:g1_cachect; iExt:ie_sse1; Note:'Store Selected Bytes of Quadword'),
    (Base:621; Count:1; Flags:[en_r]; Mnem:oc_MASKMOVDQU; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_cachect; iExt:ie_sse2; Note:'Store Selected Bytes of Double Quadword'),
{F8}(Base:622; Count:1; Flags:[en_r]; Mnem:oc_PSUBB; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Integers'),
    (Base:623; Count:1; Flags:[en_r]; Mnem:oc_PSUBB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Integers'),
{F9}(Base:624; Count:1; Flags:[en_r]; Mnem:oc_PSUBW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Integers'),
    (Base:625; Count:1; Flags:[en_r]; Mnem:oc_PSUBW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Integers'),
{FA}(Base:626; Count:1; Flags:[en_r]; Mnem:oc_PSUBD; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Subtract Packed Integers'),
    (Base:627; Count:1; Flags:[en_r]; Mnem:oc_PSUBD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Integers'),
{FB}(Base:628; Count:1; Flags:[en_r]; Mnem:oc_PSUBQ; FData:[od_ModR,od_ModM]; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Quadword Integers'),
    (Base:629; Count:1; Flags:[en_r]; Mnem:oc_PSUBQ; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Subtract Packed Quadword Integers'),
{FC}(Base:630; Count:1; Flags:[en_r]; Mnem:oc_PADDB; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Integers'),
    (Base:631; Count:1; Flags:[en_r]; Mnem:oc_PADDB; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Integers'),
{FD}(Base:632; Count:1; Flags:[en_r]; Mnem:oc_PADDW; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Integers'),
    (Base:633; Count:1; Flags:[en_r]; Mnem:oc_PADDW; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Integers'),
{FE}(Base:634; Count:1; Flags:[en_r]; Mnem:oc_PADDD; FData:[od_ModR,od_ModM]; grp1:g1_arith; iExt:ie_mmx; Note:'Add Packed Integers'),
    (Base:635; Count:1; Flags:[en_r]; Mnem:oc_PADDD; FData:[od_ModR,od_ModM]; Dep:[ed_Pref]; Pref:$66; grp1:g1_simdint; grp2:g2_arith; iExt:ie_sse2; Note:'Add Packed Integers')
  );

const
  TwoByteSyntaxes: array[0..635]of TOpcodeSyntax = (
   {00_0}
    (Base:0; Count:2; Mnem:oc_SLDT),
    (Base:2; Count:2; Mnem:oc_SLDT),
   {00_1}
    (Base:4; Count:2; Mnem:oc_STR),
    (Base:6; Count:2; Mnem:oc_STR),
   {00_2}
    (Base:8; Count:2; Mnem:oc_LLDT),
   {00_3}
    (Base:10; Count:2; Mnem:oc_LTR),
   {00_4}
    (Base:12; Count:1; Mnem:oc_VERR),
   {00_5}
    (Base:12; Count:1; Mnem:oc_VERW),
   {00_6}
    (Mnem:oc_JMPE),
   {01_0}
    (Base:13; Count:2; Mnem:oc_SGDT),
   {01_1}
    (Mnem:oc_VMCALL),
   {01_2}
    (Mnem:oc_VMLAUNCH),
   {01_3}
    (Mnem:oc_VMRESUME),
   {01_4}
    (Mnem:oc_VMXOFF),
   {01_5}
    (Base:15; Count:2; Mnem:oc_SIDT),
   {01_6}
    (Base:17; Count:3; Mnem:oc_MONITOR),
   {01_7}
    (Base:20; Count:2; Mnem:oc_MWAIT),
   {01_8}
    (Base:22; Count:2; Mnem:oc_LGDT),
   {01_9}
    (Base:24; Count:4; Mnem:oc_XGETBV),
   {01_10}
    (Base:28; Count:4; Mnem:oc_XSETBV),
   {01_11}
    (Base:32; Count:2; Mnem:oc_LIDT),
   {01_12}
    (Base:34; Count:2; Mnem:oc_SMSW),
    (Base:36; Count:2; Mnem:oc_SMSW),
   {01_13}
    (Base:38; Count:2; Mnem:oc_LMSW),
   {01_14}
    (Base:40; Count:1; Mnem:oc_INVLPG),
   {01_15}
    (Base:41; Count:2; Mnem:oc_SWAPGS),
   {01_16}
    (Base:43; Count:5; Mnem:oc_RDTSCP),
   {02_0}
    (Base:48; Count:2; Mnem:oc_LAR),
    (Base:50; Count:2; Mnem:oc_LAR),
   {03_0}
    (Base:48; Count:2; Mnem:oc_LSL),
    (Base:50; Count:2; Mnem:oc_LSL),
   {05_0}
    (Base:52; Count:17; Mnem:oc_LOADALL),
   {05_1}
    (Base:69; Count:6; Mnem:oc_SYSCALL),
   {06_0}
    (Base:75; Count:1; Mnem:oc_CLTS),
   {07_0}
    (Base:76; Count:21; Mnem:oc_LOADALL),
   {07_1}
    (Base:97; Count:5; Mnem:oc_SYSRET),
   {08_0}
    (Mnem:oc_INVD),
   {09_0}
    (Mnem:oc_WBINVD),
   {0B_0}
    (Mnem:oc_UD2),
   {0D_0}
    (Base:102; Count:1),
   {0D_1}
    (Base:103; Count:1),
   {10_0}
    (Base:104; Count:2; Mnem:oc_MOVUPS),
   {10_1}
    (Base:106; Count:2; Mnem:oc_MOVSS),
   {10_2}
    (Base:108; Count:2; Mnem:oc_MOVUPD),
   {10_3}
    (Base:110; Count:2; Mnem:oc_MOVSD),
   {11_0}
    (Base:112; Count:2; Mnem:oc_MOVUPS),
   {11_1}
    (Base:114; Count:2; Mnem:oc_MOVSS),
   {11_2}
    (Base:116; Count:2; Mnem:oc_MOVUPD),
   {11_3}
    (Base:118; Count:2; Mnem:oc_MOVSD),
   {12_0}
    (Base:120; Count:2; Mnem:oc_MOVHLPS),
   {12_1}
    (Base:122; Count:2; Mnem:oc_MOVLPS),
   {12_2}
    (Base:122; Count:2; Mnem:oc_MOVLPD),
   {12_3}
    (Base:124; Count:2; Mnem:oc_MOVDDUP),
   {12_4}
    (Base:124; Count:2; Mnem:oc_MOVSLDUP),
   {13_0}
    (Base:126; Count:2; Mnem:oc_MOVLPS),
   {13_1}
    (Base:126; Count:2; Mnem:oc_MOVLPD),
   {14_0}
    (Base:128; Count:2; Mnem:oc_UNPCKLPS),
   {14_1}
    (Base:130; Count:2; Mnem:oc_UNPCKLPD),
   {15_0}
    (Base:128; Count:2; Mnem:oc_UNPCKHPS),
   {15_1}
    (Base:130; Count:2; Mnem:oc_UNPCKHPD),
   {16_0}
    (Base:120; Count:2; Mnem:oc_MOVLHPS),
   {16_1}
    (Base:122; Count:2; Mnem:oc_MOVHPS),
   {16_2}
    (Base:122; Count:2; Mnem:oc_MOVHPD),
   {16_3}
    (Base:124; Count:2; Mnem:oc_MOVSHDUP),
   {17_0}
    (Base:126; Count:2; Mnem:oc_MOVHPS),
   {17_1}
    (Base:126; Count:2; Mnem:oc_MOVHPD),
   {18_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {18_1}
    (Base:102; Count:1; Mnem:oc_PREFETCHNTA),
   {18_2}
    (Base:102; Count:1; Mnem:oc_PREFETCHT0),
   {18_3}
    (Base:102; Count:1; Mnem:oc_PREFETCHT1),
   {18_4}
    (Base:102; Count:1; Mnem:oc_PREFETCHT2),
   {18_5}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {18_6}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {18_7}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {18_8}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {19_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1A_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1B_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1C_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1D_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1E_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1F_0}
    (Base:132; Count:2; Mnem:oc_HINT_NOP),
   {1F_1}
    (Base:134; Count:1; Mnem:oc_NOP),
   {1F_2}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {1F_3}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {1F_4}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {1F_5}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {1F_6}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {1F_7}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {1F_8}
    (Base:134; Count:1; Mnem:oc_HINT_NOP),
   {20_0}
    (Base:135; Count:2; Mnem:oc_MOV),
   {20_1}
    (Base:137; Count:2; Mnem:oc_MOV),
   {20_2}
    (Base:139; Count:2; Mnem:oc_MOV),
   {20_3}
    (Base:141; Count:2; Mnem:oc_MOV),
   {21_0}
    (Base:143; Count:2; Mnem:oc_MOV),
   {21_1}
    (Base:145; Count:2; Mnem:oc_MOV),
   {21_2}
    (Base:147; Count:2; Mnem:oc_MOV),
   {21_3}
    (Base:149; Count:2; Mnem:oc_MOV),
   {22_0}
    (Base:151; Count:2; Mnem:oc_MOV),
   {22_1}
    (Base:153; Count:2; Mnem:oc_MOV),
   {22_2}
    (Base:155; Count:2; Mnem:oc_MOV),
   {22_3}
    (Base:157; Count:2; Mnem:oc_MOV),
   {23_0}
    (Base:159; Count:2; Mnem:oc_MOV),
   {23_1}
    (Base:161; Count:2; Mnem:oc_MOV),
   {23_2}
    (Base:163; Count:2; Mnem:oc_MOV),
   {23_3}
    (Base:161; Count:2; Mnem:oc_MOV),
   {24_0}
    (Base:165; Count:2; Mnem:oc_MOV),
   {24_1}
    (Base:167; Count:2; Mnem:oc_MOV),
   {26_0}
    (Base:169; Count:2; Mnem:oc_MOV),
   {26_1}
    (Base:171; Count:2; Mnem:oc_MOV),
   {28_0}
    (Base:104; Count:2; Mnem:oc_MOVAPS),
   {28_1}
    (Base:108; Count:2; Mnem:oc_MOVAPD),
   {29_0}
    (Base:112; Count:2; Mnem:oc_MOVAPS),
   {29_1}
    (Base:116; Count:2; Mnem:oc_MOVAPD),
   {2A_0}
    (Base:173; Count:2; Mnem:oc_CVTPI2PS),
   {2A_1}
    (Base:175; Count:2; Mnem:oc_CVTSI2SS),
   {2A_2}
    (Base:177; Count:2; Mnem:oc_CVTPI2PD),
   {2A_3}
    (Base:179; Count:2; Mnem:oc_CVTSI2SD),
   {2B_0}
    (Base:181; Count:2; Mnem:oc_MOVNTPS),
   {2B_1}
    (Base:183; Count:2; Mnem:oc_MOVNTPD),
   {2C_0}
    (Base:185; Count:2; Mnem:oc_CVTTPS2PI),
   {2C_1}
    (Base:187; Count:2; Mnem:oc_CVTTSS2SI),
   {2C_2}
    (Base:189; Count:2; Mnem:oc_CVTTPD2PI),
   {2C_3}
    (Base:191; Count:2; Mnem:oc_CVTTSD2SI),
   {2D_0}
    (Base:185; Count:2; Mnem:oc_CVTPS2PI),
   {2D_1}
    (Base:187; Count:2; Mnem:oc_CVTSS2SI),
   {2D_2}
    (Base:189; Count:2; Mnem:oc_CVTPD2PI),
   {2D_3}
    (Base:191; Count:2; Mnem:oc_CVTSD2SI),
   {2E_0}
    (Base:193; Count:2; Mnem:oc_UCOMISS),
   {2E_1}
    (Base:195; Count:2; Mnem:oc_UCOMISD),
   {2F_0}
    (Base:193; Count:2; Mnem:oc_COMISS),
   {2F_1}
    (Base:195; Count:2; Mnem:oc_COMISD),
   {30_0}
    (Base:197; Count:4; Mnem:oc_WRMSR),
   {31_0}
    (Base:201; Count:3; Mnem:oc_RDTSC),
   {32_0}
    (Base:204; Count:4; Mnem:oc_RDMSR),
   {33_0}
    (Base:208; Count:3; Mnem:oc_RDPMC),
   {34_0}
    (Base:211; Count:5; Mnem:oc_SYSENTER),
   {34_1}
    (Base:216; Count:5; Mnem:oc_SYSENTER),
   {35_0}
    (Base:221; Count:5; Mnem:oc_SYSEXIT),
   {37_0}
    (Base:226; Count:1; Mnem:oc_GETSEC),
   {38_0}
    (Base:227; Count:2; Mnem:oc_PSHUFB),
   {38_1}
    (Base:229; Count:2; Mnem:oc_PSHUFB),
   {38_2}
    (Base:227; Count:2; Mnem:oc_PHADDW),
   {38_3}
    (Base:229; Count:2; Mnem:oc_PHADDW),
   {38_4}
    (Base:227; Count:2; Mnem:oc_PHADDD),
   {38_5}
    (Base:229; Count:2; Mnem:oc_PHADDD),
   {38_6}
    (Base:227; Count:2; Mnem:oc_PHADDSW),
   {38_7}
    (Base:229; Count:2; Mnem:oc_PHADDSW),
   {38_8}
    (Base:227; Count:2; Mnem:oc_PMADDUBSW),
   {38_9}
    (Base:229; Count:2; Mnem:oc_PMADDUBSW),
   {38_10}
    (Base:227; Count:2; Mnem:oc_PHSUBW),
   {38_11}
    (Base:229; Count:2; Mnem:oc_PHSUBW),
   {38_12}
    (Base:227; Count:2; Mnem:oc_PHSUBD),
   {38_13}
    (Base:229; Count:2; Mnem:oc_PHSUBD),
   {38_14}
    (Base:227; Count:2; Mnem:oc_PHSUBSW),
   {38_15}
    (Base:229; Count:2; Mnem:oc_PHSUBSW),
   {38_16}
    (Base:227; Count:2; Mnem:oc_PSIGNB),
   {38_17}
    (Base:229; Count:2; Mnem:oc_PSIGNB),
   {38_18}
    (Base:227; Count:2; Mnem:oc_PSIGNW),
   {38_19}
    (Base:229; Count:2; Mnem:oc_PSIGNW),
   {38_20}
    (Base:227; Count:2; Mnem:oc_PSIGND),
   {38_21}
    (Base:229; Count:2; Mnem:oc_PSIGND),
   {38_22}
    (Base:227; Count:2; Mnem:oc_PMULHRSW),
   {38_23}
    (Base:229; Count:2; Mnem:oc_PMULHRSW),
   {38_24}
    (Base:231; Count:3; Mnem:oc_PBLENDVB),
   {38_25}
    (Base:234; Count:3; Mnem:oc_BLENDVPS),
   {38_26}
    (Base:237; Count:3; Mnem:oc_BLENDVPD),
   {38_27}
    (Base:240; Count:2; Mnem:oc_PTEST),
   {38_28}
    (Base:227; Count:2; Mnem:oc_PABSB),
   {38_29}
    (Base:229; Count:2; Mnem:oc_PABSB),
   {38_30}
    (Base:227; Count:2; Mnem:oc_PABSW),
   {38_31}
    (Base:229; Count:2; Mnem:oc_PABSW),
   {38_32}
    (Base:227; Count:2; Mnem:oc_PABSD),
   {38_33}
    (Base:229; Count:2; Mnem:oc_PABSD),
   {38_34}
    (Base:242; Count:2; Mnem:oc_PMOVSXBW),
    (Base:244; Count:2; Mnem:oc_PMOVSXBW),
   {38_35}
    (Base:246; Count:2; Mnem:oc_PMOVSXBD),
    (Base:244; Count:2; Mnem:oc_PMOVSXBD),
   {38_36}
    (Base:248; Count:2; Mnem:oc_PMOVSXBQ),
    (Base:244; Count:2; Mnem:oc_PMOVSXBQ),
   {38_37}
    (Base:242; Count:2; Mnem:oc_PMOVSXWD),
    (Base:244; Count:2; Mnem:oc_PMOVSXWD),
   {38_38}
    (Base:246; Count:2; Mnem:oc_PMOVSXWQ),
    (Base:244; Count:2; Mnem:oc_PMOVSXWQ),
   {38_39}
    (Base:242; Count:2; Mnem:oc_PMOVSXDQ),
    (Base:244; Count:2; Mnem:oc_PMOVSXDQ),
   {38_40}
    (Base:229; Count:2; Mnem:oc_PMULDQ),
   {38_41}
    (Base:229; Count:2; Mnem:oc_PCMPEQQ),
   {38_42}
    (Base:250; Count:2; Mnem:oc_MOVNTDQA),
   {38_43}
    (Base:229; Count:2; Mnem:oc_PACKUSDW),
   {38_44}
    (Base:242; Count:2; Mnem:oc_PMOVZXBW),
    (Base:244; Count:2; Mnem:oc_PMOVZXBW),
   {38_45}
    (Base:246; Count:2; Mnem:oc_PMOVZXBD),
    (Base:244; Count:2; Mnem:oc_PMOVZXBD),
   {38_46}
    (Base:248; Count:2; Mnem:oc_PMOVZXBQ),
    (Base:244; Count:2; Mnem:oc_PMOVZXBQ),
   {38_47}
    (Base:242; Count:2; Mnem:oc_PMOVZXWD),
    (Base:244; Count:2; Mnem:oc_PMOVZXWD),
   {38_48}
    (Base:246; Count:2; Mnem:oc_PMOVZXWQ),
    (Base:244; Count:2; Mnem:oc_PMOVZXWQ),
   {38_49}
    (Base:242; Count:2; Mnem:oc_PMOVZXDQ),
    (Base:244; Count:2; Mnem:oc_PMOVZXDQ),
   {38_50}
    (Base:229; Count:2; Mnem:oc_PCMPGTQ),
   {38_51}
    (Base:229; Count:2; Mnem:oc_PMINSB),
   {38_52}
    (Base:229; Count:2; Mnem:oc_PMINSD),
   {38_53}
    (Base:229; Count:2; Mnem:oc_PMINUW),
   {38_54}
    (Base:229; Count:2; Mnem:oc_PMINUD),
   {38_55}
    (Base:229; Count:2; Mnem:oc_PMAXSB),
   {38_56}
    (Base:229; Count:2; Mnem:oc_PMAXSD),
   {38_57}
    (Base:229; Count:2; Mnem:oc_PMAXUW),
   {38_58}
    (Base:229; Count:2; Mnem:oc_PMAXUD),
   {38_59}
    (Base:229; Count:2; Mnem:oc_PMULLD),
   {38_60}
    (Base:229; Count:2; Mnem:oc_PHMINPOSUW),
   {38_61}
    (Base:252; Count:2; Mnem:oc_INVEPT),
   {38_62}
    (Base:254; Count:2; Mnem:oc_INVEPT),
   {38_63}
    (Base:252; Count:2; Mnem:oc_INVVPID),
   {38_64}
    (Base:254; Count:2; Mnem:oc_INVVPID),
   {38_65}
    (Base:256; Count:2; Mnem:oc_MOVBE),
   {38_66}
    (Base:258; Count:2; Mnem:oc_CRC32),
   {38_67}
    (Base:260; Count:2; Mnem:oc_MOVBE),
   {38_68}
    (Base:262; Count:2; Mnem:oc_CRC32),
   {3A_0}
    (Base:264; Count:3; Mnem:oc_ROUNDPS),
   {3A_1}
    (Base:267; Count:3; Mnem:oc_ROUNDPD),
   {3A_2}
    (Base:270; Count:3; Mnem:oc_ROUNDSS),
   {3A_3}
    (Base:273; Count:3; Mnem:oc_ROUNDSD),
   {3A_4}
    (Base:276; Count:3; Mnem:oc_BLENDPS),
   {3A_5}
    (Base:279; Count:3; Mnem:oc_BLENDPD),
   {3A_6}
    (Base:282; Count:3; Mnem:oc_PBLENDW),
   {3A_7}
    (Base:227; Count:2; Mnem:oc_PALIGNR),
   {3A_8}
    (Base:229; Count:2; Mnem:oc_PALIGNR),
   {3A_9}
    (Base:285; Count:3; Mnem:oc_PEXTRB),
    (Base:288; Count:3; Mnem:oc_PEXTRB),
   {3A_10}
    (Base:291; Count:3; Mnem:oc_PEXTRW),
    (Base:288; Count:3; Mnem:oc_PEXTRW),
   {3A_11}
    (Base:294; Count:3; Mnem:oc_PEXTRD),
    (Base:297; Count:3; Mnem:oc_PEXTRQ),
   {3A_12}
    (Base:294; Count:3; Mnem:oc_EXTRACTPS),
   {3A_13}
    (Base:300; Count:3; Mnem:oc_PINSRB),
    (Base:303; Count:3; Mnem:oc_PINSRB),
   {3A_14}
    (Base:306; Count:3; Mnem:oc_INSERTPS),
    (Base:309; Count:3; Mnem:oc_INSERTPS),
   {3A_15}
    (Base:312; Count:3; Mnem:oc_PINSRD),
    (Base:315; Count:3; Mnem:oc_PINSRQ),
   {3A_16}
    (Base:318; Count:2; Mnem:oc_DPPS),
   {3A_17}
    (Base:130; Count:2; Mnem:oc_DPPD),
   {3A_18}
    (Base:282; Count:3; Mnem:oc_MPSADBW),
   {3A_19}
    (Base:320; Count:6; Mnem:oc_PCMPESTRM),
   {3A_20}
    (Base:326; Count:6; Mnem:oc_PCMPESTRI),
   {3A_21}
    (Base:332; Count:4; Mnem:oc_PCMPISTRM),
   {3A_22}
    (Base:336; Count:4; Mnem:oc_PCMPISTRI),
   {40_0}
    (Base:340; Count:2; Mnem:oc_CMOVO),
   {41_0}
    (Base:340; Count:2; Mnem:oc_CMOVNO),
   {42_0}
    (Base:340; Count:2; Mnem:oc_CMOVB),
    (Base:340; Count:2; Mnem:oc_CMOVNAE),
    (Base:340; Count:2; Mnem:oc_CMOVC),
   {43_0}
    (Base:340; Count:2; Mnem:oc_CMOVNB),
    (Base:340; Count:2; Mnem:oc_CMOVAE),
    (Base:340; Count:2; Mnem:oc_CMOVNC),
   {44_0}
    (Base:340; Count:2; Mnem:oc_CMOVZ),
    (Base:340; Count:2; Mnem:oc_CMOVE),
   {45_0}
    (Base:340; Count:2; Mnem:oc_CMOVNZ),
    (Base:340; Count:2; Mnem:oc_CMOVNE),
   {46_0}
    (Base:340; Count:2; Mnem:oc_CMOVBE),
    (Base:340; Count:2; Mnem:oc_CMOVNA),
   {47_0}
    (Base:340; Count:2; Mnem:oc_CMOVNBE),
    (Base:340; Count:2; Mnem:oc_CMOVA),
   {48_0}
    (Base:340; Count:2; Mnem:oc_CMOVS),
   {49_0}
    (Base:340; Count:2; Mnem:oc_CMOVNS),
   {4A_0}
    (Base:340; Count:2; Mnem:oc_CMOVP),
    (Base:340; Count:2; Mnem:oc_CMOVPE),
   {4B_0}
    (Base:340; Count:2; Mnem:oc_CMOVNP),
    (Base:340; Count:2; Mnem:oc_CMOVPO),
   {4C_0}
    (Base:340; Count:2; Mnem:oc_CMOVL),
    (Base:340; Count:2; Mnem:oc_CMOVNGE),
   {4D_0}
    (Base:340; Count:2; Mnem:oc_CMOVNL),
    (Base:340; Count:2; Mnem:oc_CMOVGE),
   {4E_0}
    (Base:340; Count:2; Mnem:oc_CMOVLE),
    (Base:340; Count:2; Mnem:oc_CMOVNG),
   {4F_0}
    (Base:340; Count:2; Mnem:oc_CMOVNLE),
    (Base:340; Count:2; Mnem:oc_CMOVG),
   {50_0}
    (Base:342; Count:2; Mnem:oc_MOVMSKPS),
   {50_1}
    (Base:344; Count:2; Mnem:oc_MOVMSKPD),
   {51_0}
    (Base:318; Count:2; Mnem:oc_SQRTPS),
   {51_1}
    (Base:346; Count:2; Mnem:oc_SQRTSS),
   {51_2}
    (Base:130; Count:2; Mnem:oc_SQRTPD),
   {51_3}
    (Base:348; Count:2; Mnem:oc_SQRTSD),
   {52_0}
    (Base:318; Count:2; Mnem:oc_RSQRTPS),
   {52_1}
    (Base:346; Count:2; Mnem:oc_RSQRTSS),
   {53_0}
    (Base:318; Count:2; Mnem:oc_RCPPS),
   {53_1}
    (Base:346; Count:2; Mnem:oc_RCPSS),
   {54_0}
    (Base:318; Count:2; Mnem:oc_ANDPS),
   {54_1}
    (Base:130; Count:2; Mnem:oc_ANDPD),
   {55_0}
    (Base:318; Count:2; Mnem:oc_ANDNPS),
   {55_1}
    (Base:130; Count:2; Mnem:oc_ANDNPD),
   {56_0}
    (Base:318; Count:2; Mnem:oc_ORPS),
   {56_1}
    (Base:130; Count:2; Mnem:oc_ORPD),
   {57_0}
    (Base:318; Count:2; Mnem:oc_XORPS),
   {57_1}
    (Base:130; Count:2; Mnem:oc_XORPD),
   {58_0}
    (Base:318; Count:2; Mnem:oc_ADDPS),
   {58_1}
    (Base:346; Count:2; Mnem:oc_ADDSS),
   {58_2}
    (Base:130; Count:2; Mnem:oc_ADDPD),
   {58_3}
    (Base:348; Count:2; Mnem:oc_ADDSD),
   {59_0}
    (Base:318; Count:2; Mnem:oc_MULPS),
   {59_1}
    (Base:346; Count:2; Mnem:oc_MULSS),
   {59_2}
    (Base:130; Count:2; Mnem:oc_MULPD),
   {59_3}
    (Base:348; Count:2; Mnem:oc_MULSD),
   {5A_0}
    (Base:350; Count:2; Mnem:oc_CVTPS2PD),
   {5A_1}
    (Base:352; Count:2; Mnem:oc_CVTPD2PS),
   {5A_2}
    (Base:354; Count:2; Mnem:oc_CVTSS2SD),
   {5A_3}
    (Base:356; Count:2; Mnem:oc_CVTSD2SS),
   {5B_0}
    (Base:358; Count:2; Mnem:oc_CVTDQ2PS),
   {5B_1}
    (Base:360; Count:2; Mnem:oc_CVTPS2DQ),
   {5B_2}
    (Base:360; Count:2; Mnem:oc_CVTTPS2DQ),
   {5C_0}
    (Base:318; Count:2; Mnem:oc_SUBPS),
   {5C_1}
    (Base:346; Count:2; Mnem:oc_SUBSS),
   {5C_2}
    (Base:130; Count:2; Mnem:oc_SUBPD),
   {5C_3}
    (Base:348; Count:2; Mnem:oc_SUBSD),
   {5D_0}
    (Base:318; Count:2; Mnem:oc_MINPS),
   {5D_1}
    (Base:346; Count:2; Mnem:oc_MINSS),
   {5D_2}
    (Base:130; Count:2; Mnem:oc_MINPD),
   {5D_3}
    (Base:348; Count:2; Mnem:oc_MINSD),
   {5E_0}
    (Base:318; Count:2; Mnem:oc_DIVPS),
   {5E_1}
    (Base:346; Count:2; Mnem:oc_DIVSS),
   {5E_2}
    (Base:130; Count:2; Mnem:oc_DIVPD),
   {5E_3}
    (Base:348; Count:2; Mnem:oc_DIVSD),
   {5F_0}
    (Base:318; Count:2; Mnem:oc_MAXPS),
   {5F_1}
    (Base:346; Count:2; Mnem:oc_MAXSS),
   {5F_2}
    (Base:130; Count:2; Mnem:oc_MAXPD),
   {5F_3}
    (Base:348; Count:2; Mnem:oc_MAXSD),
   {60_0}
    (Base:362; Count:2; Mnem:oc_PUNPCKLBW),
   {60_1}
    (Base:229; Count:2; Mnem:oc_PUNPCKLBW),
   {61_0}
    (Base:362; Count:2; Mnem:oc_PUNPCKLWD),
   {61_1}
    (Base:229; Count:2; Mnem:oc_PUNPCKLWD),
   {62_0}
    (Base:362; Count:2; Mnem:oc_PUNPCKLDQ),
   {62_1}
    (Base:229; Count:2; Mnem:oc_PUNPCKLDQ),
   {63_0}
    (Base:362; Count:2; Mnem:oc_PACKSSWB),
   {63_1}
    (Base:229; Count:2; Mnem:oc_PACKSSWB),
   {64_0}
    (Base:362; Count:2; Mnem:oc_PCMPGTB),
   {64_1}
    (Base:229; Count:2; Mnem:oc_PCMPGTB),
   {65_0}
    (Base:362; Count:2; Mnem:oc_PCMPGTW),
   {65_1}
    (Base:229; Count:2; Mnem:oc_PCMPGTW),
   {66_0}
    (Base:362; Count:2; Mnem:oc_PCMPGTD),
   {66_1}
    (Base:229; Count:2; Mnem:oc_PCMPGTD),
   {67_0}
    (Base:227; Count:2; Mnem:oc_PACKUSWB),
   {67_1}
    (Base:229; Count:2; Mnem:oc_PACKUSWB),
   {68_0}
    (Base:227; Count:2; Mnem:oc_PUNPCKHBW),
   {68_1}
    (Base:229; Count:2; Mnem:oc_PUNPCKHBW),
   {69_0}
    (Base:227; Count:2; Mnem:oc_PUNPCKHWD),
   {69_1}
    (Base:229; Count:2; Mnem:oc_PUNPCKHWD),
   {6A_0}
    (Base:227; Count:2; Mnem:oc_PUNPCKHDQ),
   {6A_1}
    (Base:229; Count:2; Mnem:oc_PUNPCKHDQ),
   {6B_0}
    (Base:227; Count:2; Mnem:oc_PACKSSDW),
   {6B_1}
    (Base:229; Count:2; Mnem:oc_PACKSSDW),
   {6C_0}
    (Base:229; Count:2; Mnem:oc_PUNPCKLQDQ),
   {6D_0}
    (Base:229; Count:2; Mnem:oc_PUNPCKHQDQ),
   {6E_0}
    (Base:364; Count:2; Mnem:oc_MOVD),
   {6E_1}
    (Base:364; Count:2; Mnem:oc_MOVD),
    (Base:366; Count:2; Mnem:oc_MOVQ),
   {6E_2}
    (Base:368; Count:2; Mnem:oc_MOVD),
   {6E_3}
    (Base:368; Count:2; Mnem:oc_MOVD),
    (Base:370; Count:2; Mnem:oc_MOVQ),
   {6F_0}
    (Base:372; Count:2; Mnem:oc_MOVQ),
   {6F_1}
    (Base:374; Count:2; Mnem:oc_MOVDQA),
   {6F_2}
    (Base:374; Count:2; Mnem:oc_MOVDQU),
   {70_0}
    (Base:376; Count:3; Mnem:oc_PSHUFW),
   {70_1}
    (Base:282; Count:3; Mnem:oc_PSHUFLW),
   {70_2}
    (Base:282; Count:3; Mnem:oc_PSHUFHW),
   {70_3}
    (Base:282; Count:3; Mnem:oc_PSHUFD),
   {71_0}
    (Base:379; Count:2; Mnem:oc_PSRLW),
   {71_1}
    (Base:381; Count:2; Mnem:oc_PSRLW),
   {71_2}
    (Base:379; Count:2; Mnem:oc_PSRAW),
   {71_3}
    (Base:381; Count:2; Mnem:oc_PSRAW),
   {71_4}
    (Base:379; Count:2; Mnem:oc_PSLLW),
   {71_5}
    (Base:381; Count:2; Mnem:oc_PSLLW),
   {72_0}
    (Base:379; Count:2; Mnem:oc_PSRLD),
   {72_1}
    (Base:381; Count:2; Mnem:oc_PSRLD),
   {72_2}
    (Base:379; Count:2; Mnem:oc_PSRAD),
   {72_3}
    (Base:381; Count:2; Mnem:oc_PSRAD),
   {72_4}
    (Base:379; Count:2; Mnem:oc_PSLLD),
   {72_5}
    (Base:381; Count:2; Mnem:oc_PSLLD),
   {73_0}
    (Base:379; Count:2; Mnem:oc_PSRLQ),
   {73_1}
    (Base:381; Count:2; Mnem:oc_PSRLQ),
   {73_2}
    (Base:381; Count:2; Mnem:oc_PSRLDQ),
   {73_3}
    (Base:379; Count:2; Mnem:oc_PSLLQ),
   {73_4}
    (Base:381; Count:2; Mnem:oc_PSLLQ),
   {73_5}
    (Base:381; Count:2; Mnem:oc_PSLLDQ),
   {74_0}
    (Base:227; Count:2; Mnem:oc_PCMPEQB),
   {74_1}
    (Base:229; Count:2; Mnem:oc_PCMPEQB),
   {75_0}
    (Base:227; Count:2; Mnem:oc_PCMPEQW),
   {75_1}
    (Base:229; Count:2; Mnem:oc_PCMPEQW),
   {76_0}
    (Base:227; Count:2; Mnem:oc_PCMPEQD),
   {76_1}
    (Base:229; Count:2; Mnem:oc_PCMPEQD),
   {77_0}
    (Mnem:oc_EMMS),
   {78_0}
    (Base:383; Count:2; Mnem:oc_VMREAD),
   {78_1}
    (Base:385; Count:2; Mnem:oc_VMREAD),
   {79_0}
    (Base:387; Count:2; Mnem:oc_VMWRITE),
   {79_1}
    (Base:389; Count:2; Mnem:oc_VMWRITE),
   {7C_0}
    (Base:130; Count:2; Mnem:oc_HADDPD),
   {7C_1}
    (Base:318; Count:2; Mnem:oc_HADDPS),
   {7D_0}
    (Base:130; Count:2; Mnem:oc_HSUBPD),
   {7D_1}
    (Base:318; Count:2; Mnem:oc_HSUBPS),
   {7E_0}
    (Base:391; Count:2; Mnem:oc_MOVD),
   {7E_1}
    (Base:391; Count:2; Mnem:oc_MOVD),
    (Base:393; Count:2; Mnem:oc_MOVQ),
   {7E_2}
    (Base:395; Count:2; Mnem:oc_MOVD),
   {7E_3}
    (Base:395; Count:2; Mnem:oc_MOVD),
    (Base:397; Count:2; Mnem:oc_MOVQ),
   {7E_4}
    (Base:124; Count:2; Mnem:oc_MOVQ),
   {7F_0}
    (Base:399; Count:2; Mnem:oc_MOVQ),
   {7F_1}
    (Base:401; Count:2; Mnem:oc_MOVDQA),
   {7F_2}
    (Base:401; Count:2; Mnem:oc_MOVDQU),
   {80_0}
    (Base:403; Count:1; Mnem:oc_JO),
   {81_0}
    (Base:403; Count:1; Mnem:oc_JNO),
   {82_0}
    (Base:403; Count:1; Mnem:oc_JB),
    (Base:403; Count:1; Mnem:oc_JNAE),
    (Base:403; Count:1; Mnem:oc_JC),
   {83_0}
    (Base:403; Count:1; Mnem:oc_JNB),
    (Base:403; Count:1; Mnem:oc_JAE),
    (Base:403; Count:1; Mnem:oc_JNC),
   {84_0}
    (Base:403; Count:1; Mnem:oc_JZ),
    (Base:403; Count:1; Mnem:oc_JE),
   {85_0}
    (Base:403; Count:1; Mnem:oc_JNZ),
    (Base:403; Count:1; Mnem:oc_JNE),
   {86_0}
    (Base:403; Count:1; Mnem:oc_JBE),
    (Base:403; Count:1; Mnem:oc_JNA),
   {87_0}
    (Base:403; Count:1; Mnem:oc_JNBE),
    (Base:403; Count:1; Mnem:oc_JA),
   {88_0}
    (Base:403; Count:1; Mnem:oc_JS),
   {89_0}
    (Base:403; Count:1; Mnem:oc_JNS),
   {8A_0}
    (Base:403; Count:1; Mnem:oc_JP),
    (Base:403; Count:1; Mnem:oc_JPE),
   {8B_0}
    (Base:403; Count:1; Mnem:oc_JNP),
    (Base:403; Count:1; Mnem:oc_JPO),
   {8C_0}
    (Base:403; Count:1; Mnem:oc_JL),
    (Base:403; Count:1; Mnem:oc_JNGE),
   {8D_0}
    (Base:403; Count:1; Mnem:oc_JNL),
    (Base:403; Count:1; Mnem:oc_JGE),
   {8E_0}
    (Base:403; Count:1; Mnem:oc_JLE),
    (Base:403; Count:1; Mnem:oc_JNG),
   {8F_0}
    (Base:403; Count:1; Mnem:oc_JNLE),
    (Base:403; Count:1; Mnem:oc_JG),
   {90_0}
    (Base:404; Count:1; Mnem:oc_SETO),
   {91_0}
    (Base:404; Count:1; Mnem:oc_SETNO),
   {92_0}
    (Base:404; Count:1; Mnem:oc_SETB),
    (Base:404; Count:1; Mnem:oc_SETNAE),
    (Base:404; Count:1; Mnem:oc_SETC),
   {93_0}
    (Base:404; Count:1; Mnem:oc_SETNB),
    (Base:404; Count:1; Mnem:oc_SETAE),
    (Base:404; Count:1; Mnem:oc_SETNC),
   {94_0}
    (Base:404; Count:1; Mnem:oc_SETZ),
    (Base:404; Count:1; Mnem:oc_SETE),
   {95_0}
    (Base:404; Count:1; Mnem:oc_SETNZ),
    (Base:404; Count:1; Mnem:oc_SETNE),
   {96_0}
    (Base:404; Count:1; Mnem:oc_SETBE),
    (Base:404; Count:1; Mnem:oc_SETNA),
   {97_0}
    (Base:404; Count:1; Mnem:oc_SETNBE),
    (Base:404; Count:1; Mnem:oc_SETA),
   {98_0}
    (Base:404; Count:1; Mnem:oc_SETS),
   {99_0}
    (Base:404; Count:1; Mnem:oc_SETNS),
   {9A_0}
    (Base:404; Count:1; Mnem:oc_SETP),
    (Base:404; Count:1; Mnem:oc_SETPE),
   {9B_0}
    (Base:404; Count:1; Mnem:oc_SETNP),
    (Base:404; Count:1; Mnem:oc_SETPO),
   {9C_0}
    (Base:404; Count:1; Mnem:oc_SETL),
    (Base:404; Count:1; Mnem:oc_SETNGE),
   {9D_0}
    (Base:404; Count:1; Mnem:oc_SETNL),
    (Base:404; Count:1; Mnem:oc_SETGE),
   {9E_0}
    (Base:404; Count:1; Mnem:oc_SETLE),
    (Base:404; Count:1; Mnem:oc_SETNG),
   {9F_0}
    (Base:404; Count:1; Mnem:oc_SETNLE),
    (Base:404; Count:1; Mnem:oc_SETG),
   {A0_0}
    (Base:405; Count:2; Mnem:oc_PUSH),
   {A1_0}
    (Base:407; Count:2; Mnem:oc_POP),
   {A2_0}
    (Base:409; Count:5; Mnem:oc_CPUID),
   {A3_0}
    (Base:414; Count:2; Mnem:oc_BT),
   {A4_0}
    (Base:416; Count:3; Mnem:oc_SHLD),
   {A5_0}
    (Base:419; Count:3; Mnem:oc_SHLD),
   {A8_0}
    (Base:422; Count:2; Mnem:oc_PUSH),
   {A9_0}
    (Base:424; Count:2; Mnem:oc_POP),
   {AA_0}
    (Base:426; Count:1; Mnem:oc_RSM),
   {AB_0}
    (Base:427; Count:2; Mnem:oc_BTS),
   {AC_0}
    (Base:416; Count:3; Mnem:oc_SHRD),
   {AD_0}
    (Base:419; Count:3; Mnem:oc_SHRD),
   {AE_0}
    (Base:429; Count:25; Mnem:oc_FXSAVE),
   {AE_1}
    (Base:454; Count:33; Mnem:oc_FXSAVE),
   {AE_2}
    (Base:487; Count:25; Mnem:oc_FXRSTOR),
   {AE_3}
    (Base:512; Count:33; Mnem:oc_FXRSTOR),
   {AE_4}
    (Base:545; Count:1; Mnem:oc_LDMXCSR),
   {AE_5}
    (Base:546; Count:1; Mnem:oc_STMXCSR),
   {AE_6}
    (Base:547; Count:27; Mnem:oc_XSAVE),
   {AE_7}
    (Base:574; Count:35; Mnem:oc_XSAVE),
   {AE_8}
    (Mnem:oc_LFENCE),
   {AE_9}
    (Base:609; Count:27; Mnem:oc_XRSTOR),
   {AE_10}
    (Base:636; Count:35; Mnem:oc_XRSTOR),
   {AE_11}
    (Mnem:oc_MFENCE),
   {AE_12}
    (Mnem:oc_SFENCE),
   {AE_13}
    (Base:102; Count:1; Mnem:oc_CLFLUSH),
   {AF_0}
    (Base:671; Count:2; Mnem:oc_IMUL),
   {B0_0}
    (Base:673; Count:3; Mnem:oc_CMPXCHG),
   {B1_0}
    (Base:676; Count:3; Mnem:oc_CMPXCHG),
   {B2_0}
    (Base:679; Count:3; Mnem:oc_LSS),
   {B3_0}
    (Base:427; Count:2; Mnem:oc_BTR),
   {B4_0}
    (Base:682; Count:3; Mnem:oc_LFS),
   {B5_0}
    (Base:685; Count:3; Mnem:oc_LGS),
   {B6_0}
    (Base:688; Count:2; Mnem:oc_MOVZX),
   {B7_0}
    (Base:690; Count:2; Mnem:oc_MOVZX),
   {B8_0}
    (Mnem:oc_JMPE),
   {B8_1}
    (Base:671; Count:2; Mnem:oc_POPCNT),
   {B9_0}
    (Base:692; Count:2; Mnem:oc_UD),
   {BA_0}
    (Base:694; Count:2; Mnem:oc_BT),
   {BA_1}
    (Base:696; Count:2; Mnem:oc_BTS),
   {BA_2}
    (Base:696; Count:2; Mnem:oc_BTR),
   {BA_3}
    (Base:696; Count:2; Mnem:oc_BTC),
   {BB_0}
    (Base:427; Count:2; Mnem:oc_BTC),
   {BC_0}
    (Base:671; Count:2; Mnem:oc_BSF),
   {BD_0}
    (Base:671; Count:2; Mnem:oc_BSR),
   {BE_0}
    (Base:688; Count:2; Mnem:oc_MOVSX),
   {BF_0}
    (Base:690; Count:2; Mnem:oc_MOVSX),
   {C0_0}
    (Base:698; Count:2; Mnem:oc_XADD),
   {C1_0}
    (Base:700; Count:2; Mnem:oc_XADD),
   {C2_0}
    (Base:276; Count:3; Mnem:oc_CMPPS),
   {C2_1}
    (Base:702; Count:3; Mnem:oc_CMPSS),
   {C2_2}
    (Base:279; Count:3; Mnem:oc_CMPPD),
   {C2_3}
    (Base:705; Count:3; Mnem:oc_CMPSD),
   {C3_0}
    (Base:708; Count:2; Mnem:oc_MOVNTI),
   {C4_0}
    (Base:710; Count:3; Mnem:oc_PINSRW),
    (Base:713; Count:3; Mnem:oc_PINSRW),
   {C4_1}
    (Base:303; Count:3; Mnem:oc_PINSRW),
    (Base:716; Count:3; Mnem:oc_PINSRW),
   {C5_0}
    (Base:719; Count:3; Mnem:oc_PEXTRW),
   {C5_1}
    (Base:722; Count:3; Mnem:oc_PEXTRW),
   {C6_0}
    (Base:276; Count:3; Mnem:oc_SHUFPS),
   {C6_1}
    (Base:279; Count:3; Mnem:oc_SHUFPD),
   {C7_0}
    (Base:725; Count:5; Mnem:oc_CMPXCHG8B),
   {C7_1}
    (Base:725; Count:5; Mnem:oc_CMPXCHG8B),
    (Base:730; Count:5; Mnem:oc_CMPXCHG16B),
   {C7_2}
    (Base:735; Count:1; Mnem:oc_VMPTRLD),
   {C7_3}
    (Base:736; Count:1; Mnem:oc_VMCLEAR),
   {C7_4}
    (Base:735; Count:1; Mnem:oc_VMXON),
   {C7_5}
    (Base:736; Count:1; Mnem:oc_VMPTRST),
   {C8_0}
    (Base:737; Count:1; Mnem:oc_BSWAP),
   {D0_0}
    (Base:130; Count:2; Mnem:oc_ADDSUBPD),
   {D0_1}
    (Base:318; Count:2; Mnem:oc_ADDSUBPS),
   {D1_0}
    (Base:227; Count:2; Mnem:oc_PSRLW),
   {D1_1}
    (Base:229; Count:2; Mnem:oc_PSRLW),
   {D2_0}
    (Base:227; Count:2; Mnem:oc_PSRLD),
   {D2_1}
    (Base:229; Count:2; Mnem:oc_PSRLD),
   {D3_0}
    (Base:227; Count:2; Mnem:oc_PSRLQ),
   {D3_1}
    (Base:229; Count:2; Mnem:oc_PSRLQ),
   {D4_0}
    (Base:227; Count:2; Mnem:oc_PADDQ),
   {D4_1}
    (Base:229; Count:2; Mnem:oc_PADDQ),
   {D5_0}
    (Base:227; Count:2; Mnem:oc_PMULLW),
   {D5_1}
    (Base:229; Count:2; Mnem:oc_PMULLW),
   {D6_0}
    (Base:738; Count:2; Mnem:oc_MOVQ),
   {D6_1}
    (Base:740; Count:2; Mnem:oc_MOVQ2DQ),
   {D6_2}
    (Base:742; Count:2; Mnem:oc_MOVDQ2Q),
   {D7_0}
    (Base:744; Count:2; Mnem:oc_PMOVMSKB),
   {D7_1}
    (Base:746; Count:2; Mnem:oc_PMOVMSKB),
   {D8_0}
    (Base:227; Count:2; Mnem:oc_PSUBUSB),
   {D8_1}
    (Base:229; Count:2; Mnem:oc_PSUBUSB),
   {D9_0}
    (Base:227; Count:2; Mnem:oc_PSUBUSW),
   {D9_1}
    (Base:229; Count:2; Mnem:oc_PSUBUSW),
   {DA_0}
    (Base:227; Count:2; Mnem:oc_PMINUB),
   {DA_1}
    (Base:229; Count:2; Mnem:oc_PMINUB),
   {DB_0}
    (Base:362; Count:2; Mnem:oc_PAND),
   {DB_1}
    (Base:229; Count:2; Mnem:oc_PAND),
   {DC_0}
    (Base:227; Count:2; Mnem:oc_PADDUSB),
   {DC_1}
    (Base:229; Count:2; Mnem:oc_PADDUSB),
   {DD_0}
    (Base:227; Count:2; Mnem:oc_PADDUSW),
   {DD_1}
    (Base:229; Count:2; Mnem:oc_PADDUSW),
   {DE_0}
    (Base:227; Count:2; Mnem:oc_PMAXUB),
   {DE_1}
    (Base:229; Count:2; Mnem:oc_PMAXUB),
   {DF_0}
    (Base:227; Count:2; Mnem:oc_PANDN),
   {DF_1}
    (Base:229; Count:2; Mnem:oc_PANDN),
   {E0_0}
    (Base:227; Count:2; Mnem:oc_PAVGB),
   {E0_1}
    (Base:229; Count:2; Mnem:oc_PAVGB),
   {E1_0}
    (Base:227; Count:2; Mnem:oc_PSRAW),
   {E1_1}
    (Base:229; Count:2; Mnem:oc_PSRAW),
   {E2_0}
    (Base:227; Count:2; Mnem:oc_PSRAD),
   {E2_1}
    (Base:229; Count:2; Mnem:oc_PSRAD),
   {E3_0}
    (Base:227; Count:2; Mnem:oc_PAVGW),
   {E3_1}
    (Base:229; Count:2; Mnem:oc_PAVGW),
   {E4_0}
    (Base:227; Count:2; Mnem:oc_PMULHUW),
   {E4_1}
    (Base:229; Count:2; Mnem:oc_PMULHUW),
   {E5_0}
    (Base:227; Count:2; Mnem:oc_PMULHW),
   {E5_1}
    (Base:229; Count:2; Mnem:oc_PMULHW),
   {E6_0}
    (Base:748; Count:2; Mnem:oc_CVTPD2DQ),
   {E6_1}
    (Base:748; Count:2; Mnem:oc_CVTTPD2DQ),
   {E6_2}
    (Base:750; Count:2; Mnem:oc_CVTDQ2PD),
   {E7_0}
    (Base:752; Count:2; Mnem:oc_MOVNTQ),
   {E7_1}
    (Base:754; Count:2; Mnem:oc_MOVNTDQ),
   {E8_0}
    (Base:227; Count:2; Mnem:oc_PSUBSB),
   {E8_1}
    (Base:229; Count:2; Mnem:oc_PSUBSB),
   {E9_0}
    (Base:227; Count:2; Mnem:oc_PSUBSW),
   {E9_1}
    (Base:229; Count:2; Mnem:oc_PSUBSW),
   {EA_0}
    (Base:227; Count:2; Mnem:oc_PMINSW),
   {EA_1}
    (Base:229; Count:2; Mnem:oc_PMINSW),
   {EB_0}
    (Base:227; Count:2; Mnem:oc_POR),
   {EB_1}
    (Base:229; Count:2; Mnem:oc_POR),
   {EC_0}
    (Base:227; Count:2; Mnem:oc_PADDSB),
   {EC_1}
    (Base:229; Count:2; Mnem:oc_PADDSB),
   {ED_0}
    (Base:227; Count:2; Mnem:oc_PADDSW),
   {ED_1}
    (Base:229; Count:2; Mnem:oc_PADDSW),
   {EE_0}
    (Base:227; Count:2; Mnem:oc_PMAXSW),
   {EE_1}
    (Base:229; Count:2; Mnem:oc_PMAXSW),
   {EF_0}
    (Base:227; Count:2; Mnem:oc_PXOR),
   {EF_1}
    (Base:229; Count:2; Mnem:oc_PXOR),
   {F0_0}
    (Base:756; Count:2; Mnem:oc_LDDQU),
   {F1_0}
    (Base:227; Count:2; Mnem:oc_PSLLW),
   {F1_1}
    (Base:229; Count:2; Mnem:oc_PSLLW),
   {F2_0}
    (Base:227; Count:2; Mnem:oc_PSLLD),
   {F2_1}
    (Base:229; Count:2; Mnem:oc_PSLLD),
   {F3_0}
    (Base:227; Count:2; Mnem:oc_PSLLQ),
   {F3_1}
    (Base:229; Count:2; Mnem:oc_PSLLQ),
   {F4_0}
    (Base:227; Count:2; Mnem:oc_PMULUDQ),
   {F4_1}
    (Base:229; Count:2; Mnem:oc_PMULUDQ),
   {F5_0}
    (Base:362; Count:2; Mnem:oc_PMADDWD),
   {F5_1}
    (Base:229; Count:2; Mnem:oc_PMADDWD),
   {F6_0}
    (Base:227; Count:2; Mnem:oc_PSADBW),
   {F6_1}
    (Base:229; Count:2; Mnem:oc_PSADBW),
   {F7_0}
    (Base:758; Count:3; Mnem:oc_MASKMOVQ),
   {F7_1}
    (Base:761; Count:3; Mnem:oc_MASKMOVDQU),
   {F8_0}
    (Base:227; Count:2; Mnem:oc_PSUBB),
   {F8_1}
    (Base:229; Count:2; Mnem:oc_PSUBB),
   {F9_0}
    (Base:227; Count:2; Mnem:oc_PSUBW),
   {F9_1}
    (Base:229; Count:2; Mnem:oc_PSUBW),
   {FA_0}
    (Base:227; Count:2; Mnem:oc_PSUBD),
   {FA_1}
    (Base:229; Count:2; Mnem:oc_PSUBD),
   {FB_0}
    (Base:227; Count:2; Mnem:oc_PSUBQ),
   {FB_1}
    (Base:229; Count:2; Mnem:oc_PSUBQ),
   {FC_0}
    (Base:227; Count:2; Mnem:oc_PADDB),
   {FC_1}
    (Base:229; Count:2; Mnem:oc_PADDB),
   {FD_0}
    (Base:227; Count:2; Mnem:oc_PADDW),
   {FD_1}
    (Base:229; Count:2; Mnem:oc_PADDW),
   {FE_0}
    (Base:227; Count:2; Mnem:oc_PADDD),
   {FE_1}
    (Base:229; Count:2; Mnem:oc_PADDD)
  );

const
  TwoByteArgs: array[0..763]of TOpcodeArg = (
   {00_0 SLDT}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_w),
    (Name:an_LDTR; Flags:[afNoDispl]),
   {00_0 SLDT}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_vqp),
    (Name:an_LDTR; Flags:[afNoDispl]),
   {00_1 STR}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_w),
    (Name:an_TR; Flags:[afNoDispl]),
   {00_1 STR}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_vqp),
    (Name:an_TR; Flags:[afNoDispl]),
   {00_2 LLDT}
    (Name:an_LDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (A:am_E; T:at_w),
   {00_3 LTR}
    (Name:an_TR; Flags:[afDst,afNoDepend,afNoDispl]),
    (A:am_E; T:at_w),
   {00_4 VERR, 00_5 VERW}
    (A:am_E; T:at_w),
   {01_0 SGDT}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_s),
    (Name:an_GDTR; Flags:[afNoDispl]),
   {01_5 SIDT}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_s),
    (Name:an_IDTR; Flags:[afNoDispl]),
   {01_6 MONITOR}
    (Name:an__DSi_LrAXJ; Flags:[afNoDepend,afNoDispl]; A:am_BA; T:at_b),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_d),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_d),
   {01_7 MWAIT}
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_d),
   {01_8 LGDT}
    (Name:an_GDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (A:am_M; T:at_s),
   {01_9 XGETBV}
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_d),
    (Name:an_XCR; Flags:[afNoDispl]),
   {01_10 XSETBV}
    (Name:an_XCR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_d),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
   {01_11 LIDT}
    (Name:an_IDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (A:am_M; T:at_s),
   {01_12 SMSW}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_w),
    (Name:an_MSW; Flags:[afNoDispl,afNr]; nr:0; T:at_w),
   {01_12 SMSW}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_vqp),
    (Name:an_MSW; Flags:[afNoDispl,afNr]; nr:0; T:at_w),
   {01_13 LMSW}
    (Name:an_MSW; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_w),
    (A:am_E; T:at_w),
   {01_14 INVLPG}
    (Flags:[afNoDepend]; A:am_M),
   {01_15 SWAPGS}
    (Name:an_GS; Flags:[afDst,afNoDispl,afNr]; nr:5; T:at_w),
    (Name:an_IA32_KERNEL_GSBASE; Flags:[afDst,afNoDispl,afNr]; nr:258),
   {01_16 RDTSCP}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eCX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1; T:at_d),
    (Name:an_IA32_TIME_STAMP_COUNTER; Flags:[afNoDispl,afNr]; nr:16),
    (Name:an_IA32_TSC_AUX; Flags:[afNoDispl,afNr]; nr:259),
   {02_0 LAR, 03_0 LSL}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_M; T:at_w),
   {02_0 LAR, 03_0 LSL}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_R; T:at_v),
   {05_0 LOADALL}
    (Name:an_AX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_w),
    (Name:an_CX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1; T:at_w),
    (Name:an_DX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an_BX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3; T:at_w),
    (Name:an_SP; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4; T:at_w),
    (Name:an_BP; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5; T:at_w),
    (Name:an_SI; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6; T:at_w),
    (Name:an_DI; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7; T:at_w),
    (Name:an_Flags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_w),
    (Name:an_ES; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_w),
    (Name:an_SS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an_DS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3; T:at_w),
    (Name:an_MSW; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_w),
    (Name:an_TR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_LDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_GDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_IDTR; Flags:[afDst,afNoDepend,afNoDispl]),
   {05_1 SYSCALL}
    (Name:an_rCX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1; T:at_q),
    (Name:an_R11; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:17; T:at_q),
    (Name:an_SS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an_EFlags; Flags:[afNoDepend,afNoDispl]; A:am_F; T:at_d),
    (Name:an_IA32_LSTAR; Flags:[afNoDispl,afNr]; nr:130),
    (Name:an_IA32_FMASK; Flags:[afNoDispl,afNr]; nr:132),
   {06_0 CLTS}
    (Name:an_CR0; Flags:[afDst,afNoDispl,afNr]; nr:0),
   {07_0 LOADALL}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_eCX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1; T:at_d),
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_EBX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3; T:at_d),
    (Name:an_ESP; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4; T:at_d),
    (Name:an_eBP; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5; T:at_d),
    (Name:an_ESI; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6; T:at_d),
    (Name:an_EDI; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7; T:at_d),
    (Name:an_EFlags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_d),
    (Name:an_ES; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_w),
    (Name:an_SS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an_DS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3; T:at_w),
    (Name:an_FS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4; T:at_w),
    (Name:an_GS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5; T:at_w),
    (Name:an_CR0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_DR6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6; T:at_d),
    (Name:an_DR7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7; T:at_d),
    (Name:an_TR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_LDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_GDTR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_IDTR; Flags:[afDst,afNoDepend,afNoDispl]),
   {07_1 SYSRET}
    (Name:an_SS; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_w),
    (Name:an_EFlags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_d),
    (Name:an_R11; Flags:[afNoDepend,afNoDispl,afNr]; nr:17; T:at_q),
    (Name:an_rCX; Flags:[afNoDepend,afNoDispl,afNr]; nr:1; T:at_q),
    (Name:an_IA32_STAR; Flags:[afNoDispl,afNr]; nr:129),
   {0D_0 None, 18_1 PREFETCHNTA, 18_2 PREFETCHT0, 18_3 PREFETCHT1, 18_4 PREFETCHT2,
    AE_13 CLFLUSH}
    (Flags:[afNoDepend]; A:am_M; T:at_b),
   {0D_1 None}
    (Flags:[afNoDepend]; T:at_b),
   {10_0 MOVUPS, 28_0 MOVAPS}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_ps),
    (A:am_W; T:at_ps),
   {10_1 MOVSS}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_ss),
    (A:am_W; T:at_ss),
   {10_2 MOVUPD, 28_1 MOVAPD}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_pd),
    (A:am_W; T:at_pd),
   {10_3 MOVSD}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_sd),
    (A:am_W; T:at_sd),
   {11_0 MOVUPS, 29_0 MOVAPS}
    (Flags:[afDst,afNoDepend]; A:am_W; T:at_ps),
    (A:am_V; T:at_ps),
   {11_1 MOVSS}
    (Flags:[afDst,afNoDepend]; A:am_W; T:at_ss),
    (A:am_V; T:at_ss),
   {11_2 MOVUPD, 29_1 MOVAPD}
    (Flags:[afDst,afNoDepend]; A:am_W; T:at_pd),
    (A:am_V; T:at_pd),
   {11_3 MOVSD}
    (Flags:[afDst,afNoDepend]; A:am_W; T:at_sd),
    (A:am_V; T:at_sd),
   {12_0 MOVHLPS, 16_0 MOVLHPS}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_q),
    (A:am_U; T:at_q),
   {12_1 MOVLPS, 12_2 MOVLPD, 16_1 MOVHPS, 16_2 MOVHPD}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_q),
    (A:am_M; T:at_q),
   {12_3 MOVDDUP, 12_4 MOVSLDUP, 16_3 MOVSHDUP, 7E_4 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_q),
    (A:am_W; T:at_q),
   {13_0 MOVLPS, 13_1 MOVLPD, 17_0 MOVHPS, 17_1 MOVHPD}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_q),
    (A:am_V; T:at_q),
   {14_0 UNPCKLPS, 15_0 UNPCKHPS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_W; T:at_q),
   {14_1 UNPCKLPD, 15_1 UNPCKHPD, 3A_17 DPPD, 51_2 SQRTPD, 54_1 ANDPD, 55_1 ANDNPD,
    56_1 ORPD, 57_1 XORPD, 58_2 ADDPD, 59_2 MULPD, 5C_2 SUBPD, 5D_2 MINPD,
    5E_2 DIVPD, 5F_2 MAXPD, 7C_0 HADDPD, 7D_0 HSUBPD, D0_0 ADDSUBPD}
    (Flags:[afDst]; A:am_V; T:at_pd),
    (A:am_W; T:at_pd),
   {18_0 HINT_NOP, 19_0 HINT_NOP, 1A_0 HINT_NOP, 1B_0 HINT_NOP, 1C_0 HINT_NOP,
    1D_0 HINT_NOP, 1E_0 HINT_NOP, 1F_0 HINT_NOP}
    (Flags:[afNoDepend]; A:am_G; T:at_v),
    (Flags:[afNoDepend]; A:am_E; T:at_v),
   {18_5 HINT_NOP, 18_6 HINT_NOP, 18_7 HINT_NOP, 18_8 HINT_NOP, 1F_1 NOP, 1F_2 HINT_NOP,
    1F_3 HINT_NOP, 1F_4 HINT_NOP, 1F_5 HINT_NOP, 1F_6 HINT_NOP, 1F_7 HINT_NOP,
    1F_8 HINT_NOP}
    (Flags:[afNoDepend]; A:am_E; T:at_v),
   {20_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_d),
    (A:am_C; T:at_d),
   {20_1 MOV}
    (Flags:[afDst,afNoDepend]; A:am_H; T:at_d),
    (A:am_C; T:at_d),
   {20_2 MOV}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_q),
    (A:am_C; T:at_q),
   {20_3 MOV}
    (Flags:[afDst,afNoDepend]; A:am_H; T:at_q),
    (A:am_C; T:at_q),
   {21_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_d),
    (A:am_D; T:at_d),
   {21_1 MOV}
    (Flags:[afDst,afNoDepend]; A:am_H; T:at_d),
    (A:am_D; T:at_d),
   {21_2 MOV}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_q),
    (A:am_D; T:at_q),
   {21_3 MOV}
    (Flags:[afDst,afNoDepend]; A:am_H; T:at_q),
    (A:am_D; T:at_q),
   {22_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_C; T:at_d),
    (A:am_R; T:at_d),
   {22_1 MOV}
    (Flags:[afDst,afNoDepend]; A:am_C; T:at_d),
    (A:am_H; T:at_d),
   {22_2 MOV}
    (Flags:[afDst,afNoDepend]; A:am_C; T:at_q),
    (A:am_R; T:at_q),
   {22_3 MOV}
    (Flags:[afDst,afNoDepend]; A:am_C; T:at_q),
    (A:am_H; T:at_q),
   {23_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_D; T:at_d),
    (A:am_R; T:at_d),
   {23_1 MOV, 23_3 MOV}
    (Flags:[afDst,afNoDepend]; A:am_D; T:at_q),
    (A:am_H; T:at_q),
   {23_2 MOV}
    (Flags:[afDst,afNoDepend]; A:am_D; T:at_q),
    (A:am_R; T:at_q),
   {24_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_R; T:at_d),
    (A:am_T; T:at_d),
   {24_1 MOV}
    (Flags:[afDst,afNoDepend]; A:am_H; T:at_d),
    (A:am_T; T:at_d),
   {26_0 MOV}
    (Flags:[afDst,afNoDepend]; A:am_T; T:at_d),
    (A:am_R; T:at_d),
   {26_1 MOV}
    (Flags:[afDst,afNoDepend]; A:am_T; T:at_d),
    (A:am_H; T:at_d),
   {2A_0 CVTPI2PS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_Q; T:at_pi),
   {2A_1 CVTSI2SS}
    (Flags:[afDst]; A:am_V; T:at_ss),
    (A:am_E; T:at_dqp),
   {2A_2 CVTPI2PD}
    (Flags:[afDst]; A:am_V; T:at_pd),
    (A:am_Q; T:at_pi),
   {2A_3 CVTSI2SD}
    (Flags:[afDst]; A:am_V; T:at_sd),
    (A:am_E; T:at_dqp),
   {2B_0 MOVNTPS}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_ps),
    (A:am_V; T:at_ps),
   {2B_1 MOVNTPD}
    (Flags:[afDst]; A:am_M; T:at_pd),
    (A:am_V; T:at_pd),
   {2C_0 CVTTPS2PI, 2D_0 CVTPS2PI}
    (Flags:[afDst]; A:am_P; T:at_pi),
    (A:am_W; T:at_psq),
   {2C_1 CVTTSS2SI, 2D_1 CVTSS2SI}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_W; T:at_ss),
   {2C_2 CVTTPD2PI, 2D_2 CVTPD2PI}
    (Flags:[afDst]; A:am_P; T:at_pi),
    (A:am_W; T:at_pd),
   {2C_3 CVTTSD2SI, 2D_3 CVTSD2SI}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_W; T:at_sd),
   {2E_0 UCOMISS, 2F_0 COMISS}
    (A:am_V; T:at_ss),
    (A:am_W; T:at_ss),
   {2E_1 UCOMISD, 2F_1 COMISD}
    (A:am_V; T:at_sd),
    (A:am_W; T:at_sd),
   {30_0 WRMSR}
    (Name:an_MSR; Flags:[afDst,afNoDepend,afNoDispl]),
    (Name:an_rCX; Flags:[afNoDispl,afNr]; nr:1; T:at_dqp),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_dqp),
    (Name:an_rDX; Flags:[afNoDispl,afNr]; nr:2; T:at_dqp),
   {31_0 RDTSC}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_IA32_TIME_STAMP_COUNTER; Flags:[afNoDispl,afNr]; nr:16),
   {32_0 RDMSR}
    (Name:an_rAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_dqp),
    (Name:an_rDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_dqp),
    (Name:an_rCX; Flags:[afNoDispl,afNr]; nr:1; T:at_dqp),
    (Name:an_MSR; Flags:[afNoDispl]),
   {33_0 RDPMC}
    (Name:an_eAX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_PMC; Flags:[afNoDispl]),
   {34_0 SYSENTER}
    (Name:an_SS; Flags:[afDst,afNoDispl,afNr]; nr:2; A:am_S2; T:at_w),
    (Name:an_ESP; Flags:[afDst,afNoDispl,afNr]; nr:4; T:at_d),
    (Name:an_IA32_SYSENTER_CS; Flags:[afNoDispl,afNr]; nr:372),
    (Name:an_IA32_SYSENTER_ESP; Flags:[afNoDispl,afNr]; nr:373),
    (Name:an_IA32_SYSENTER_EIP; Flags:[afNoDispl,afNr]; nr:374),
   {34_1 SYSENTER}
    (Name:an_SS; Flags:[afDst,afNoDispl,afNr]; nr:2; A:am_S2; T:at_w),
    (Name:an_RSP; Flags:[afDst,afNoDispl,afNr]; nr:4; T:at_q),
    (Name:an_IA32_SYSENTER_CS; Flags:[afNoDispl,afNr]; nr:372),
    (Name:an_IA32_SYSENTER_ESP; Flags:[afNoDispl,afNr]; nr:373),
    (Name:an_IA32_SYSENTER_EIP; Flags:[afNoDispl,afNr]; nr:374),
   {35_0 SYSEXIT}
    (Name:an_SS; Flags:[afDst,afNoDispl,afNr]; nr:2; A:am_S2; T:at_w),
    (Name:an_ESP; Flags:[afDst,afNoDispl,afNr]; nr:4; T:at_dqp),
    (Name:an_IA32_SYSENTER_CS; Flags:[afNoDispl,afNr]; nr:372),
    (Name:an_rCX; Flags:[afNoDispl,afNr]; nr:1; T:at_dqp),
    (Name:an_rDX; Flags:[afNoDispl,afNr]; nr:2; T:at_dqp),
   {37_0 GETSEC}
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
   {38_0 PSHUFB, 38_2 PHADDW, 38_4 PHADDD, 38_6 PHADDSW, 38_8 PMADDUBSW, 38_10 PHSUBW,
    38_12 PHSUBD, 38_14 PHSUBSW, 38_16 PSIGNB, 38_18 PSIGNW, 38_20 PSIGND, 38_22 PMULHRSW,
    38_28 PABSB, 38_30 PABSW, 38_32 PABSD, 3A_7 PALIGNR, 67_0 PACKUSWB, 68_0 PUNPCKHBW,
    69_0 PUNPCKHWD, 6A_0 PUNPCKHDQ, 6B_0 PACKSSDW, 74_0 PCMPEQB, 75_0 PCMPEQW,
    76_0 PCMPEQD, D1_0 PSRLW, D2_0 PSRLD, D3_0 PSRLQ, D4_0 PADDQ, D5_0 PMULLW,
    D8_0 PSUBUSB, D9_0 PSUBUSW, DA_0 PMINUB, DC_0 PADDUSB, DD_0 PADDUSW, DE_0 PMAXUB,
    DF_0 PANDN, E0_0 PAVGB, E1_0 PSRAW, E2_0 PSRAD, E3_0 PAVGW, E4_0 PMULHUW,
    E5_0 PMULHW, E8_0 PSUBSB, E9_0 PSUBSW, EA_0 PMINSW, EB_0 POR, EC_0 PADDSB,
    ED_0 PADDSW, EE_0 PMAXSW, EF_0 PXOR, F1_0 PSLLW, F2_0 PSLLD, F3_0 PSLLQ,
    F4_0 PMULUDQ, F6_0 PSADBW, F8_0 PSUBB, F9_0 PSUBW, FA_0 PSUBD, FB_0 PSUBQ,
    FC_0 PADDB, FD_0 PADDW, FE_0 PADDD}
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_Q; T:at_q),
   {38_1 PSHUFB, 38_3 PHADDW, 38_5 PHADDD, 38_7 PHADDSW, 38_9 PMADDUBSW, 38_11 PHSUBW,
    38_13 PHSUBD, 38_15 PHSUBSW, 38_17 PSIGNB, 38_19 PSIGNW, 38_21 PSIGND, 38_23 PMULHRSW,
    38_29 PABSB, 38_31 PABSW, 38_33 PABSD, 38_40 PMULDQ, 38_41 PCMPEQQ, 38_43 PACKUSDW,
    38_50 PCMPGTQ, 38_51 PMINSB, 38_52 PMINSD, 38_53 PMINUW, 38_54 PMINUD, 38_55 PMAXSB,
    38_56 PMAXSD, 38_57 PMAXUW, 38_58 PMAXUD, 38_59 PMULLD, 38_60 PHMINPOSUW, 3A_8 PALIGNR,
    60_1 PUNPCKLBW, 61_1 PUNPCKLWD, 62_1 PUNPCKLDQ, 63_1 PACKSSWB, 64_1 PCMPGTB,
    65_1 PCMPGTW, 66_1 PCMPGTD, 67_1 PACKUSWB, 68_1 PUNPCKHBW, 69_1 PUNPCKHWD,
    6A_1 PUNPCKHDQ, 6B_1 PACKSSDW, 6C_0 PUNPCKLQDQ, 6D_0 PUNPCKHQDQ, 74_1 PCMPEQB,
    75_1 PCMPEQW, 76_1 PCMPEQD, D1_1 PSRLW, D2_1 PSRLD, D3_1 PSRLQ, D4_1 PADDQ,
    D5_1 PMULLW, D8_1 PSUBUSB, D9_1 PSUBUSW, DA_1 PMINUB, DB_1 PAND, DC_1 PADDUSB,
    DD_1 PADDUSW, DE_1 PMAXUB, DF_1 PANDN, E0_1 PAVGB, E1_1 PSRAW, E2_1 PSRAD,
    E3_1 PAVGW, E4_1 PMULHUW, E5_1 PMULHW, E8_1 PSUBSB, E9_1 PSUBSW, EA_1 PMINSW,
    EB_1 POR, EC_1 PADDSB, ED_1 PADDSW, EE_1 PMAXSW, EF_1 PXOR, F1_1 PSLLW,
    F2_1 PSLLD, F3_1 PSLLQ, F4_1 PMULUDQ, F5_1 PMADDWD, F6_1 PSADBW, F8_1 PSUBB,
    F9_1 PSUBW, FA_1 PSUBD, FB_1 PSUBQ, FC_1 PADDB, FD_1 PADDW, FE_1 PADDD}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
   {38_24 PBLENDVB}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
   {38_25 BLENDVPS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_W; T:at_ps),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
   {38_26 BLENDVPD}
    (Flags:[afDst]; A:am_V; T:at_pd),
    (A:am_W; T:at_pd),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
   {38_27 PTEST}
    (A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
   {38_34 PMOVSXBW, 38_37 PMOVSXWD, 38_39 PMOVSXDQ, 38_44 PMOVZXBW, 38_47 PMOVZXWD,
    38_49 PMOVZXDQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_M; T:at_q),
   {38_34 PMOVSXBW, 38_35 PMOVSXBD, 38_36 PMOVSXBQ, 38_37 PMOVSXWD, 38_38 PMOVSXWQ,
    38_39 PMOVSXDQ, 38_44 PMOVZXBW, 38_45 PMOVZXBD, 38_46 PMOVZXBQ, 38_47 PMOVZXWD,
    38_48 PMOVZXWQ, 38_49 PMOVZXDQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_U; T:at_dq),
   {38_35 PMOVSXBD, 38_38 PMOVSXWQ, 38_45 PMOVZXBD, 38_48 PMOVZXWQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_M; T:at_d),
   {38_36 PMOVSXBQ, 38_46 PMOVZXBQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_M; T:at_w),
   {38_42 MOVNTDQA}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_M; T:at_dq),
   {38_61 INVEPT, 38_63 INVVPID}
    (A:am_G; T:at_d),
    (A:am_M; T:at_dq),
   {38_62 INVEPT, 38_64 INVVPID}
    (A:am_G; T:at_q),
    (A:am_M; T:at_dq),
   {38_65 MOVBE}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_M; T:at_vqp),
   {38_66 CRC32}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_E; T:at_b),
   {38_67 MOVBE}
    (Flags:[afDst]; A:am_M; T:at_vqp),
    (A:am_G; T:at_vqp),
   {38_68 CRC32}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_E; T:at_vqp),
   {3A_0 ROUNDPS}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_ps),
    (A:am_W; T:at_ps),
    (A:am_I; T:at_b),
   {3A_1 ROUNDPD}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_ps),
    (A:am_W; T:at_pd),
    (A:am_I; T:at_b),
   {3A_2 ROUNDSS}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_ss),
    (A:am_W; T:at_ss),
    (A:am_I; T:at_b),
   {3A_3 ROUNDSD}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_sd),
    (A:am_W; T:at_sd),
    (A:am_I; T:at_b),
   {3A_4 BLENDPS, C2_0 CMPPS, C6_0 SHUFPS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_W; T:at_ps),
    (A:am_I; T:at_b),
   {3A_5 BLENDPD, C2_2 CMPPD, C6_1 SHUFPD}
    (Flags:[afDst]; A:am_V; T:at_pd),
    (A:am_W; T:at_pd),
    (A:am_I; T:at_b),
   {3A_6 PBLENDW, 3A_18 MPSADBW, 70_1 PSHUFLW, 70_2 PSHUFHW, 70_3 PSHUFD}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
    (A:am_I; T:at_b),
   {3A_9 PEXTRB}
    (Flags:[afDst]; A:am_M; T:at_b),
    (A:am_V; T:at_dq),
    (A:am_I; T:at_b),
   {3A_9 PEXTRB, 3A_10 PEXTRW}
    (Flags:[afDst]; A:am_R; T:at_dqp),
    (A:am_V; T:at_dq),
    (A:am_I; T:at_b),
   {3A_10 PEXTRW}
    (Flags:[afDst]; A:am_M; T:at_w),
    (A:am_V; T:at_dq),
    (A:am_I; T:at_b),
   {3A_11 PEXTRD, 3A_12 EXTRACTPS}
    (Flags:[afDst]; A:am_E; T:at_d),
    (A:am_V; T:at_dq),
    (A:am_I; T:at_b),
   {3A_11 PEXTRQ}
    (Flags:[afDst]; A:am_E; T:at_qp),
    (A:am_V; T:at_dq),
    (A:am_I; T:at_b),
   {3A_13 PINSRB}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_M; T:at_b),
    (A:am_I; T:at_b),
   {3A_13 PINSRB, C4_1 PINSRW}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_R; T:at_dqp),
    (A:am_I; T:at_b),
   {3A_14 INSERTPS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_U; T:at_ps),
    (A:am_I; T:at_b),
   {3A_14 INSERTPS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_M; T:at_d),
    (A:am_I; T:at_b),
   {3A_15 PINSRD}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_E; T:at_d),
    (A:am_I; T:at_b),
   {3A_15 PINSRQ}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_E; T:at_qp),
    (A:am_I; T:at_b),
   {3A_16 DPPS, 51_0 SQRTPS, 52_0 RSQRTPS, 53_0 RCPPS, 54_0 ANDPS, 55_0 ANDNPS,
    56_0 ORPS, 57_0 XORPS, 58_0 ADDPS, 59_0 MULPS, 5C_0 SUBPS, 5D_0 MINPS,
    5E_0 DIVPS, 5F_0 MAXPS, 7C_1 HADDPS, 7D_1 HSUBPS, D0_1 ADDSUBPS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_W; T:at_ps),
   {3A_19 PCMPESTRM}
    (Name:an_XMM0; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
    (A:am_I; T:at_b),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_dqp),
    (Name:an_rDX; Flags:[afNoDispl,afNr]; nr:2; T:at_dqp),
   {3A_20 PCMPESTRI}
    (Name:an_rCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_dqp),
    (A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
    (A:am_I; T:at_b),
    (Name:an_rAX; Flags:[afNoDispl,afNr]; nr:0; T:at_dqp),
    (Name:an_rDX; Flags:[afNoDispl,afNr]; nr:2; T:at_dqp),
   {3A_21 PCMPISTRM}
    (Name:an_XMM0; Flags:[afDst,afNoDispl,afNr]; nr:0),
    (A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
    (A:am_I; T:at_b),
   {3A_22 PCMPISTRI}
    (Name:an_rCX; Flags:[afDst,afNoDispl,afNr]; nr:1; T:at_dqp),
    (A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
    (A:am_I; T:at_b),
   {40_0 CMOVO, 41_0 CMOVNO, 42_0 CMOVB, 42_0 CMOVNAE, 42_0 CMOVC, 43_0 CMOVNB,
    43_0 CMOVAE, 43_0 CMOVNC, 44_0 CMOVZ, 44_0 CMOVE, 45_0 CMOVNZ, 45_0 CMOVNE,
    46_0 CMOVBE, 46_0 CMOVNA, 47_0 CMOVNBE, 47_0 CMOVA, 48_0 CMOVS, 49_0 CMOVNS,
    4A_0 CMOVP, 4A_0 CMOVPE, 4B_0 CMOVNP, 4B_0 CMOVPO, 4C_0 CMOVL, 4C_0 CMOVNGE,
    4D_0 CMOVNL, 4D_0 CMOVGE, 4E_0 CMOVLE, 4E_0 CMOVNG, 4F_0 CMOVNLE, 4F_0 CMOVG}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
   {50_0 MOVMSKPS}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_U; T:at_ps),
   {50_1 MOVMSKPD}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_U; T:at_pd),
   {51_1 SQRTSS, 52_1 RSQRTSS, 53_1 RCPSS, 58_1 ADDSS, 59_1 MULSS, 5C_1 SUBSS,
    5D_1 MINSS, 5E_1 DIVSS, 5F_1 MAXSS}
    (Flags:[afDst]; A:am_V; T:at_ss),
    (A:am_W; T:at_ss),
   {51_3 SQRTSD, 58_3 ADDSD, 59_3 MULSD, 5C_3 SUBSD, 5D_3 MINSD, 5E_3 DIVSD,
    5F_3 MAXSD}
    (Flags:[afDst]; A:am_V; T:at_sd),
    (A:am_W; T:at_sd),
   {5A_0 CVTPS2PD}
    (Flags:[afDst]; A:am_V; T:at_pd),
    (A:am_W; T:at_ps),
   {5A_1 CVTPD2PS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_W; T:at_pd),
   {5A_2 CVTSS2SD}
    (Flags:[afDst]; A:am_V; T:at_sd),
    (A:am_W; T:at_ss),
   {5A_3 CVTSD2SS}
    (Flags:[afDst]; A:am_V; T:at_ss),
    (A:am_W; T:at_sd),
   {5B_0 CVTDQ2PS}
    (Flags:[afDst]; A:am_V; T:at_ps),
    (A:am_W; T:at_dq),
   {5B_1 CVTPS2DQ, 5B_2 CVTTPS2DQ}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_W; T:at_ps),
   {60_0 PUNPCKLBW, 61_0 PUNPCKLWD, 62_0 PUNPCKLDQ, 63_0 PACKSSWB, 64_0 PCMPGTB,
    65_0 PCMPGTW, 66_0 PCMPGTD, DB_0 PAND, F5_0 PMADDWD}
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_Q; T:at_d),
   {6E_0 MOVD, 6E_1 MOVD}
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_E; T:at_d),
   {6E_1 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_P; T:at_q),
    (A:am_E; T:at_qp),
   {6E_2 MOVD, 6E_3 MOVD}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_E; T:at_d),
   {6E_3 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_E; T:at_qp),
   {6F_0 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_P; T:at_q),
    (A:am_Q; T:at_q),
   {6F_1 MOVDQA, 6F_2 MOVDQU}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_W; T:at_dq),
   {70_0 PSHUFW}
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_Q; T:at_q),
    (A:am_I; T:at_b),
   {71_0 PSRLW, 71_2 PSRAW, 71_4 PSLLW, 72_0 PSRLD, 72_2 PSRAD, 72_4 PSLLD,
    73_0 PSRLQ, 73_3 PSLLQ}
    (Flags:[afDst]; A:am_N; T:at_q),
    (A:am_I; T:at_b),
   {71_1 PSRLW, 71_3 PSRAW, 71_5 PSLLW, 72_1 PSRLD, 72_3 PSRAD, 72_5 PSLLD,
    73_1 PSRLQ, 73_2 PSRLDQ, 73_4 PSLLQ, 73_5 PSLLDQ}
    (Flags:[afDst]; A:am_U; T:at_dq),
    (A:am_I; T:at_b),
   {78_0 VMREAD}
    (Flags:[afDst]; A:am_E; T:at_d),
    (A:am_G; T:at_d),
   {78_1 VMREAD}
    (Flags:[afDst]; A:am_E; T:at_q),
    (A:am_G; T:at_q),
   {79_0 VMWRITE}
    (A:am_G; T:at_d),
    (A:am_E; T:at_d),
   {79_1 VMWRITE}
    (A:am_G; T:at_q),
    (A:am_E; T:at_q),
   {7E_0 MOVD, 7E_1 MOVD}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_d),
    (A:am_P; T:at_q),
   {7E_1 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_qp),
    (A:am_P; T:at_q),
   {7E_2 MOVD, 7E_3 MOVD}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_d),
    (A:am_V; T:at_dq),
   {7E_3 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_qp),
    (A:am_V; T:at_dq),
   {7F_0 MOVQ}
    (Flags:[afDst,afNoDepend]; A:am_Q; T:at_q),
    (A:am_P; T:at_q),
   {7F_1 MOVDQA, 7F_2 MOVDQU}
    (Flags:[afDst,afNoDepend]; A:am_W; T:at_dq),
    (A:am_V; T:at_dq),
   {80_0 JO, 81_0 JNO, 82_0 JB, 82_0 JNAE, 82_0 JC, 83_0 JNB, 83_0 JAE, 83_0 JNC,
    84_0 JZ, 84_0 JE, 85_0 JNZ, 85_0 JNE, 86_0 JBE, 86_0 JNA, 87_0 JNBE, 87_0 JA,
    88_0 JS, 89_0 JNS, 8A_0 JP, 8A_0 JPE, 8B_0 JNP, 8B_0 JPO, 8C_0 JL, 8C_0 JNGE,
    8D_0 JNL, 8D_0 JGE, 8E_0 JLE, 8E_0 JNG, 8F_0 JNLE, 8F_0 JG}
    (A:am_J; T:at_vds),
   {90_0 SETO, 91_0 SETNO, 92_0 SETB, 92_0 SETNAE, 92_0 SETC, 93_0 SETNB, 93_0 SETAE,
    93_0 SETNC, 94_0 SETZ, 94_0 SETE, 95_0 SETNZ, 95_0 SETNE, 96_0 SETBE, 96_0 SETNA,
    97_0 SETNBE, 97_0 SETA, 98_0 SETS, 99_0 SETNS, 9A_0 SETP, 9A_0 SETPE, 9B_0 SETNP,
    9B_0 SETPO, 9C_0 SETL, 9C_0 SETNGE, 9D_0 SETNL, 9D_0 SETGE, 9E_0 SETLE,
    9E_0 SETNG, 9F_0 SETNLE, 9F_0 SETG}
    (Flags:[afDst,afNoDepend]; A:am_E; T:at_b),
   {A0_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_FS; Flags:[afNr]; nr:4; A:am_S33; T:at_w),
   {A1_0 POP}
    (Name:an_FS; Flags:[afDst,afNoDepend,afNr]; nr:4; A:am_S33; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {A2_0 CPUID}
    (Name:an_IA32_BIOS_SIGN_ID; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:139),
    (Name:an_eAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_eCX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1; T:at_d),
    (Name:an_EDX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_EBX; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3; T:at_d),
   {A3_0 BT}
    (A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
   {A4_0 SHLD, AC_0 SHRD}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
    (A:am_I; T:at_b),
   {A5_0 SHLD, AD_0 SHRD}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
    (Name:an_CL; Flags:[afNr]; nr:1; T:at_b),
   {A8_0 PUSH}
    (Name:an_SSiLrSPJ; Flags:[afDst,afNoDispl]; A:am_SC),
    (Name:an_GS; Flags:[afNr]; nr:5; A:am_S33; T:at_w),
   {A9_0 POP}
    (Name:an_GS; Flags:[afDst,afNoDepend,afNr]; nr:5; A:am_S33; T:at_w),
    (Name:an_SSiLrSPJ; Flags:[afNoDispl]; A:am_SC),
   {AA_0 RSM}
    (Name:an_Flags; Flags:[afDst,afNoDepend,afNoDispl]; A:am_F; T:at_w),
   {AB_0 BTS, B3_0 BTR, BB_0 BTC}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_G; T:at_vqp),
   {AE_0 FXSAVE}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_stx),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afNoDispl,afNr]; nr:7),
   {AE_1 FXSAVE}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_stx),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_XMM8; Flags:[afNoDispl,afNr]; nr:8),
    (Name:an_XMM9; Flags:[afNoDispl,afNr]; nr:9),
    (Name:an_XMM10; Flags:[afNoDispl,afNr]; nr:16),
    (Name:an_XMM11; Flags:[afNoDispl,afNr]; nr:17),
    (Name:an_XMM12; Flags:[afNoDispl,afNr]; nr:18),
    (Name:an_XMM13; Flags:[afNoDispl,afNr]; nr:19),
    (Name:an_XMM14; Flags:[afNoDispl,afNr]; nr:20),
    (Name:an_XMM15; Flags:[afNoDispl,afNr]; nr:21),
   {AE_2 FXRSTOR}
    (Name:an_ST; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (A:am_M; T:at_stx),
   {AE_3 FXRSTOR}
    (Name:an_ST; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_XMM8; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:8),
    (Name:an_XMM9; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:9),
    (Name:an_XMM10; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:16),
    (Name:an_XMM11; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:17),
    (Name:an_XMM12; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:18),
    (Name:an_XMM13; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:19),
    (Name:an_XMM14; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:20),
    (Name:an_XMM15; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:21),
    (A:am_M; T:at_stx),
   {AE_4 LDMXCSR}
    (A:am_M; T:at_d),
   {AE_5 STMXCSR}
    (Flags:[afDst]; A:am_M; T:at_d),
   {AE_6 XSAVE}
    (Flags:[afDst]; A:am_M),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afNoDispl,afNr]; nr:7),
   {AE_7 XSAVE}
    (Flags:[afDst]; A:am_M),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_ST; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afNoDispl,afNr]; nr:7),
    (Name:an_XMM8; Flags:[afNoDispl,afNr]; nr:8),
    (Name:an_XMM9; Flags:[afNoDispl,afNr]; nr:9),
    (Name:an_XMM10; Flags:[afNoDispl,afNr]; nr:16),
    (Name:an_XMM11; Flags:[afNoDispl,afNr]; nr:17),
    (Name:an_XMM12; Flags:[afNoDispl,afNr]; nr:18),
    (Name:an_XMM13; Flags:[afNoDispl,afNr]; nr:19),
    (Name:an_XMM14; Flags:[afNoDispl,afNr]; nr:20),
    (Name:an_XMM15; Flags:[afNoDispl,afNr]; nr:21),
   {AE_9 XRSTOR}
    (Name:an_ST; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (A:am_M),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
   {AE_10 XRSTOR}
    (Name:an_ST; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_ST1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_ST2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_ST3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_ST4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_ST5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_ST6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_ST7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_MMX0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_MMX1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_MMX2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_MMX3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_MMX4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_MMX5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_MMX6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_MMX7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_XMM0; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:0),
    (Name:an_XMM1; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:1),
    (Name:an_XMM2; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:2),
    (Name:an_XMM3; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:3),
    (Name:an_XMM4; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:4),
    (Name:an_XMM5; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:5),
    (Name:an_XMM6; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:6),
    (Name:an_XMM7; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:7),
    (Name:an_XMM8; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:8),
    (Name:an_XMM9; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:9),
    (Name:an_XMM10; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:16),
    (Name:an_XMM11; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:17),
    (Name:an_XMM12; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:18),
    (Name:an_XMM13; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:19),
    (Name:an_XMM14; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:20),
    (Name:an_XMM15; Flags:[afDst,afNoDepend,afNoDispl,afNr]; nr:21),
    (A:am_M),
    (Name:an_EDX; Flags:[afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_eAX; Flags:[afNoDispl,afNr]; nr:0; T:at_d),
   {AF_0 IMUL, B8_1 POPCNT, BC_0 BSF, BD_0 BSR}
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_E; T:at_vqp),
   {B0_0 CMPXCHG}
    (Flags:[afDst]; A:am_E; T:at_b),
    (Name:an_AL; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_b),
    (A:am_G; T:at_b),
   {B1_0 CMPXCHG}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (Name:an_rAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_vqp),
    (A:am_G; T:at_vqp),
   {B2_0 LSS}
    (Name:an_SS; Flags:[afDst,afNoDispl,afNr]; nr:2; A:am_S30; T:at_w),
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_M; T:at_ptp),
   {B4_0 LFS}
    (Name:an_FS; Flags:[afDst,afNoDispl,afNr]; nr:4; A:am_S30; T:at_w),
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_M; T:at_ptp),
   {B5_0 LGS}
    (Name:an_GS; Flags:[afDst,afNoDispl,afNr]; nr:5; A:am_S30; T:at_w),
    (Flags:[afDst]; A:am_G; T:at_vqp),
    (A:am_M; T:at_ptp),
   {B6_0 MOVZX, BE_0 MOVSX}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_vqp),
    (A:am_E; T:at_b),
   {B7_0 MOVZX, BF_0 MOVSX}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_vqp),
    (A:am_E; T:at_w),
   {B9_0 UD}
    (Flags:[afNoDepend]; A:am_G),
    (Flags:[afNoDepend]; A:am_E),
   {BA_0 BT}
    (A:am_E; T:at_vqp),
    (A:am_I; T:at_b),
   {BA_1 BTS, BA_2 BTR, BA_3 BTC}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (A:am_I; T:at_b),
   {C0_0 XADD}
    (Flags:[afDst]; A:am_E; T:at_b),
    (Flags:[afDst]; A:am_G; T:at_b),
   {C1_0 XADD}
    (Flags:[afDst]; A:am_E; T:at_vqp),
    (Flags:[afDst]; A:am_G; T:at_vqp),
   {C2_1 CMPSS}
    (Flags:[afDst]; A:am_V; T:at_ss),
    (A:am_W; T:at_ss),
    (A:am_I; T:at_b),
   {C2_3 CMPSD}
    (Flags:[afDst]; A:am_V; T:at_sd),
    (A:am_W; T:at_sd),
    (A:am_I; T:at_b),
   {C3_0 MOVNTI}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_dqp),
    (A:am_G; T:at_dqp),
   {C4_0 PINSRW}
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_R; T:at_dqp),
    (A:am_I; T:at_b),
   {C4_0 PINSRW}
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_M; T:at_w),
    (A:am_I; T:at_b),
   {C4_1 PINSRW}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_M; T:at_w),
    (A:am_I; T:at_b),
   {C5_0 PEXTRW}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_N; T:at_q),
    (A:am_I; T:at_b),
   {C5_1 PEXTRW}
    (Flags:[afDst]; A:am_G; T:at_dqp),
    (A:am_U; T:at_dq),
    (A:am_I; T:at_b),
   {C7_0 CMPXCHG8B, C7_1 CMPXCHG8B}
    (Flags:[afDst]; A:am_M; T:at_q),
    (Name:an_eAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_d),
    (Name:an_EDX; Flags:[afDst,afNoDispl,afNr]; nr:2; T:at_d),
    (Name:an_EBX; Flags:[afNoDispl,afNr]; nr:3; T:at_d),
    (Name:an_eCX; Flags:[afNoDispl,afNr]; nr:1; T:at_d),
   {C7_1 CMPXCHG16B}
    (Flags:[afDst]; A:am_M; T:at_dq),
    (Name:an_rAX; Flags:[afDst,afNoDispl,afNr]; nr:0; T:at_qp),
    (Name:an_rDX; Flags:[afDst,afNoDispl,afNr]; nr:2; T:at_qp),
    (Name:an_RBX; Flags:[afNoDispl,afNr]; nr:3; T:at_qp),
    (Name:an_rCX; Flags:[afNoDispl,afNr]; nr:1; T:at_qp),
   {C7_2 VMPTRLD, C7_4 VMXON}
    (A:am_M; T:at_q),
   {C7_3 VMCLEAR, C7_5 VMPTRST}
    (Flags:[afDst]; A:am_M; T:at_q),
   {C8_0 BSWAP}
    (Flags:[afDst]; A:am_Z; T:at_vqp),
   {D6_0 MOVQ}
    (Flags:[afDst]; A:am_W; T:at_q),
    (A:am_V; T:at_q),
   {D6_1 MOVQ2DQ}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_N; T:at_q),
   {D6_2 MOVDQ2Q}
    (Flags:[afDst,afNoDepend]; A:am_P; T:at_q),
    (A:am_U; T:at_q),
   {D7_0 PMOVMSKB}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_dqp),
    (A:am_N; T:at_q),
   {D7_1 PMOVMSKB}
    (Flags:[afDst,afNoDepend]; A:am_G; T:at_dqp),
    (A:am_U; T:at_dq),
   {E6_0 CVTPD2DQ, E6_1 CVTTPD2DQ}
    (Flags:[afDst]; A:am_V; T:at_dq),
    (A:am_W; T:at_pd),
   {E6_2 CVTDQ2PD}
    (Flags:[afDst]; A:am_V; T:at_pd),
    (A:am_W; T:at_dq),
   {E7_0 MOVNTQ}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_q),
    (A:am_P; T:at_q),
   {E7_1 MOVNTDQ}
    (Flags:[afDst,afNoDepend]; A:am_M; T:at_dq),
    (A:am_V; T:at_dq),
   {F0_0 LDDQU}
    (Flags:[afDst,afNoDepend]; A:am_V; T:at_dq),
    (A:am_M; T:at_dq),
   {F7_0 MASKMOVQ}
    (Name:an__DSi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_BD; T:at_q),
    (Flags:[afDst]; A:am_P; T:at_q),
    (A:am_N; T:at_q),
   {F7_1 MASKMOVDQU}
    (Name:an__DSi_LrDIJ; Flags:[afDst,afNoDepend,afNoDispl]; A:am_BD; T:at_dq),
    (A:am_V; T:at_dq),
    (A:am_U; T:at_dq)
  );

implementation
end .
